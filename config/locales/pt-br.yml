pt-BR:
  posxml_supported: "Suporte à POSXML"
  ruby_supported: "Suporte à Ruby"
  troubleshooting: "Resolução de problemas"
  description: "Aprenda a criar, publicar e gerenciar aplicações CloudWalk."
  author: "Autor"
  copy: "Copiar"
  version: "Versão"
  apps:
    globalpayments:
      title: "Global Payments"
      description: "Aplicação de pagamentos Global Payments"
      intro: "Aplicação de pagamentos Global Payments"
      versions:
        1.1.3:
          date: "08/09/2015"
          changelog:
            paragraph_1: "Primeiro release de produção"
  cli:
    setup:
      title: "CloudWalk CLI - Instalação"
      description: "Aprenda como instalar e como utilizar a CloudWalk CLI"
      introduction: "Este guia o conduzirá através do processo de instalação da CloudWalk CLI em ambientes Windows, Linux e Mac OS. Atente-se aos pré-requisitos e siga o processo de instalação com atenção."
      for_windows_users: "Para usuários Windows:"
      for_windows_unix_like: "Para usuários Linux e Mac OS:"
      table_of_contents:
        prerequisites: "Pré-requisitos"
        installing: "Instalação"
        commands: "Comandos disponíveis"
      prerequisites:
        installer: "Baixe o instalador disponível em:"
        more_info: "mais informações em:"
      installing:
        paragraph_1: "Assumindo que o pacote de instalação (<a href='https://dl.cloudwalk.io/cli/install.exe' target='_blank' class='external'>setup.exe</a>) já foi baixado, basta clicar duas vezes no arquivo e seguir as instruções de instalação."
        paragraph_2: "Assumindo que você já instalou o <a href='http://git-scm.com/book/en/v2/Getting-Started-Installing-Git' target='_blank' class='external'>Git</a> e o <a href='https://www.ruby-lang.org/en/documentation/installation' target='_blank' class='external'>Ruby</a>, digite no terminal (bash):"
        paragraph_3: "Ao finalizar a instalação, o comando <span class='code'>cloudwalk</span> estará disponível na interface de linha de comando. Caso você não tenha uma conta CloudWalk, você pode criar uma da seguinte forma:"
        paragraph_4: "Basta responder as perguntas e fazer o login:"
        paragraph_5: "Após acessar sua conta, comandos adicionais poderão ser executados:"
      commands:
        logout: "Finalizar sua sessão."
        apps: "Listar suas aplicações."
        app: "Gerenciar suas aplicações (criar, ver detalhes, editar e excluir)."
        keys: "Listar suas chaves SSH, que são utilizadas para acessar e fazer mudanças no seus repositórios."
        key: "Gerenciar suas chaves SSH keys (adicionar e remover)."
        logs: "Exibir logs em tempo real das aplicações."
        users: "Listar os usuários da sua conta."
        note: "Confira a lista completa de comandos disponíveis executando <strong>cloudwalk</strong> sem nenhum argumento adicional."
    creating_a_new_app:
      title: "CloudWalk CLI - Criando uma nova app"
      description: "Aprenda como criar uma nova aplicação com a CloudWalk CLI"
      introduction: "Este guia o conduzirá através do processo de criação e emulação de uma aplicação Ruby através da CloudWalk CLI. Atente-se aos pré-requisitos e siga todos os passos com atenção."
      table_of_contents:
        prerequisites: "Pré-requisitos"
        creating_the_new_app: "Criando a nova aplicação"
        emulating: "Emulando"
      prerequisites:
        cli_is_installed: "A CloudWalk CLI esteja devidamente instalada"
        git_is_configured: "O Git esteja configurado. Não tem certeza? Confira o seguinte artigo: <a href='https://help.github.com/articles/set-up-git' target='_blank' class='external'>https://help.github.com/articles/set-up-git</a>"
      creating_the_new_app:
        paragraph_1: "Assuming that the CloudWalk CLI is installed and that Git is properly configure, let's run <span class='code'>cloudwalk app create</span>:"
        paragraph_1: "Assumindo que a CloudWalk CLI está instalada e que o Git está configurado, execute o comando <span class='code'>cloudwalk app create</span>:"
        paragraph_2: "Vamos entender exatamente o que ocorreu:"
        paragraph_3: "Sua chave SSH em <code>~/.ssh/id_rsa.pub</code> foi automaticamente adicionada na sua conta"
        paragraph_4: "Um nome randômico foi definido, já que um nome não foi especificado (veja <span class='code'>cloudwalk help app create</span>)"
        paragraph_5: "A new folder was created with the new app name filled with the <a href='https://github.com/cloudwalkio/cloudwalk-skeleton' target='blank' class='external'>default app's</a> contents"
        paragraph_5: "Uma nova pasta foi criada com o nome da aplicação e preenchida com o conteúdo da <a href='https://github.com/cloudwalkio/cloudwalk-skeleton' target='blank' class='external'>aplicação padrão</a>"
      emulating:
        paragraph_1: "Com a aplicação criada, é possível emular a execução utilizando um dos seguintes comandos da CLI:"
        emulate: "Executa aplicações <strong>com</strong> o emulador gráfico. Uma nova janela será aberta com um dispositvo virtual com tela, botões e impressora. Utilize <span class='code'>cloudwalk help emulate</span> para aprender mais sobre este comando."
        run: "Executa aplicações <strong>sem</strong> o emulador gráfico. Como este é um modo texto, existem limitações, porém é muito útil para testes. Utilize <span class='code'>cloudwalk help run</span> para aprender mais sobre este comando."
    customizing_an_app:
      title: "CloudWalk CLI - Cutomizando uma app"
      description: "Aprenda como customizar uma aplicação Ruby com a CloudWalk CLI"
      introduction: "Este guia o conduzirá através do processo de customização de uma aplicação Ruby através da CloudWalk CLI. Atente-se aos pré-requisitos e siga todos os passos com atenção."
      table_of_contents:
        prerequisites: "Pré-requisitos"
        settings: "Configurações"
        source_code: "Código fonte"
        hello_world: "Hello world"
      prerequisites:
        previous_step: "Este guia assume que você completou o passo anterior:"
      settings:
        paragraph_1: "O CloudWalk Manager oferece uma interface web para customização das configurações da aplicação, e a CLI permite que estas configurações sejam customizadas através de linhas de comando. Ao executar o comando <span class='code'>cloudwalk app edit</span> as opções de configuração serão exibidas, com os respectivos valores atuais. Este comando requere que o ID ou o nome da aplicação seja informado, e neste exemplo, o nome <span class='code'>cloud-walking-1</span> será utilizado, entretanto, se for necessário verificar o ID ou o nome das aplicações, o comando <span class='code'>cloudwalk apps</span> pode ser utilizado:"
        paragraph_2: "Tanto o <strong>123</strong> quanto o nome <strong>cloud-walking-1</strong> pode ser utilizado para editar esta aplicação:"
        paragraph_3: "Ao finalizar as alterações, o comando <span class='code'>cloudwalk app show</span> pode ser utilizado:"
      source_code:
        paragraph_1: "Uma aplicação nova possui o seguinte código fonte no aqruivo <strong>lib/main.rb</strong>:"
        paragraph_2: "Este código descreve alguns pontos importantes sobre o desenvolvimento de uma aplicação. Confira detalhadamente:"
        paragraph_3: "Esta é a forma como as gems são adicionadas. Se é Ruby, tem que ter gems!"
        paragraph_4: "A gem <strong>simplehttp</strong> foi adicionada no arquivo <strong>Gemfile</strong> na raiz do projeto, e também é <a href='https://github.com/cloudwalkio/simplehttp' target='blank' class='external'>open source</a>. Se você for um programador Ruby experiente, isto é tudo que você precisa saber para começar a desenvolver suas próprias gems!"
        paragraph_5: "Este é ponto onde a classe Main é definida. Todas aplicações devem possuir a classe Main."
        paragraph_6: "Perceba que não necessariamente ela precisa herdar a classe Device. Opcionalmente você pode utilizar métodos da classe Device incluindo o nome da classe, por exemplo, ao invés de escrever puts, você escreveria <strong>Device.puts</strong>."
        paragraph_7: "Função que é chamada sempre que a aplicação é executada. Todas aplicações devem definir esta função. Atente-se ao fato que esta função é executada dentro de um <strong>loop</strong>, então leve isto em consideração."
        paragraph_8: "Exibe a string <strong>Card...</strong> no display do terminal."
        paragraph_9: "Para a execução, aguardando que uma tecla seja pressionada."
        paragraph_10: "No final do método <strong>Main.call</strong>, indica se deve continuar ou não no loop."
      hello_world:
        paragraph_1: "Como exemplo básico, podemos alterar esta aplicação para dar boas vindas ao usuário, perguntando pelo nome e exibindo uma saudação."
        paragraph_2: "Se você é um desenvolvedor Ruby, você deve estar imaginando um código mais ou menos assim:"
        paragraph_3: "Ao colocar esse código dentro do método <span class='code'>Main.call</span>, antes do <span class='code'>true</span> no final, a aplicação irá perguntar por um nome, e depois disso o nome será exibido na linha seguinte."
        paragraph_4: "Teste você mesmo! Faça as mudanças, execute <span class='code'>rake</span> e depois <span class='code'>cloudwalk emulate</span>. O arquivo <strong>main.rb</strong> deve ficar mais ou menos assim:"
    deploying_an_app:
      title: "CloudWalk CLI - Publicando uma app"
      description: "Aprenda como publicar uma aplicação Ruby com a CloudWalk CLI"
      introduction: "Este guia o conduzirá através do processo de publicação de uma aplicação Ruby através da CloudWalk CLI. Atente-se aos pré-requisitos e siga todos os passos com atenção."
      table_of_contents:
        prerequisites: "Pré-requisitos"
        deploying_with_git: "Publicando com o Git"
      prerequisites:
        previous_step: "Este guia assume que você tem a CloudWalk CLI instalada e uma aplicação Ruby funcional"
      deploying_with_git:
        paragraph_1: "Quando uma aplicação é criada, ela é inicializada com uma estrutura padrão, para facilitar a construção de provas de conceito, entretanto esta estrutura ainda não foi publicada na CloudWalk."
        paragraph_2: "Baseado na aplicação previamente criada e customizada (cloud-walking-1), vamos então fazer o <em>commit</em> das alterações:"
        paragraph_3: "O código disponível no repositório foi adicionado ao histórico de mudanças (mas ainda não foi publicado), execute então o comando para fazer a publicação: <span class='code'>git push</span>"
        paragraph_4: "No final deste processo, a aplicação estará publicada!"
  api:
    description: Descrição
    method: Método e formato da URL
    name: Nome
    response: Exemplo de resposta
    sample: Exemplo de utilização
    type: Tipo
    object_type: '{tipo}'
    version: '{versão}'
    overview:
      title: Developer API
      description: 'O Acesso a API deve ser feito através do endereço https://manager.cloudwalk.io/api.'
      table_of_contents:
        functionality: Funcionalidade
        versioning: Versionamento
        api_token: API Token
        rate_limiting: "Limite"
        crud: 'CRUD: Create, Retrieve, Update e Destroy'
        pagination: Paginação
      functionality:
        paragraph_1: O acesso a API deve ser feito a partir do domínio <span class='code'>https://api.cloudwalk.io/%{version}</span>.
        paragraph_2: As requisições devem ser feitas utilizando o protocolo <strong>HTTPS</strong>.
        paragraph_3: 'Todos os registros de data e hora são retornados no formato padrão ISO 8601:'
      versioning:
        paragraph_1: Ao utilizar a API do CloudWalk, é necessário informar a versão que está sendo utilizada. Atualmente somente a versão <strong>v1</strong> está disponível para utilização, mas eventualmente novas versões serão disponibilizadas.
        paragraph_2: 'Exemplo de URL: <span class="code">https://api.cloudwalk.io/v1/devices</span>'
      api_token:
        paragraph_1: 'Todas as operações disponíveis na interface API devem necessariamente utilizar uma API token válida. A geração/atualização da API token é feita diretamente no CloudWalk Manager, bastando para isso acessar o menu <strong>Minha conta</strong>, e então a opção <strong>API</strong>.'
        paragraph_2: 'Exemplo de URL:'
      rate_limiting:
        paragraph_1: "Por padrão, um endereço IP pode efetuar até 5.000 requisições por hora. O status do limite de requisições pode ser verificado no cabeçalho HTTP de qualquer requisição:"
      crud:
        paragraph_1: Para executar alguma operação em um recurso (aplicação, número lógico, grupo, etc), é feita uma requisição HTTP para uma URL utilizando o verbo HTTP apropriado.
        paragraph_2: 'Os quatro verbos HTTP utilizados em operações CRUD são:'
        paragraph_3: '<strong>GET: </strong>Busca um recurso específico ou uma coleção de recursos de uma URL. Por exemplo, <span class="code">GET /%{version}/devices</span> retornaria uma listagem com todos os números de série, enquanto que um <span class="code">GET /%{version}/devices/135</span> retornaria somente o número de série com o ID 135.'
        paragraph_4: '<strong>POST: </strong>Cria um novo recurso. Por exemplo, <span class="code">POST /%{version}/devices</span> criaria um novo número de série. A informação enviada na requisição POST seria então utilizada para preencher as propriedades do número de série.'
        paragraph_5: '<strong>PUT: </strong>Atualiza um recurso já existente. Por exemplo, <span class="code">PUT /%{version}/devices/135</span> atualizaria o número de série com o ID 135. A informação enviada na requisição PUT seria então utilizada para atualizar as propriedades do número de série.'
        paragraph_6: '<strong>DELETE: </strong>Exclui um recurso já existente. Por exemplo, <span class="code">DELETE /%{version}/devices/135</span> excluiria o número de série com o ID 135.'
      pagination:
        paragraph_1: Requisições que retornam múltiplos registros são paginadas, onde a paginação padrão são 30 registros por vez. As páginas sub-sequentes são definidas pelo parâmetro <span class='code'>&page</span>, que se inicia em 1. A quantidade padrão de registros retornados pode ser alterada pelo parâmetro <span class='code'>&per_page</span>, onde o máximo permitido é 100.
    v1:
      apps:
        description: Confira como as operações CRUD para aplicações devem ser usadas.
        title: Developer API - Aplicações
        table_of_contents:
          types: Tipos de aplicações
          attributes: Atributos de uma aplicação
          create: Criação de uma nova aplicação
          destroy: Exclusão de uma aplicação
          index: Listagem de todas aplicações
          show: Busca de uma aplicação específica
          update: Modificação de uma aplicação
        types:
          paragraph_1: Atualmente somente aplicações POSXML são suportadas, mas em breve aplicações Ruby também estarão disponíveis, então requisições de aplicação devem sempre indicar o tipo.
        attributes:
          list:
            authorizer_url: URL do autorizador que a aplicação irá se conectar
            communication_format: Formato da comunicação com o autorizador (HTTP, ISO8583 ou ISO20022).
            crc: <a href='http://en.wikipedia.org/wiki/Cyclic_redundancy_check' class='external'>CRC</a> da aplicação
            created_at: Timestamp da criação do registro (ISO 8601)
            created_by: ID do usuário que criou o registro
            created_via: Canal utilizado para criar o registro (Interface ou API)
            description: Breve descrição da aplicação
            displayable: Determina se a aplicação deve ou não ser exibida no menu de aplicativos
            id: ID do registro
            name: Nome da aplicação
            pos_display_label: Nome exibido no meu de aplicativos (se displayable for verdadeiro)
            language: Linguagem de programação utilizada no desenvolvimento da aplicação
            binary: Binário da aplicação
            size: Tamanho da aplicação, em bytes
            updated_at: Timestamp da atualização do registro (ISO 8601)
            uuid: Identificador Único Universal
          paragraph_1: 'Os seguintes atributos compõe uma aplicação:'
        create:
          paragraph_1: Cria uma nova aplicação.
        destroy:
          paragraph_1: Exclui uma aplicação.
        index:
          paragraph_1: Retorna um array com todas as aplicações.
        show:
          paragraph_1: Retorna os detalhes de uma aplicação específica.
        update:
          paragraph_1: Modifica uma aplicação já existente.
          paragraph_2: O bytecode enviado no parâmetro <strong>binary</strong> precisa estar encodado com Base64.
      assets:
        attributes:
          list:
            content: Binário do arquivo, codificado com Base64
            crc: <a href='http://en.wikipedia.org/wiki/Cyclic_redundancy_check' class='external'>CRC</a> do arquivo
            created_at: Timestamp da criação do registro (ISO 8601)
            created_by: ID do usuário que criou o registro
            created_via: Canal utilizado para criar o registro (Interface ou API)
            description: Descrição do arquivo
            id: ID do registro
            name: Nome do arquivo
            size: Tamanho do arquivo, em bytes
            updated_at: Timestamp da atualização do registro (ISO 8601)
            file_type: Tipo do arquivo (Asset ou Torrent)
          paragraph_1: 'Os seguintes atributos compõe um arquivo:'
        create:
          paragraph_1: Cria um novo arquivo.
          paragraph_2: "<strong>@file.dat</strong> é o arquivo que está sendo cadastrado, portanto, neste exemplo, existe um arquivo chamado <strong>file.dat</strong> no diretório corrente, em que se está executando o comando curl."
        description: Confira como as operações CRUD para arquivos devem ser usadas.
        destroy:
          paragraph_1: Exclui um arquivo.
        index:
          paragraph_1: Retorna um array com todos os arquivos.
        show:
          paragraph_1: Retorna os detalhes de um arquivo específico.
        table_of_contents:
          attributes: Atributos de um arquivo
          create: Cadastro de um novo arquivo
          destroy: Exclusão de um arquivo
          index: Listagem de todos arquivos
          show: Busca de um arquivo específico
          update: Atualização de um arquivo
        title: Developer API - Arquivos
        update:
          paragraph_1: Modifica um arquivo já existente.
      devices:
        attributes:
          list:
            created_at: Timestamp da criação do registro (ISO 8601)
            created_by: ID do usuário que criou o registro
            created_via: Canal utilizado para criar o registro (Interface ou API)
            enabled: Determina se o equipamento pode ou não acessar o CloudWalk (default true)
            id: ID do registro
            serial_number: Número de série do equipamento
            updated_at: Timestamp da atualização do registro (ISO 8601)
          paragraph_1: 'Os seguintes atributos compõe um dispositivo:'
        create:
          paragraph_1: Libera o acesso de um dispositivo ao CloudWalk.
        description: Confira como as operações CRUD para liberações de terminais devem ser usadas.
        destroy:
          paragraph_1: Exclui um dispositivo. O equipamento com o número de série excluído não terá mais acesso ao CloudWalk.
        index:
          paragraph_1: Retorna um array com todos os dispositivos.
        show:
          paragraph_1: Retorna os detalhes de um dispositivo específico.
        table_of_contents:
          attributes: Atributos de um dispositivo
          create: Liberação de um novo dispositivo
          destroy: Exclusão de um dispositivo
          index: Listagem de todos dispositivos
          show: Busca de um dispositivo específico
          update: Atualização de um dispositivo
        title: Developer API - Dispositivos
        update:
          paragraph_1: Modifica um dispositivo já existente.
      groups:
        description: Confira como as operações CRUD para grupos devem ser usadas.
        title: Developer API - Grupos
        name: nome do grupo
        table_of_contents:
          types: Tipos de grupos
          attributes: Atributos de um grupo
          create: Criação de um novo grupo
          destroy: Exclusão de um grupo
          index: Listagem de todos grupos
          show: Busca de um grupo específico
          update: Atualização de um grupo
        types:
          paragraph_1: Atualmente somente grupos POSXML são suportados, mas em breve grupos Ruby também estarão disponíveis, então requisições de grupo devem sempre indicar o tipo.
        attributes:
          list:
            created_at: Timestamp da criação do registro (ISO 8601)
            created_by: ID do usuário que criou o registro
            created_via: Canal utilizado para criar o registro (Interface ou API)
            id: ID do registro
            name: Nome do grupo
            updated_at: Timestamp da atualização do registro (ISO 8601)
          paragraph_1: 'Os seguintes atributos compõe um grupo:'
        create:
          paragraph_1: Cria um novo grupo.
        destroy:
          paragraph_1: Exclui um grupo. Esta operação só pode ser executada quando o grupo estiver vazio (sem aplicações ou número lógicos).
        index:
          paragraph_1: Retorna um array com todos os grupos.
        show:
          paragraph_1: Retorna os detalhes de um grupo específico.
        update:
          paragraph_1: Modifica um grupo já existente.
      logical_numbers:
        attributes:
          list:
            app_ids: Lista com o ID dos aplicativos (do grupo) que o número lógico tem acesso
            created_at: Timestamp da criação do registro (ISO 8601)
            created_by: ID do usuário que criou o registro
            created_via: Canal utilizado para criar o registro (Interface ou API)
            group_id: ID do grupo que o número lógico pertence
            id: ID do registro
            number: Número lógico
            updated_at: Timestamp da atualização do registro (ISO 8601)
          paragraph_1: 'Os seguintes atributos compõe um número lógico:'
        create:
          paragraph_1: Cria um novo número lógico.
        description: Confira como as operações CRUD para números lógicos devem ser usadas.
        destroy:
          paragraph_1: Exclui um número lógico. O equipamento com o número lógico excluído não conseguirá mais baixar aplicativos do CloudWalk.
        index:
          paragraph_1: Retorna um array com todos os números lógicos.
        show:
          paragraph_1: Retorna os detalhes de um número lógico específico.
        table_of_contents:
          attributes: Atributos de um número lógico
          create: Criação de um novo número lógico
          destroy: Exclusão de um número lógico
          index: Listagem de todos números lógicos
          show: Busca de um número lógico específico
          update: Atualização de um número lógico
        title: Developer API - Números lógicos
        update:
          paragraph_1: Modifica um número lógico já existente.
      transactions:
        attributes:
          list:
            app_name: Nome da aplicação que originou a transação
            detail: Detalhes adicionais da transação (pode ser vazio)
            finished_at: Timestamp do fim da transação (ISO 8601)
            framework_version: Versão do framework WALK instalado no dispositivo
            id: ID do registro
            logical_number: Número lógico do dispositivo
            serial_number: Número de série do dispositivo
            started_at: Timestamp do início da transação (ISO 8601)
            status: 'Status do registro: Sucesso <span class="code">success</span>, Processando <span class="code">running</span> ou Falha <span class="code">fail</span>'
            sent: Informação enviada para o host
            received: Informação recebida do host
            transaction_type: 'Tipo de registro: Liberação <span class="code">company</span>, Transação <span class="code">switch</span> ou Download <span class="code">get_asset</span>'
          paragraph_1: 'Os seguintes atributos compõe uma transação:'
        description: Os registros de transação possuem algumas siglas, nos campos transaction_type, status e received. Confira a definição de todas as siglas.
        index:
          paragraph_1: Retorna um array com todas as transações.
        search_by_multiple_params:
          paragraph_1: Retorna um array com todas as transações com os parâmetros definidos.
        search_by_serial_number:
          paragraph_1: Retorna um array com todas as transações que possuem o <strong>número de série</strong> definido no parâmetro <span class='code'>&serial_number</span>.
          paragraph_2: Também é possível consultar transações de um <strong>número lógico</strong> específico, bastando para isso definir o parâmetro <span class='code'>&logical_number</span>
          serial_number: número de série
        search_by_status:
          paragraph_1: Retorna um array com todas as transações que possuem o <strong>status</strong> definido no parâmetro <span class='code'>&status</span>.
        search_by_transaction_type:
          paragraph_1: Retorna um array com todas as transações que possuem o <strong>tipo de registro</strong> definido no parâmetro <span class='code'>&transaction_type</span>.
          transaction_type: tipo de registro
        table_of_contents:
          attributes: Atributos de uma transação
          index: Listagem de todas transações
          search_by_multiple_params: Consulta por múltiplos parâmetros
          search_by_serial_number: Consulta por número de série
          search_by_status: Consulta por status
          search_by_transaction_type: Consulta por tipo de registro
        title: Developer API - Transações
      parameters:
        attributes:
          list:
            created_at: Timestamp da criação do registro (ISO 8601)
            created_by: ID do usuário que criou o registro
            created_via: Canal utilizado para criar o registro (Interface ou API)
            description: Descrição do parâmetro
            group_id: ID do grupo, se o parâmetro pertencer a um grupo
            id: ID do registro
            key: Chave do parâmetro
            logical_number_id: ID do número lógico, se o parâmetro pertencer a um número lógico
            updated_at: Timestamp da atualização do registro (ISO 8601)
            value: Valor do parâmetro
          paragraph_1: Um parâmetro pode ser referente a um <strong>número lógico</strong> ou a um <strong>grupo</strong>. O que irá determinar que tipo de parâmetro está sendo tratado é a definição do <strong>number</strong> (refere-se a um número lógico)  ou do <strong>name</strong> (refere-se a um grupo).
          paragraph_2: 'Os seguintes atributos compõe um parâmetro:'
        create:
          paragraph_1: Cria um novo parâmetro.
        description: Os parâmetros podem ser relacionados com um número lógico ou um grupo. Confira como as operações CRUD para parâmetros devem ser usadas.
        destroy:
          paragraph_1: Exclui um parâmetro.
        group: Grupo
        index:
          paragraph_1: Retorna um array com todos os parâmetros de um grupo ou de um número lógico.
        logical_number: Número lógico
        show:
          paragraph_1: Retorna os detalhes de um parâmetro específico.
        table_of_contents:
          attributes: Atributos de um parâmetro
          create: Criação de um novo parâmetro
          destroy: Exclusão de um parâmetro
          index: Listagem de todos parâmetros
          show: Busca de um parâmetro específico
          update: Atualização de um parâmetro
        title: Developer API - Parâmetros
        update:
          paragraph_1: Modifica um parâmetro já existente.
      push_notifications:
        title: Developer API - Notificações push
        description: Veja como enviar notificações push através da API CloudWalk.
        attributes:
          list:
            created_at: Timestamp da criação do registro (ISO 8601)
            id: ID do registro
            content: Conteúdo da notificação (payload)
            created_by: ID do usuário que criou o registro
            created_via: Canal utilizado para criar o registro (Interface ou API)
            updated_at: Timestamp da atualização do registro (ISO 8601)
          paragraph_1: 'Atributos de uma notificação push:'
        index:
          paragraph_1: Retorna um array com todas as notificações push.
        show:
          paragraph_1: Retorna os detalhes de uma notificação push específica.
        table_of_contents:
          attributes: Atributos de uma notificação push
          index: Listagem de todas as notificações push
          show: Busca de uma notificação push específica
          create: Criação de uma nova notificação push
        create:
          paragraph_1: Cria uma nova notificação push.
          extra_info:
            group_id: "<strong>group_id:</strong> O ID do grupo que deve receber a notificação"
            range: "<strong>range:</strong> <span class='code'>group</span> para notificar o grupo todo ou <span class='code'>specific_logical_numbers</span> para notificar somente números lógicos específicos"
            logical_numbers: "<strong>logical_numbers:</strong> Se o range \"specific_logical_numbers\" foi selecionado, informe os números lógicos (separados por vírgula)"
            kind: "<strong>kind:</strong> <span class='code'>show</span> para exibir instantaneamente o conteúdo ou <span class='code'>processing</span> para manipular dinamicamente o conteúdo"
            app_id: "<strong>app_id:</strong> (optional) Se o tipo \"processing\" foi escolhido, informe o ID da aplicação que irá processar a conteúdo da notificação"
      users:
        attributes:
          list:
            created_at: Timestamp da criação do registro (ISO 8601)
            email: E-mail da conta
            name: Nome do usuário
            id: ID do registro
            last_sign_in_at: Timestamp da criação da última sessão (ISO 8601)
            last_sign_in_ip: IP utilizado na última sessão
            sign_in_count: Quantidade de autenticações (sign-in) realizadas
            time_zone: Time zone utilizado no CloudWalk Manager (padrão UTC)
            updated_at: Timestamp da atualização do registro (ISO 8601)
          paragraph_1: 'Os seguintes atributos compõe um usuário:'
        description: Confira como as operações CRUD para usuário devem ser usadas.
        index:
          paragraph_1: Retorna um array com todos os usuários.
        show:
          paragraph_1: Retorna os detalhes de um usuário específico.
        table_of_contents:
          attributes: Atributos de um usuário
          index: Listagem de todos usuário
          show: Busca de um usuário específico
          token: Obter a API Token de um usuário específico
        title: Developer API - Usuários
        token:
          paragraph_1: É possível obter a API Token de um usuário apartir do e-mail e senha do usuário em questão.
  ide:
    overview:
      compilation_console:
        paragraph_1: 'É na console de compilação que são exibidas importantes informações, como por exemplo o retorno da compilação: "Compilation Succeeded!", e demais detalhes da aplicação:'
        properties:
          base64: Código compilado
          functions: Quantidade de funções declaradas
          integers: Quantidade de variáveis do tipo integer que foram declaradas
          maxfuncs: Quantidade máxima de de funções que podem ser declaradas
          maxvars: Quantidade máxima de variáveis que podem ser declaradas
          size: Tamanho da aplicação
          strings: Quantidade de variáveis do tipo string que foram declaradas
      description: Breve apresentação do CloudWalk IDE, seus recursos e facilidades.
      introduction:
        paragraph_1: O ambiente de desenvolvimento CloudWalk ofecere uma interface simples, rápida e intuitiva, contando ainda com o inovador recurso de colaboração em tempo real, ou seja, múltiplos desenvolvedores podem trabalhar em uma mesma aplicação simultaneamente.
        paragraph_2: 'Conheça a interface do CloudWalk IDE:'
      real_time_colaboration:
        paragraph_1: Visando aumentar ainda mais a produtividade dos desenvolvedores, incorporamos este recurso em nossa IDE (ambiente de desenvolvimento). Para iniciar a colaboração em tempo real, basta copiar a URL <strong>completa</strong> da IDE e envia-la aos desenvolvedores que forem auxiliar.
        paragraph_2: 'A imagem abaixo demonstra uma URL de exemplo:'
      table_of_contents:
        compilation_console: Janela/console de compilação
        introduction: Introdução
        real_time_colaboration: Colaboração em tempo real
      title: CloudWalk IDE
    emulator:
      description: "Emulador web utilizado para visualizar e testar as aplicações em tempo de desenvolvimento"
      title: "CloudWalk IDE - Emulador"
      table_of_contents:
        introduction: Introdução
        workflow: Testando workflows
        printing: Impressão
      introduction:
        paragraph_1: Com o intuito de facilitar o desenvolvimento de aplicações POSXML e aumentar a produtividade dos desenvolvedores, criamos um emulador que reproduz com exatidão o comportamento de um dispositivo, seja ele um terminal POS ou um smartphone.
        paragraph_2: O emulador é executado diretamente no CloudWalk IDE, ou seja, diretamente em um browser web, dispensando a necessidade de qualquer tipo de instalação ou configuração.
        paragraph_3: Nunca foi tão fácil desenvolver para terminais POS e smartphones!
      workflow:
        paragraph_1: Uma tarefa bastante comum em qualquer tipo de desenvolvimento é testar o workflow da aplicação que está sendo desenvolvida. Com o CloudWalk IDE você pode a qualquer momento pressionar o botão <strong>Compile</strong> e em seguida pressionar o botão <strong>Emulator</strong> para inciar a emulação da aplicação.
        paragraph_2: "Preparamos um vídeo para fins de demonstração, um simples Hello World com uma pausa entre as mensagens que são exibidas:"
      printing:
        paragraph_1: Uma outra tarefa bastante comum é a impressão de tickets e comprovantes. Em um desenvolvimento convensional a definição e a customização dos tickets de impressão pode levar vários dias e ainda consumir diversas bobinas de papél, que irão diretamente para o lixo.
        paragraph_2: Com o CloudWalk IDE é possível definir, testar, visualizar e modificar os comprovantes e tickets de impressão em uma interface virtual, simples e rápida.
        paragraph_3: "Confira o vídeo abaixo onde demonstramos alguns comandos básicos de impressão:"
        paragraph_4: "Diga adeus as pilhas de papéis de impressão :)"
  errors:
    not_found:
      description: Não foi possível encontrar a página solicitada.
      title: Página não encontrada
  footer:
    get_in_touch: Entre em contato
    paragraph_1: Os nomes e logotipos WALK são marcas registradas da Plano Bê. Todos os direitos reservados.
    terms: Termos de Responsabilidade
  search:
    placeholder: "Pesquisar..."
    helper: "Por favor insira ao menos um parâmetro de pesquisa"
    success:
      title: "Resultado da pesquisa"
      no_results: "Nenhum registro encontrado. Não foi possível encontrar nada relevante."
    error:
      title: "Ocorreu um erro ao efetuar a pesquisa"
      paragraph_1: "Recebemos uma notificação e em breve o formulário de pesquisa estará funcionando corretamente."
      paragraph_2: "Desculpe pelo inconveniente."
  integration:
    advanced_http:
      description: É possível integrar aplicações CloudWalk escritas em POSXML com APIs REST utilizando o comando network.send.
      http_samples:
        http_verb: VERBO HTTP
        path: PATH
        variables: VARIÁVEIS
      introduction:
        paragraph_1: 'É possível integrar aplicações CloudWalk escritas em POSXML com APIs <a href="https://pt.wikipedia.org/wiki/REST" class="external" target="blank">REST</a>. Para isso, passa-se para o comando <a href="/posxml/commands/network.send" class="command">network.send</a> uma string no seguinte formato:'
        paragraph_2: O Switch do CloudWalk recebe a requisição enviada pelo comando <a href='/pt-BR/posxml/commands/network.send' class='command'>network.send</a> e faz uma requisição HTTP na url definida na aplicação configurada no <a href='https://manager.cloudwalk.io'>https://manager.cloudwalk.io</a>.
        paragraph_3: Para receber a resposta do Switch do CloudWalk, é necessário utilizar o comando <a href='/pt-BR/posxml/commands/network.receive' class='command'>network.receive</a> para receber os primeiros 4 bytes, que indicam o tamanho da mensagem, e em seguida fazer uma nova chamada com comando <a href='/pt-BR/posxml/commands/network.receive' class='command'>network.receive</a>, recebendo o restante da mensagem. Esta abordagem evita possíveis <em>timeouts</em> e longos períodos de espera para receber a resposta do servidor HTTP.
      posxml_sample:
        paragraph_1: 'O seguinte exemplo pode ser utilizado para testar esse tipo de ingração:'
        posxml:
          comment_01: "O comando preconnect faz com que o dispositivo se conecte ao CloudWalk"
          comment_02: "Criando uma string no formato 'POST / buf=0123456789&anotherVariable=ABCDEF\'"
          comment_03: "Convertendo a string para o formato hexadecimal"
          comment_04: "Enviando a string hexadecimal com o comando network.send"
          comment_05: "Recebendo a resposta do host com o comando network.receive"
          comment_06: "Recebendo os 4 bytes com o tamanho"
          comment_07: "Recebendo a mensagem"
          comment_08: "Convertendo a reposta hexadecimal e exibindo a mensagem"
      table_of_contents:
        http_samples: Exemplos de verbos HTTP e paths
        introduction: Introdução
        posxml_sample: Exemplo de aplicação POSXML
      title: Integração com o host - REST HTTP
    architecture:
      description: 'Arquitetura simplificada do serviço CloudWalk, com todos seus componentes: dispositivo, autorizador, switch transacional, etc.'
      service_architecture:
        paragraph_1: 'O diagrama abaixo demonstra de forma simplificada a arquitetura do serviço CloudWalk, com todos os componentes envolvidos: dispositivo, autorizador, switch transacional, etc.'
      table_of_contents:
        service_architecture: Arquitetura do serviço
      title: Integração com o host
    http:
      description: Uma maneira de estabelecer uma comunicação entre CloudWalk e um autorizados, é via HTTP. Exemplo de uso, configurando o dispositivo, compilando a aplicação, configurando o CloudWalk Manager, testando a comunicação.
      pos_setup:
        paragraph_1: Este guia assume que o seu dispositivo já possui o CloudWalk Framework devidamente <strong>instalado e configurado</strong>, e que o número de série do dispositivo já está cadastrado no CloudWalk Manager.
        paragraph_2: Caso não tenha certeza dos passos acima, confira a seção <a href='/pt-BR/framework/configuration'>%{configuration}</a>
      sample:
        list:
          item_1: '<strong>Conta no CloudWalk Manager: </strong>Crie uma gratuitamente em <a href="https://manager.cloudwalk.io" class="external" target="_blank">https://manager.cloudwalk.io</a>'
          item_2: '<strong>CloudWalk Framework: </strong> Dispositivo devidamente instalado e configurado'
          item_3: '<strong>Acesso à internet: </strong> É necessário que o dispositivo tenha acesso a internet (Ethernet, Dial ou GPRS)'
        paragraph_1: Para fins de teste, disponibilizamos um host autorizador pronto para ser utilizado. O autorizador é extremamente simples, utilizado exclusivamente para fins de testes.
        prerequisites: Pré-requisitos
      table_of_contents:
        ide: Compilação da aplicação
        pos_setup: Configuração do dispositivo
        sample: Exemplo de utilização
        testing: Testando a comunicação
        understanding_the_service: Entendendo a comunicação
        manager_setup: Configuração do CloudWalk Manager
      testing:
        download_application: 1. Download da aplicação
        if_fail: Se falhar
        paragraph_1: 'Com o dispositivo preparado, a aplicação compilada e tudo configurado no CloudWalk Manager, chegou a hora de testar a comunicação entre todos os componentes envolvidos: dispositivo, CloudWalk e o host autorizador.'
        paragraph_2: 'Pressione a tecla verde e será realizado o download da aplicação previamente configurada no CloudWalk Manager:'
        paragraph_3: 'Ao finalizar o processo, a seguinte mensagem será exibida:'
        paragraph_4: Após baixar a aplicação e pressionar o botão verde, a aplicação será automaticamente executada.
        paragraph_5: Verificar configuração de comunicacão do dispositivo, montagem dos cabos e conexão com a internet.
        paragraph_6: 'Existem várias ferramentas e serviços que podem lhe auxiliar a testar o retorno de suas requisições. Um exemplo é o serviço <a href="http://hurl.it" class="external">hurl.it</a>, que oferece uma interface bem simples, conforme pode ser observado abaixo:'
        run_application: 2. Execução da aplicação
        testing_post_request: Testando a requisição Post
      title: Integração com o host - Simple HTTP
      understanding_the_service:
        list:
          item_1: O dispositivo executa o comando network.send;
          item_2: O switch transacional recebe o conteúdo enviado pelo dispositivo, armazena na variável <span class='code'>buf</span> e efetua um <strong>post</strong> na url configurada para o aplicativo no CloudWalk Manager;
          item_3: A resposta do <strong>post</strong> é retornada para o switch transacional;
          item_4: O dispositivo executa o comando network.receive e recebe a resposta.
        paragraph_1: 'Uma das formas de se estabelecer uma comunicação entre o serviço CloudWalk e um host autorizador é através do protocolo HTTP. O diagrama abaixo representa uma comunicação entre o dispositivo, o serviço CloudWalk e o host autorizador:'
        paragraph_2: <strong>Atenção:</strong> Após efetuar um network.send e um network.receive, é necessário efetuar um network.hostdisconnect para que seja possível realizar uma nova chamada (send).
      manager_setup:
        associate_logical_number:
          header: Associar o número lógico
          paragraph_1: 'O próximo passo é associar o dispositivo com o número lógico recém criado, pressionando a tecla <strong>F1</strong> (Verifone) ou <strong>F</strong> (Telium). A seguinte tela será apresentada:'
          paragraph_2: 'Selecione então a opção <strong>1 LOGICAL NUMBER</strong> e informe o número lógico recém cadastrado (0001):'
          paragraph_3: Após informar o número lógico, pressione a tecla confirmar (verde).
        create_application:
          list:
            item_1: Acesse sua conta no CloudWalk Manager
            item_10: Deverá ser exibida uma mensagem indicando que a aplicação foi devidamente cadastrada
            item_11: Copie o código POSXML abaixo (CTRL + C), clique no botão <strong>Editar código fonte</strong>, cole o código recém copiado (CTRL + V) e clique no botão <strong>Compile</strong>
            item_2: 'Selecione a primeira opção: <strong>Aplicações</strong>'
            item_3: Clique no botão <strong>Nova aplicação</strong>
            item_4: 'Preencha o nome da aplicação, por exemplo: <strong>httpapp</strong>'
            item_5: 'Preencha a descrição da aplicação, por exemplo: <strong>Teste com HTTP Post</strong>'
            item_6: Preencha o autorizador com a URL <strong>http://http-echo.cloudwalk.io</strong>
            item_7: Marque <strong>Sim</strong> na opção 'Aplicação deve ser exibida no menu de serviços?'
            item_8: Preencha <strong>HTTP POST</strong> no nome de exibição no POS
            item_9: Clique no botão <strong>Cadastrar aplicação</strong>
          posxml:
            comment_01: "O comando preconnect faz com que o dispositivo se conecte ao CloudWalk"
            comment_02: "Realiza a transação ao se conectar"
            comment_03: "O conteúdo da variável buffer é no formato hexadecimal. No exemplo\n  abaixo, está sendo enviado o valor 0123456789. É possível utilizar o comando\n  string.tohex para converter qualquer string para o formato hexadecimal, e na\n  sequência, utilize o comando string.length para saber o tamanho da string"
            comment_04: "Para que o envio funcione corretamente, é necessário enviar\n  ao menos 7 bytes para o CloudWalk"
            comment_05: "A resposta também será armazenada em hexadecimal na variável variablebuffer. Utilize\n    o comando string.fromhex para converter o conteúdo para ASCII"
            comment_06: "Sempre utilize o comando network.hostdisconnect antes de utilizar\n  novamente os comandos network.send e network.receive"
        create_group:
          header: Cadastre um grupo
          list:
            item_1: 'Selecione a opção: <strong>Grupos</strong>'
            item_2: Clique no botão <strong>Novo grupo</strong>
            item_3: 'Preencha o nome do grupo, por exemplo: <strong>GRUPO TESTE</strong>'
            item_4: Clique no botão <strong>Cadastrar grupo</strong>
            item_5: Clique então no botão <strong>Atualizar grupo</strong>
            item_6: Selecione a aplicação previamente cadastrada, clicando no checkbox
            item_7: Clique no botão <strong>Atualizar aplicações do grupo</strong>
        create_logical_number:
          header: Cadastre o número lógico
          list:
            item_1: 'Selecione a opção: <strong>Números lógicos</strong>'
            item_2: Clique no botão <strong>Novo número lógico</strong>
            item_3: Informe o número lógico, por exemplo <strong>0001</strong>
            item_4: Marque o grupo criado anteriormente (GRUPO TESTE) e clique no botão <strong>Cadastrar número lógico</strong>
          paragraph_1: 'Todo dispositivo deve possuir um número lógico, que é a identificação do dispositivo no CloudWalk. Para configurar o número lógico, siga o seguinte procedimento:'
        paragraph_1: 'O último passo consiste em configurar o CloudWalk Manager. Siga o seguinte procedimento:'
    tcp:
      description: Uma maneira de estabelecer uma comunicação entre CloudWalk e um autorizados, é via TCP/IP. Exemplo de uso, configurando o dispositivo, compilando a aplicação, configurando o CloudWalk Manager, testando a comunicação.
      pos_setup:
        paragraph_1: Este guia assume que o seu dispositivo já possui o CloudWalk Framework devidamente <strong>instalado e configurado</strong>, e que o número de série do dispositivo já está cadastrado no CloudWalk Manager.
        paragraph_2: Caso não tenha certeza dos passos acima, confira a seção <a href='/pt-BR/framework/configuration'>%{configuration}</a>
      sample:
        list:
          item_1: '<strong>Conta no CloudWalk Manager: </strong>Crie uma gratuitamente em <a href="https://manager.cloudwalk.io" class="external" target="_blank">https://manager.cloudwalk.io</a>'
          item_2: '<strong>CloudWalk Framework: </strong> Dispositivo devidamente instalado e configurado'
          item_3: '<strong>Acesso à internet: </strong> É necessário que o dispositivo tenha acesso a internet (Ethernet, Dial ou GPRS)'
        paragraph_1: Para fins de teste, disponibilizamos um host autorizador pronto para ser utilizado. O autorizador é extremamente simples, utilizado exclusivamente para fins de testes.
        prerequisites: Pré-requisitos
      table_of_contents:
        ide: Compilação da aplicação
        pos_setup: Configuração do dispositivo
        sample: Exemplo de utilização
        testing: Testando a comunicação
        understanding_the_service: Entendendo a comunicação
        manager_setup: Configuração do CloudWalk Manager
      testing:
        download_application: 1. Download da aplicação
        if_fail: Se falhar
        paragraph_1: 'Com o dispositivo preparado, a aplicação compilada e tudo configurado no CloudWalk Manager, chegou a hora de testar a comunicação entre todos os componentes envolvidos: dispositivo, CloudWalk e o host autorizador.'
        paragraph_2: 'Pressione a tecla verde e será realizado o download da aplicação previamente configurada no CloudWalk Manager:'
        paragraph_3: 'Ao finalizar o processo, a seguinte mensagem será exibida:'
        paragraph_4: Após baixar a aplicação e pressionar o botão verde, a aplicação será automaticamente executada.
        paragraph_5: Verificar configuração de comunicacão do dispositivo, montagem dos cabos e conexão com a internet.
        paragraph_6: 'Existem várias ferramentas e serviços que podem lhe auxiliar a testar o retorno de suas requisições. Um exemplo é o próprio <strong>telnet</strong>, que oferece uma interface bem simples, conforme pode ser observado abaixo:'
        run_application: 2. Execução da aplicação
        testing_post_request: Testando sua requisição
      title: Integração com o host - Plain TCP (socket tunnel)
      understanding_the_service:
        list:
          item_1: O dispositivo executa o comando network.send;
          item_2: O switch transacional recebe o conteúdo enviado pelo dispositivo e o encaminha para o socket na url e porta configurada para o aplicativo no CloudWalk Manager;
          item_3: A resposta do socket é retornada para o switch transacional;
          item_4: O dispositivo executa o comando network.receive e recebe a resposta.
        paragraph_1: 'Uma das formas de se estabelecer uma comunicação entre o serviço CloudWalk e um host autorizador é através do protocolo TCP/IP. O diagrama abaixo representa uma comunicação entre o dispositivo, o serviço CloudWalk e o host autorizador:'
        paragraph_2: <strong>Atenção:</strong> Após efetuar um network.send e um network.receive, é necessário efetuar um network.hosdisconnect para que seja possível realizar uma nova chamada (send).
      manager_setup:
        associate_logical_number:
          header: Associar o número lógico
          paragraph_1: 'O próximo passo é associar o dispositivo com o número lógico recém criado, pressionando a tecla <strong>F1</strong> (Verifone) ou <strong>F</strong> (Telium). A seguinte tela será apresentada:'
          paragraph_2: 'Selecione então a opção <strong>1 LOGICAL NUMBER</strong> e informe o número lógico recém cadastrado (0001):'
          paragraph_3: Após informar o número lógico, pressione a tecla confirmar (verde).
        create_application:
          list:
            item_1: Acesse sua conta no CloudWalk Manager
            item_10: Deverá ser exibida uma mensagem indicando que a aplicação foi devidamente cadastrada
            item_11: Copie o código POSXML abaixo (CTRL + C), clique no botão <strong>Editar código fonte</strong>, cole o código recém copiado (CTRL + V) e clique no botão <strong>Compile</strong>
            item_2: 'Selecione a primeira opção: <strong>Aplicações</strong>'
            item_3: Clique no botão <strong>Nova aplicação</strong>
            item_4: 'Preencha o nome da aplicação, por exemplo: <strong>tcpapp</strong>'
            item_5: 'Preencha a descrição da aplicação, por exemplo: <strong>Teste com TCP IP</strong>'
            item_6: Preencha o autorizador com a URL <strong>tcp://tcp-echo.cloudwalk.io:8000</strong>
            item_7: Marque <strong>Sim</strong> na opção 'Aplicação deve ser exibida no menu de serviços?'
            item_8: Preencha <strong>TCP IP</strong> no nome de exibição no POS
            item_9: Clique no botão <strong>Cadastrar aplicação</strong>
          posxml:
            comment_01: "O comando preconnect faz com que o dispositivo se conecte ao CloudWalk"
            comment_02: "Realiza a transação ao se conectar"
            comment_03: "O conteúdo da variável buffer é no formato hexadecimal. No exemplo\n  abaixo, está sendo enviado o valor 0123456789. É possível utilizar o comando\n  string.tohex para converter qualquer string para o formato hexadecimal, e na\n  sequência, utilize o comando string.length para saber o tamanho da string"
            comment_04: "Para que o envio funcione corretamente, é necessário enviar\n  ao menos 7 bytes para o CloudWalk"
            comment_05: "A resposta também será armazenada em hexadecimal na variável variablebuffer. Utilize\n    o comando string.fromhex para converter o conteúdo para ASCII"
            comment_06: "Sempre utilize o comando network.hostdisconnect antes de utilizar\n  novamente os comandos network.send e network.receive"
        create_group:
          header: Cadastre um grupo
          list:
            item_1: 'Selecione a opção: <strong>Grupos</strong>'
            item_2: Clique no botão <strong>Novo grupo</strong>
            item_3: 'Preencha o nome do grupo, por exemplo: <strong>GRUPO TESTE</strong>'
            item_4: Clique no botão <strong>Cadastrar grupo</strong>
            item_5: Clique então no botão <strong>Atualizar grupo</strong>
            item_6: Selecione a aplicação previamente cadastrada, clicando no checkbox
            item_7: Clique no botão <strong>Atualizar aplicações do grupo</strong>
        create_logical_number:
          header: Cadastre o número lógico
          list:
            item_1: 'Selecione a opção: <strong>Números lógicos</strong>'
            item_2: Clique no botão <strong>Novo número lógico</strong>
            item_3: Informe o número lógico, por exemplo <strong>0001</strong>
            item_4: Marque o grupo criado anteriormente (GRUPO TESTE) e clique no botão <strong>Cadastrar número lógico</strong>
          paragraph_1: 'Todo dispositivo deve possuir um número lógico, que é a identificação do dispositivo no CloudWalk. Para configurar o número lógico, siga o seguinte procedimento:'
        paragraph_1: 'O último passo consiste em configurar o CloudWalk Manager. Siga o seguinte procedimento:'
  introduction:
    ide:
      description: A CloudWalk IDE possibilita o desenvolvimento de aplicações para terminais POS utilizando a linguagem POSXML.
      overview:
        paragraph_1: O ambiente de desenvolvimento do serviço CloudWalk ofecere uma interface simples, rápida e intuitiva, contando ainda com o inovador recurso de colaboração em tempo real, ou seja, múltiplos desenvolvedores podem trabalhar em uma mesma aplicação simultaneamente.
      table_of_contents:
        overview: Visão geral
      title: CloudWalk IDE
    cli:
      description: The CloudWalk CLI allows you to control your applications in an easy way.
      title: CloudWalk CLI
      table_of_contents:
        overview: Visão geral
        command_line_interface: Linha de comandos (CLI)
        ruby_framework_api: Ruby Framework API
        skeleton: Skeleton
        mruby: MRuby
      overview:
        paragraph_1: A CloudWalk fornece uma ferramenta de linha de comandos (CLI) que viabiliza de forma simples a manipulação de aplicações, permitindo que o desenvolvedor em questão de minutos crie, altere e publique as alterações diretamente nos terminais POS.
      command_line_interface:
        paragraph_1: Uma <em>command line interface (CLI)</em>, ou uma <strong>linha de comandos</strong> é uma interface de usuário baseada exclusivamente em caracteres, que inicialmente era a única maneira de operar computadores (antes do advento das interfaces gráficas), mas até hoje ainda é considerada a ferramenta favorita para muitos desenvolvedores de software.
        paragraph_2: Todos sistemas operacionais ainda fornecem esta interface. No Windows, é possível acessá-la através do <strong>Prompt de Comando</strong> (<span class='code'>CTRL + R</span> e digite <span class='code'>cmd</span>). No Mac OS, é o <strong>Terminal</strong> (ou iTerm), e no GNU/Linux é normalmente chamado de <strong>Terminal</strong> ou <strong>Xterm</strong>. Estes aplicativos possuem vários comandos para interagir com o sistema operacional, e a maioria deles são fáceis de usar, bastando digitar o nome do comando (algumas vezes com argumentos extras, separados por espaço).
        paragraph_3: Nós criamos a nossa própria CLI para auxiliar os desenvolvedores à gerenciar aplicações CloudWalk com o menor esforço possível. A CLI é chamada <strong>cloudwalk</strong>, e permite a compilação, emulação e publicação de aplicações diretamente a partir da linha de comando.
      ruby_framework_api:
        paragraph_1: O CloudWalk Framework em Ruby foi desenvolvido para facilitar a experiência de desenvolvimento e está inicialmente sendo lançado para a plataforma PAX. Plataformas adicionais como Verifone e Ingenico serão suportadas em breve.
        paragraph_2: Com o objetivo de dar autonomia aos desenvolvedores para que eles criem aplicações Ruby, desenvolvemos um componente que abstrai todos os métodos necessários para início do desenvolvimento, facilitando a manipulação do display, impressora, teclado e rede do terminal POS, e ainda, para processar diferentes tipos de pagamentos. Tudo isso sem ter que começar do zero e sem utilizar uma linguagem de baixo nível. Este componente é chamado <strong>DaFunk</strong> e é <a href='https://github.com/cloudwalkio/da_funk'>open source</a>.
      skeleton:
        paragraph_1: A CLI permite a criação de novas aplicações, que serão baseadas no <strong>cloudwalk-skeleton</strong>, que também é uma estrutura <a href='https://github.com/cloudwalkio/cloudwalk-skeleton'>open source</a>, e pode também ser útil para outros projetos. Seja criativo!
      mruby:
        paragraph_1: Ruby é uma linguagem moderna, orientada a objetos e com várias características elegantes, com uma grande e entusiasmada comunidade para apoiar novas ideias, inclusive as suas! A linguagem Ruby é muito pesada para operar um terminal POS, e por este motivo, utilizamos <a href='http://www.mruby.org' class='external' target='blank'>MRuby</a>, que é uma versão reduzida do Ruby, destinada ao uso em sistemas embarcados.
    index:
      description: Open Payment Platform as a Service
      title: "Seja bem vindo!"
      intro: "Descubra como começar a utilizar a plataforma CloudWalk, aprendendo o básico do <a href='/pt-BR/introduction/manager'>Manager</a> e da <a href='/pt-BR/introduction/ide'>IDE</a>."
      table_of_contents:
        getting_started: "Começando"
      getting_started:
        paragraph_1: "Veja como é fácil começar a utilizar a plataforma CloudWalk! Siga os passos abaixo e você terá uma simples aplicação rodando em um emulador, se comunicando com o nosso servidor (autorizador) de testes."
        h3_1: "1. Crie uma conta gratuita"
        paragraph_2: "Primeiramente, crie uma conta gratuita, a qual lhe permitirá conhecer todos os componentes da plataforma:"
        paragraph_3: "<a href='https://manager.cloudwalk.io/users/sign_up' target='blank' class='external'>https://manager.cloudwalk.io/users/sign_up</a>"
        h3_2: "2. Crie sua primeira aplicação"
        paragraph_4: "Agora que você já criou sua conta gratuita, você já pode criar a sua primeira aplicação:"
        paragraph_5: "<a href='https://manager.cloudwalk.io/apps/posxml/new' target='blank' class='external'>https://manager.cloudwalk.io/apps/posxml/new</a>"
        paragraph_6: "Vamos simplificar e criar uma aplicação que simplesmente envia uma string para o nosso servidor de testes (autorizador), que vai então retornar um eco."
        form:
          application_type_lbl: "Tipo de aplicação"
          application_type_val: "Aplicação"
          application_name_lbl: "Nome da aplicação"
          application_name_val: "helloworld"
          description_lbl: "   Descrição"
          description_val: "Simples aplicação de eco"
          label_lbl: "Rótulo"
          label_val: "HELLO WORLD"
          endpoint_lbl: "Autorizador"
          endpoint_val: "http://http-echo.cloudwalk.io"
        h3_3: "3. Adicione o código fonte"
        paragraph_7: "Com a aplicação POSXML criada, clique no botão <strong>Editar código fonte</strong>, que irá carregar a IDE CloudWalk, onde você poderá copiar e colar o seguinte código POSXML:"
        h3_4: "4. Emule a aplicação!"
        paragraph_8: "O último passo é verificar a aplicação no emulador. Clique no botão <strong>Emulate</strong> e se impressione!"
        paragraph_9: "Observe que esta aplicação está somente enviando uma sequência de números (variável <span class='code'>sBufSend</span>), e nosso servidor de teste está adicionando a string <strong>CLOUDWALK</strong> na resposta."
    authorizer:
      description: Componente responsável pela validação das informações enviadas pelos terminais POS.
      overview:
        paragraph_1: 'O autorizador é o componente responsável pela verificação e validação das informações enviadas pelos terminais POS. A informação trafegada na rede CloudWalk segue o seguinte fluxo:'
        item_1: O <strong>Dispositivo</strong> captura os dados e os envia para o <strong>Serviço CloudWalk</strong>;
        item_2: O <strong>Serviço CloudWalk</strong> recebe os dados e os repassa ao <strong>Autorizador</strong>;
        item_3: O <strong>Autorizador</strong> valida os dados e envia uma resposta ao <strong>Serviço CloudWalk</strong>;
        item_4: Por fim o <strong>Serviço CloudWalk</strong> repassa a resposta ao <strong>Dispositivo</strong>.
      more_info:
        paragraph_1: O serviço CloudWalk é extremamente flexível quanto à comunicação entre os terminais POS e o autorizador. Aplicações financeiras utilizam por padrão o protocolo de comunicação <a href='http://pt.wikipedia.org/wiki/ISO_8583' target="blank" class="external">ISO 8583</a>, porém outros padrões podem ser utilizados.
        paragraph_2: A validação de transações é um passo importante, porque permite que um Emissor consiga verificar se o modo de pagamento utilizado é autêntico e se os dados (valor, data da transação, entre outros) recebidos pelo autorizador são os mesmos dados utilizados pelo meio de pagamento durante a realização da operação no dispositivo.
        paragraph_3: Além da validação dos dados gerados pela forma de pagamento, um autorizador também pode assinar a mensagem de resposta (por exemplo, “transação autorizada”) antes de enviá-la para o dispositivo. Assim, não só o autorizador pode autenticar o POS mas o POS também pode autenticar seu Emissor, o que garante ainda mais segurança ao longo deste processo.
        paragraph_4: O serviço CloudWalk oferece todas as ferramentas necessárias para o desenvolvimento de aplicações para os principais modelos de terminais POS do mercado, porém não desenvolve ou disponibiliza servidores de autorização.
        paragraph_5: O desenvolvimento e a manutenção do autorizador é de responsabilidade do cliente.
      table_of_contents:
        more_info: Mais informações
        overview: Visão geral
      title: Autorizador
    posxml:
      description: Linguagem de programação usada para criar aplicações para um dispositivo.
      more_info:
        paragraph_1: Saiba mais sobre a linguagem <a href='http://pt.wikipedia.org/wiki/POSXML' target='_blank' class='external'>POSXML</a> na Wikipedia!
      overview:
        paragraph_1: POSXML é o nome dado à linguagem de programação criada pela Plano Bê, destinada ao desenvolvimento de aplicativos para dispositivos móveis. A linguagem POSXML é formada por um conjunto de instruções, comandos e funções que a torna uma poderosa ferramenta de desenvolvimento de aplicativos.
        paragraph_2: Baseada na estrutura XML (acrônimo para eXtensible Markup Language), a linguagem POSXML é de fácil aprendizado, possui recursos matemáticos e recursos gráficos poderosos que permitem a criação de interfaces gráficas animadas, com ícones e animações.
      table_of_contents:
        more_info: Mais informações
        overview: Visão geral
      title: Linguagem POSXML
    framework:
      approved_devices:
        cloudwalk_reader: Dispositivos CloudWalk
        paragraph_1: O componente CloudWalk Framework, que é instalado nos dispositivos, difere entre as diversas linhas de equipamentos, uma vez que, cada equipamento possui suas particularidades. Caso o equipamento que você pretende utilizar não conste na listagem abaixo, <a href='https://www.cloudwalk.io/contact'>entre em contato</a>, pois podemos considerar a homologação do mesmo.
        paragraph_2: 'Atualmente, os seguintes dispositivos estão homologados para utilizarem o CloudWalk Framework:'
      contactless:
        paragraph_1: 'O serviço CloudWalk também oferece a possibilidade de utilização da tecnologia <em>contactless</em> com todos os equipamentos que possuem o módulo de comunicação <em>contactless</em> nativo, e também através dos pinpads <strong>1000 SE CTLS</strong> (Verifone) e <strong>IPP220 CTLS / IPP320 CTLS</strong> (Ingenico).'
      description: 'O CloudWalk Framework, instalado diretamente nos terminais POS, é uma máquina virtual que possui a capacidade de interpretar os comandos da linguagem POSXML. Atualmente, os seguintes terminais estão homologados para utilizarem o CloudWalk Framework: Linha Verifone Verix, Linha Verifone Evo, Linha Ingenico Telium 2.'
      overview:
        paragraph_1: O CloudWalk Framework, instalado diretamente nos dispositivos, é uma máquina virtual que possui a capacidade de interpretar os comandos da linguagem POSXML.
      table_of_contents:
        approved_devices: Dispositivos homologados
        overview: Visão geral
      title: CloudWalk Framework
    manager:
      api:
        paragraph_1: Todas as operações disponíveis através da interface web do CloudWalk Manager podem também ser executadas através de uma API Json, bastando para tal, gerar uma API Token.
        paragraph_2: Mais informações em
      description: O CloudWalk Manager é a ferramenta utilizada para liberar terminais, cadastrar aplicações, arquivos, números lógicos e grupos. Todas as operações disponíveis através da interface web do CloudWalk Manager podem também ser executadas através de uma API Json.
      how_to_access:
        paragraph_1: O acesso ao CloudWalk Manager é feito pela internet, através do endereço <a href='https://manager.cloudwalk.io'>https://manager.cloudwalk.io</a>.
      overview:
        paragraph_1: O CloudWalk Manager é a ferramenta utilizada para liberar dispositivos, cadastrar aplicações, arquivos, números lógicos e grupos. É também através do CloudWalk Manager que é feita a gestão de usuários e por onde é realizado o monitoramento das transações efetuadas.
      table_of_contents:
        api: API
        how_to_access: Como acessar
        overview: Visão geral
      title: CloudWalk Manager
  main_menu:
    docs: Documentação
    get_in_touch: Entre em contato
    home: Início
    sign_in: Acesso ao sistema
    support: Suporte
  menu:
    api:
      group_name: Developer API
      overview: Visão geral
      v1:
        apps: Aplicações
        assets: Arquivos
        devices: Dispositivos
        groups: Grupos
        logical_numbers: Números lógicos
        transactions: Transações
        push_notifications: Notificações push
        parameters: Parâmetros
        users: Usuários
    ide:
      group_name: CloudWalk IDE
      overview: Visão geral
      emulator: Emulador
    cli:
      group_name: CloudWalk CLI
      setup: Instalação
      creating_a_new_app: Criando uma nova app
      customizing_an_app: Cutomizando uma app
      deploying_an_app: Publicando uma app
    guides:
      group_name: Tutoriais
      patterns: "Padrões de transações"
      emulator_card_swipe: "Cartões no emulador"
      emulator_serial_ports: "Portas seriais no emulador"
      using_http_headers: "Utilizando headers HTTP"
      dynamic_button_configuration: "Configuração dinâmica de teclas"
    help:
      group_name: Ajuda
      faq: "Perguntas Frequentes"
    integration:
      advanced_http: REST HTTP
      architecture: Arquitetura do serviço
      group_name: Integração com o host
      http: Simple HTTP
      tcp: Plain TCP (socket tunnel)
    posxml:
      commands_list: Lista de comandos
      configuration: Configuração
      file_system: Sistema de arquivos
      group_name: Linguagem POSXML
      memory_and_variables: Variáveis e memória
      structure: Estrutura da linguagem
      useful_functions: Funções úteis
    understanding_the_service:
      ide: CloudWalk IDE
      cli: CloudWalk CLI
      group_name: A Plataforma
      introduction: Introdução
      authorizer: Autorizador
      posxml: Linguagem POSXML
      framework: CloudWalk Framework
      manager: CloudWalk Manager
    framework:
      configuration: Configuração do dispositivo
      first_launch: 'Primeira execução'
      group_name: CloudWalk Framework
      ingenico_telium_1: Ingenico Telium 1
      ingenico_telium_2: Ingenico Telium 2
      pax_d200: PAX D200
      verifone_evo: Verifone EVO
      verifone_verix: Verifone Verix
    manager:
      apps: Aplicações
      assets: Arquivos
      devices: Dispositivos
      group_name: CloudWalk Manager
      groups: Grupos
      logical_numbers: Números lógicos
      push_notifications: Notificações push
      transactions_monitor: Monitor de transações
  posxml:
    commands:
      deprecated: "Depreciado"
      deprecated_info: "Este comando foi depreciado e, portanto, não funciona mais"
      adjustdatetime:
        paragraph_1: "A data e a hora são automaticamente definidas pelos servidores CloudWalk, baseado no seu fuso horário. Note que é possível alterar o fuso horário na sua <a href='https://manager.cloudwalk.io/users/edit'>conta do Manager</a>."
      break:
        description: O comando break possibilita a saída imediata do loop while
        paragraph_1: O comando <span class='code'>break</span> é utilizado para parar a execução de um loop.
        paragraph_2: No exemplo acima, quando o valor da variável <em><strong>iNumber</strong></em> for igual a <em><strong>3</strong></em> a condição do comando <a href='if' class='command'>if</a> será verdadeira, fazendo com que o comando <strong>break</strong> seja executado, parando a execução do bloco <a href='while' class='command'>while</a> mesmo que sua condição ainda não esteja satisfeita.
      callfunction:
        description: Realiza uma chamada em uma função previamente definida
        paragraph_1: O comando <span class='code'>callfunction</span> executa uma função (<a href='function' class='command'>function</a>).
        paragraph_2: No exemplo acima foi declarada a função <em>double_value</em> que encapsula o comando <a href='mathematicaloperation' class='command'>mathematicaloperation</a> que por sua vez dobra o valor da variável <em><strong>iNumber</strong></em>.
        paragraph_3: O comando <a href='callfunction' class='command'>callfunction</a> faz a chamada da função <em>dobra_valor</em>.
        paragraph_4: Para exibir o valor da variável <em><strong>iNumber</strong></em>, que é um <a href='integervariable' class='command'>integervariable</a>, é preciso mudar o seu tipo para <a href='stringvariable' class='command'>stringvariable</a>, usando o comando <a href='inttostring' class='command'>inttostring</a>.
        parameters:
          parameter_1: <strong>name</strong> <span class='data-type'>[string]</span><br/>Nome da função.
      checkpaperout:
        description: Verifica se o compartimento de papel ainda contém papel
        paragraph_1: O comando <span class='code'>checkpaperout</span> é utilizado para verificar se há ou não papel na impressora.
        paragraph_2: No exemplo acima foi criada uma variável <em><strong>iPaper</strong></em> que irá armazenar o resultado do comando <strong>checkpaperout</strong> através do seu parâmetro <em><strong>variablereturn</strong></em>.
        paragraph_3: O bloco <a href='if' class='command'>if</a> verifica o valor da variável <em><strong>iPaper</strong></em> e exibe a mensagem no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o resultado do comando, podendo ser 0 ou 1.
      cleandisplay:
        description: Apaga todo conteúdo do display do dispositivo
        paragraph_1: O comando <span class='code'>cleandisplay</span> é usado para apagar todo o conteúdo do <a href='display' class='command'>display</a>.
        paragraph_2: No exemplo acima, as 4 linhas que foram exibidas serão removidas do <a href='display' class='command'>display</a>
      closeserialport:
        description: Fecha a porta serial
        paragraph_1: O comando <span class='code'>closeserialport</span> é utilizado para fechar uma porta serial aberta.
        paragraph_2: No exemplo acima o comando <a href='openserialport' class='command'>openserialport</a> irá abrir uma conexão na porta <strong>COM1</strong> com a taxa <strong>115200</strong> e configuração <strong>A8N1</strong>.
        paragraph_3: O comando <a href='closeserialport' class='command'>closeserialport</a> fechará a porta serial.
        parameters:
          parameter_1: <strong>variablehandle</strong> <span class='data-type'>[integer]</span><br/>Identificador da porta aberta.
      comments: Comentários
      comments_message: Deixe o seu comentário...
      convert_toint:
        description: Conversão de binário, decimal ou hexadecimal para integer
        paragraph_1: O comando <span class='code'>convert.toint</span> é utilizado para converter uma string que contenha um número binário, decimal ou hexadecimal para um número inteiro.
        paragraph_2: No exemplo acima o binário <strong>1010</strong> será convertido para decimal.
        paragraph_3: Para que o valor convertido seja exibido no <a href='display' class='command'>display</a>, é preciso converter usando o comando <a href='inttostring' class='command'>inttostring</a>.
        parameters:
          parameter_1: '<strong>base</strong> <span class="data-type">[integer]</span><br/>Qual base será usada na conversão:<ul><li>2: binário</li><li>10: decimal</li><li>16: hexadecimal</li></ul>'
          parameter_2: <strong>number</strong> <span class='data-type'>[string]</span><br/>Binário, decimal ou hexadecimal que será convertido.
          parameter_3: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá receber o retorno do comando.
      crypto_crc:
        description: Cálculo CRC 16 bits, com suporte à CRC-CCITT
        paragraph_1: O comando <span class='code'>crypto.crc</span> é utilizado para cálculo CRC 16 bits, com suporte à CRC-CCITT.
        paragraph_2: No exemplo acima, o buffer <strong>30313233343536</strong> será usado no cálculo <strong>CRC</strong> e o retorno do comando será inserido na variável <strong>iReturn</strong> e depois transformado em <a href='stringvariable' class='command'>stringvariable</a> na variável <strong>sReturn</strong>.
        paragraph_3: O retorno deverá ser <strong>19462</strong>.
        parameters:
          parameter_1: <strong>buffer</strong> <span class='data-type'>[string]</span><br/>Representação Hexadecimal que será usada no cálculo CRC.
          parameter_2: <strong>size</strong> <span class='data-type'>[integer]</span><br/>Número de bytes no buffer.
          parameter_3: <strong>type</strong> <span class='data-type'>[string]</span><br/>CRC ou CRC-CCITT.
          parameter_4: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando.
      crypto_encryptdecrypt:
        description: Rotinas de criptografia com algoritmos DES, 3DES, 3DESTripleLength ou NEWDES
        paragraph_1: O comando <span class='code'>crypto.encryptdecrypt</span> é utilizado para criptografar ou descriptografar uma mensagem, usando algoritmos DES, 3DES, 3DESTripleLength ou NEWDES.
        paragraph_2: No exemplo acima foi utilizado o comando <a href='string.tohex' class='command'>string.tohex</a> para transformar o valor da variável <strong>sAscii</strong> em hexadecimal, que é um valor obrigatório para o atributo <strong>key</strong> do comando <strong>crypto.encryptdecrypt</strong>.
        paragraph_3: O primeiro <a href='display' class='command'>display</a> irá exibir o valor <strong>3031323334353637</strong> criptografado com o tipo <strong>NEWDES</strong>.
        paragraph_4: O segundo <a href='display' class='command'>display</a> mostra o valor descriptografado.
        parameters:
          parameter_1: <strong>cryptotype</strong> <span class='data-type'>[string]</span><br/>Algoritmo a ser usado:<ul><li>DES</li><li>3DES</li><li>3DESTripleLength</li><li>NEWDES</li></ul>
          parameter_2: '<strong>key</strong> <span class="data-type">[string]</span><br/>Chave criptográfica hexadecimal.<ul><li>DES: 8 bytes ou 16 caracteres</li><li>3DES: 16 bytes ou 32 caracteres</li><li>3DESTripleLength: 24 bytes ou 48 caracteres</li><li>NEWDES: 15 bytes ou 30 caracteres</li></ul>'
          parameter_3: <strong>message</strong> <span class='data-type'>[string]</span><br/>Valor hexadecimal que sera criptografado ou descriptografado. Se a mensagem for maior que 8 bytes, ela deverá ser quebrada em blocos de 8 com o comando <a href='string.elementat' class='command'>string.elementat</a>
          parameter_4: '<strong>type</strong> <span class="data-type">[integer]</span><br/><ul><li>0: Criptografar</li><li>1: Descriptografar</li></ul>'
          parameter_5: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      crypto_lrc:
        description: Gera um byte de LRC da string em buffer
        paragraph_1: O comando <span class='code'>crypto.lrc</span> é utilizado para gerar um byte de LRC da string em buffer.
        paragraph_2: No exemplo acima, o buffer <strong>30313233343536</strong> será usado para gerar um byte <strong>LRC</strong>.
        paragraph_3: O retorno deverá ser <strong>37</strong>.
        parameters:
          parameter_1: <strong>buffer</strong> <span class='data-type'>[string]</span><br/>Representação Hexadecimal que será usada para gerar um byte de LRC.
          parameter_2: <strong>size</strong> <span class='data-type'>[integer]</span><br/>Número de bytes no buffer.
          parameter_3: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      crypto_xor:
        description: Realiza uma operação binária XOR entre os bytes de 2 strings
        paragraph_1: O comando <span class='code'>crypto.xor</span> é utilizado para realizar uma operação binária XOR entre os bytes de 2 strings.
        paragraph_2: No exemplo acima, o <strong>buffer1</strong> <strong>123456</strong> é diferente do <strong>buffer2</strong> <strong>123450</strong> fazendo com que a operação <strong>XOR</strong> retorne o resultado (hexadecimal) <strong>000006000000</strong>.
        parameters:
          parameter_1: <strong>buffer1</strong> <span class='data-type'>[string]</span><br/>Representação Hexadecimal que será realizado a operação XOR.
          parameter_2: <strong>buffer2</strong> <span class='data-type'>[string]</span><br/>Representação Hexadecimal que será realizado a operação XOR.
          parameter_3: <strong>size</strong> <span class='data-type'>[integer]</span><br/>Número de bytes no buffer.
          parameter_4: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o resultado da operação XOR no formato hexadecimal.
      deletefile:
        description: Efetua a exclusão de um arquivo da memória do dispositivo
        paragraph_1: O comando <span class='code'>deletefile</span> é utilizado para fazer a exclusão um arquivo da memória do dispositivo.
        paragraph_2: No exemplo acima, foi feito o download do arquivo <strong>test.txt</strong> com o comando <a href='downloadfile' class='command'>downloadfile</a>.
        paragraph_3: O comando <a href='deletefile' class='command'>deletefile</a> exclui o arquivo <strong>test.txt</strong> da memória do dispositivo, fazendo com que a variável <strong>sPeople</strong> seja vazia, não exibindo nada no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo.
      description: Listagem com breve descrição de todos os comandos POSXML.
      display:
        description: Exibe uma mensagem customizada no display do dispositivo
        paragraph_1: O comando <span class='code'>display</span> é utilizado para exibir no visor do dispositivo uma mensagem customizada, levando em consideração a linha e a coluna passadas como parâmetro para o comando.
        paragraph_2: No exemplo acima, a mensagem <strong>CLOUDWALK</strong> seria exibida na linha <strong>0</strong> e coluna <strong>0</strong>.
        parameters:
          parameter_1: <strong>line</strong> <span class='data-type'>[integer]</span><br/>Linha que a mensagem será exibida.
          parameter_2: <strong>column</strong> <span class='data-type'>[integer]</span><br/>Coluna que mensagem será exibida.
          parameter_3: <strong>message</strong> <span class='data-type'>[string]</span><br/>Mensagem customizada que será exibida.
      displaybitmap:
        description: Exibe um bitmap monocromático no display do dispositivo
        paragraph_1: O comando <span class='code'>displaybitmap</span> é utilizado exibir um bitmap.
        paragraph_2: No exemplo acima, será alterado a imagem referente ao plano de fundo da aplicação principal do dispositivo. Para exibir uma imagem no formato .bmp (bitmap monocromático) utilizando o comando <strong>displaybitmap</strong>, é necessário baixar o respectivo arquivo usando o comando <a href='downloadfile' class='command'>downloadfile</a>. O campo <strong>filename</strong>, deve conter o nome da imagem que ficará armazenada no dispositivo, já no campo <strong>remotepath</strong>, deve ser informado o nome da imagem ou arquivo armazenado no <a href='https://manager.cloudwalk.io' class='external' target='_blank'>CloudWalk Manager</a>.
        paragraph_3: Neste caso não é preciso utilizar o comando <a href='display' class='command'>display</a> para exibir a imagem.
        paragraph_4: A variável <strong>iReturn</strong> irá armazenar o resultado do comando.
        paragraph_5: 'As dimensões da imagem que será exibida, devem ser alinhados de acordo com a especificação e modelo do dispositvo utilizado. Confira uma imagem exemplo: <a href="http://dl.dropboxusercontent.com/u/436039/CLOUDWALK/img/walk.bmp" class="external" target="_blank">CloudWalk_Wallpaper</a>'
        parameters:
          parameter_1: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá receber o retorno do comando.<ul><li>-2: bitmap não é monocromático</li><li>-1: tamanho de bitmap inválido</li><li>0: bitmap não encontrado</li><li>1: bitmap exibido com sucesso</li></ul>'
          parameter_2: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo, com extensão.
      downloadfile:
        description: Faz o download de um arquivo previamente cadastrado no CloudWalk Manager
        paragraph_1: O comando <span class='code'>downloadfile</span> é utilizado para fazer download de um arquivo.
        paragraph_2: No exemplo acima, o arquivo <strong>wallpaper_walkpb.bmp</strong> será baixado pelo comando <strong>downloadfile</strong>, exibindo a resposta <strong>1</strong> no <a href='display' class='command'>display</a>.
        paragraph_3: Como o retorno do comando <strong>downloadfile</strong> é uma <a href='integervariable' class='command'>integervariable</a>, ela precisa ser convertida para <a href='stringvariable' class='command'>stringvariable</a> para ser exibida no <a href='display' class='command'>display</a>, com o comando <a href='inttostring' class='command'>inttostring</a>.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo, com extensão.
          parameter_2: <strong>remotepath</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo, com extensão.
          parameter_3: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando.<ul><li>2: O arquivo na memória do dispositivo tem o mesmo CRC do arquivo que esta cadastrado no CloudWalk Manager.</li><li>1: Download realizado com sucesso</li><li>0: Erro de encode base 64</li><li>-1: Arquivo não encontrado ou erro de encode</li><li>-2: Erro de conexão no buffer send</li><li>-4: Erro ao receber pacote do serviço CloudWalk</li><li>-5: Erro na conexão com o serviço CloudWalk</li><li>-6: Erro na transferência da mensagem</li><li>-7: Erro ao enviar confirmação de download concluído</li><li>-8: Número de série não autorizado</li></ul>'
      editfile:
        description: Permite escrever um arquivo no formato WALK dbfile (chave/valor)
        paragraph_1: O comando <span class='code'>editfile</span> é utilizado para fazer a edição de um arquivo no formato <a href='#walk_db' class='command'>Walk DB</a>.
        paragraph_2: No exemplo acima, foi feito o download do arquivo <strong>test.txt</strong> com o comando <a href='downloadfile' class='command'>downloadfile</a>.
        paragraph_3: O comando <a href='editfile' class='command'>editfile</a> faz a edição da chave <strong>Population</strong>, passando seu valor de <strong>3.792.621</strong> para <strong>3.792.700</strong>.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo.
          parameter_2: <strong>key</strong> <span class='data-type'>[string]</span><br/>Chave.
          parameter_3: <strong>value</strong> <span class='data-type'>[string]</span><br/>Novo valor para a chave.
      else:
        description: Condição lógica em um bloco da instrução if
        paragraph_1: O comando <span class='code'>else</span> é utilizado para especificar uma condição contrária ao comando <span class='code'>if</span> em uma aplicação POSXML. Outros comandos podem ser utilizados dentro de um bloco <span class='code'>else</span>, e estes comandos são executados caso a expressão lógica do comando <span class='code'>if</span> não seja verdadeira.
        paragraph_2: 'No exemplo acima, existem três condições:'
        paragraph_3: 1ª - comparação entre dois textos obtendo um retorno <strong>falso</strong> pois <strong>Blue</strong> é diferente do valor da variável <strong>sColor</strong>;
        paragraph_4: 2ª - comparação entre dois números obtendo um retorno <strong>falso</strong> pois <strong>111</strong> não é maior que o valor da variável <strong>iNumber</strong>;
        paragraph_5: 3ª - comparação entre dois textos obtendo um retorno <strong>falso</strong> pois <strong>blue</strong> é igual ao valor da variável <strong>sColor</strong>;
        paragraph_6: A linguagem POSXML é <strong>case-sensitive</strong>, existindo diferença entre letras maiúsculas e minúsculas.
      emv_adddata:
        description: Adiciona parâmetros ao processo EMV
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_10: Para tipo <em><strong>'finish'</strong> &lt;emv.finishtransaction/&gt;</em>
        table_3:
            table_row_1: Status da comunicação com o Host</br>0 - Comunicação bem sucedida</br>1 – Falha na comunicação com o host.
            table_row_2: Tipo de Emissor</br>0 - EMV “Full-Grade”</br>1 - EMV “Partial-Grade”.
            table_row_3: Authorization Response Code (em ASCII). O padrão define:<br/>00 - Approved<br/>01 - Denied<br/>Y1 - Offline approved<br/>Y3 - Offline declined<br/>Z1 - Unable to go online, offline approved<br/>Z3 - Unable to go online, offline declined
            table_row_4: Tamanho do campo baTLVDataEMV.
            table_row_5: Lista de tags retornadas pelo emissor. (Hex)
            table_row_6: Tamanho do campo baMandatoryTags.
            table_row_7: Lista de tags mandatórias a serem recuperadas na operação. (Hex)
        paragraph_11: No exemplo acima, foi demonstrado um exemplo para cada tipo de parâmetro, <span class='code'>init</span>, <span class='code'>process</span> e <span class='code'>finish</span>.
        paragraph_12: O exemplo aqui demonstrado é fictício, já que para se ter sucesso com toda uma transação EMV é necessário vários outros fatores como resposta ISO-8583 do emissor do cartão, chaves injetadas no terminal e demais requisitos como define a norma EMV.
        paragraph_2: O comando <span class='code'>emv.adddata</span> é utilizado para passagem de parâmetros para o <em>Kernel EMV</em> nas instruções <a href='emv.inittransaction' class='command'>emv.inittransaction</a>, <a href='emv.processtransaction' class='command'>emv.processtransaction</a> e <a href='emv.finishtransaction' class='command'>emv.finishtransaction</a>.
        paragraph_3: 'Parâmetros suportados:'
        paragraph_4: Parâmetro
        paragraph_5: Descrição
        paragraph_6: Contact
        paragraph_7: Cless
        paragraph_8: Para tipo <em><strong>'init'</strong> &lt;emv.inittransaction/&gt;</em>
        table_1:
            table_row_1: Identificador da Rede Adquirente
            table_row_2: 99 - Todas as aplicaçãoes</br>0 - Apenas aplicações selecionadas em waAppArray
            table_row_3: Valor inicial(Amount authorized). 12 caracteres com padding de 0 a esquerda, exemplo:</br>“000000005000”(50,00)
            table_row_4: Data da Transação(“AAMMDD”)
            table_row_5: Hora da transação(“HHMMSS”)
            table_row_6: Selo de tempo para as tabelas(“DDMMAAAASS”), onde SS é um número sequencial qualquer. O Kernel EMV do Telium
            table_row_7: Quantidade de entradas da lista waAppArray
            table_row_8: Array contendo identificador da rede adquirente + índice para tabela de parâmetros EMV. Aonde X é o número sequencial da aplicação, começando a partir do 1. Exemplo waAppArray1, waAppArray2...
        paragraph_9: Para tipo <em><strong>'process'</strong> &lt;emv.processtransaction/&gt;</em>
        table_2:
          table_row_1: Valor da transação (Amount, authorized), podendo incluir novos valores apresentados após a instrução emv.inittransaction. 12 caracteres com padding de 0 a esquerdo, exemplo:</br>“000000005000”(50,00).
          table_row_2: 'Valor de saque ou troco - cashback (Amount, other). 12 caracteres com padding de 0 a esquerdo, exemplo: “000000005000”(50,00).'
          table_row_3: Anulação da transação anterior</br>1 - sim</br>0 - não
          table_row_4: Resultado da consulta à lista negativa (EMV)</br>0 - PAN não consta na lista negra</br>1 - PAN consta na lista negra.
          table_row_5: Obrigatoriedade de conexão</br>0 - Transação pode ser efetuada offline</br>1 - Transação somente pode ser efetuada online.
          table_row_6: Entrada de PIN</br>0 - Não obrigatória</br>1 - Obrigatória.
          table_row_7: Modo de criptografia para captura de PIN online</br>2 - DUKPT DES(8 bytes)</br>3 - DUKPT 3DES(18 bytes)
          table_row_8: Gerenciamento de risco EMV (Risk Management)</br>0 - Não faz o gerenciamento de risco</br>1 - Faz o gerenciamento de risco.
          table_row_9: Terminal Floor Limit (em centavos).
          table_row_10: Valor limite para “Biased Transaction Selection” em centavos.
          table_row_11: Porcentagem máxima alvo para ser usada em “Biased Transaction Selection”.
          table_row_12: Tamanho do campo baMandatoryTags.
          table_row_13: Lista de tags necessárias para a montagem do campo 55 da mensagem ISO-8583. (Hex)
          table_row_14: Tamanho do campo baOptionalTags.
          table_row_15: Lista de tags desejáveis a serem recuperadas na operação. (Hex)
        parameters:
          parameter_1: <strong>parameter</strong> <span class='data-type'>[string]</span><br/> Nome do parâmetro que desejamos passar. <a href='#table-of-parameters'>(veja tabela abaixo)</a>
          parameter_2: '<strong>type</strong> <span class="data-type">[string]</span><br/> Tipo do parâmetro, pode ser: <br/><ul><li>init</li><li>process</li><li>finish</li></ul>'
          parameter_3: <strong>value</strong> <span class='data-type'>[string]</span><br/> Valor do parâmetro.
          parameter_4: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/> Retorno do comando, onde: <br/><ul><li>0: OK</li><li>-1: Erro. Tipo, chave ou valor não existe.</li></ul>'
      emv_cleanstructures:
        description: Limpa todos os parâmetros de entrada e saída
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>emv.cleanstructures</span> é utilizado para limpar as estruturas de entrada de dados e busca de informação. É necessário a execução em todo inicio de transação.
        paragraph_3: No exemplo acima, o primeiro comando a ser executado é o <span class='code'>emv.cleanstructures</span>, para limpar as estruturas de dados para a nova transação, em seguida, o comando <a href='emv.adddata' class='command'>emv.adddata</a> é executado para passagem dos parâmetros para o <em>Kernel EMV</em>, e o comando <a href='emv.inittransaction' class='command'>emv.inittransaction</a> dá inicio a transação.
        paragraph_4: O comando <a href='if' class='command'>if</a> deve ser utilizado para avaliar o retorno dos comandos. No processo de desenvolvimento de uma aplicação, os comandos <a href='inttostring' class='command'>inttostring</a> e <a href='print' class='command'>print</a> podem ser usados para processo de <strong>DEBUG</strong> e auxílio do programador.
      emv_finishtransaction:
        description: Finaliza a execução do processo EMV
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>emv.finishtransaction</span> finaliza o processamento de cartão com chip, caso <a href='emv.processtransaction' class='command'>emv.processtransaction</a> tenha requerido aprovação online ou caso a transação já tenha sido aprovada offline.
        paragraph_3: Uma transação negada em <a href='emv.processtransaction' class='command'>emv.processtransaction</a> não requer uma chamada desta instrução.
        paragraph_4: No exemplo acima, foi usado o comando <a href='emv.adddata' class='command'>emv.adddata</a> para passagem de parâmetros para o <em>Kernel EMV</em>.
        paragraph_5: Após isso, o comando <span class='code'>emv.finishtransaction</span> é executado para finalizar o processamento do cartão com chip, como o retorno do comando é um <a href='integervariable' class='command'>integervariable</a> o comando <a href='inttostring' class='command'>inttostring</a> é utilizado para converter a variável e exibi-la com o comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/><ul><li>0: OK</li><li>11: Parâmetro inválido passado em <em>emv.adddata</em></li><li>12: Timeout</li><li>13: Operação de inserção/passagem do cartão ou escolha de aplicação cancelada pelo usuário</li><li>15: Biblioteca EMV não iniciada</li><li>16: Erro interno</li><li>20: Timestamp do dispositivo não bate com o do parâmetro passado em <em>emv.adddata</em></li><li>40: Erro na execução</li><li>41: Erro de leitura do cartão</li><li>43: Cartão retirado no meio da operação</li></ul>'
      emv_getinfo:
        description: Retorna parâmetros de informação após execução de processo EMV
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_10: Para tipo <em><strong>'finish'</strong> &lt;emv.finishtransaction/&gt;</em>
        table_3:
          table_row_1: Decisão tomada</br>0 - Aprovado</br>1 - Negado pelo cartão</br>2 - Negado pelo host
          table_row_2: Tags mandatórias e opcionais requisitadas em emv.processtransaction
          table_row_3: Tamanho do Issuer Script Results
          table_row_4: Resultado da execução dos scripts.(EMV 4.2, Book 4, Anexo A5)
        paragraph_11: No exemplo acima, o comando <span class='code'>emv.getinfo</span> foi usado para buscar os parâmetros após a execução dos comandos <a href='emv.inittransaction' class='command'>emv.inittransaction</a>, <a href='emv.processtransaction' class='command'>emv.processtransaction</a> e <a href='emv.finishtransaction' class='command'>emv.finishtransaction</a>. O comando <a href='print' class='command'>print</a> foi utilizado para exibir as informações impressas no ticket.
        paragraph_12: Note que antes de executar as intruções <strong>init</strong>, <strong>process</strong> e <strong>finish</strong> é necessário passar parâmetros para o <em>Kernel EMV</em> com o comando <a href='emv.adddata' class='command'>emv.adddata</a>.
        paragraph_2: O comando <span class='code'>emv.getinfo</span> é utilizado para busca de resultados nas intruções <a href='emv.inittransaction' class='command'>emv.inittransaction</a>, <a href='emv.processtransaction' class='command'>emv.processtransaction</a> e <a href='emv.finishtransaction' class='command'>emv.finishtransaction</a>.
        paragraph_3: 'Parâmetros suportados:'
        paragraph_4: Parâmetro
        paragraph_5: Descrição
        paragraph_6: Contact
        paragraph_7: Cless
        paragraph_8: Para tipo <em><strong>'init'</strong> &lt;emv.inittransaction/&gt;</em>
        table_1:
          table_row_1: Tipo do cartão</br>0 - Tarja magnética</br>3 - EMV chip card.
          table_row_2: Status da última leitura do cartão</br>0 - ok</br>1 - Fallback é necessário</br>2 - App não suportada
          table_row_3: Tipo de aplicação selecionada (conforme tabela de parâmetros)</br>01 - Crédito</br>02 - Débito</br>03 - Voucher
          table_row_4: Identificador da rede adquirente (conforme tabela de parâmetros).
          table_row_5: Índice do registro na tabela de parâmetros.
          table_row_6: Tamanho do campo bTrack1.
          table_row_7: Trillha 1 (Hex).
          table_row_8: Tamanho do campo bTrack2.
          table_row_9: Trilha 2 (Hex).
          table_row_10: Tamanho do campo bTrack3.
          table_row_11: Trilha 3 (Hex).
          table_row_12: Tamanho do campo baPAN.
          table_row_13: PAN
          table_row_14: PAN Sequence.
          table_row_15: Tamanho do campo baApplicationLabel.
          table_row_16: Application Name.
          table_row_17: Service Code (com zero á esquerda).
          table_row_18: Tamanho do campo baCardHolderName.
          table_row_19: Nome cardholder.
          table_row_20: Data de expiração (“AAMMDD”).
          table_row_21: Tamanho do campo baExternalNumber.
          table_row_22: Número externo do cartão.
          table_row_23: Saldo, em caso de moedeiro.
          table_row_24: Código do país do Emissor.
        paragraph_9: Para tipo <em><strong>'process'</strong> &lt;emv.processtransaction/&gt;</em>
        table_2:
          table_row_1: Decisão tomada</br>0 - Aprovada Offline</br>1 - Negada</br>2 - Ir Online
          table_row_2: Assinatura em papel deve ser obtida</br>0 - Não</br>1 - Sim
          table_row_3: PIN foi verificado Offline</br>0 - Não</br>1 - Sim
          table_row_4: Número de apresentações inválidas de PIN Offline
          table_row_5: PIN Offline foi bloqueado na última apresentação inválida</br>0 - Não</br>1 - Sim
          table_row_6: PIN capturado para verificação online</br>0 - Não</br>1 - Sim
          table_row_7: Número de série da chave (Key Serial Number) e contador (Key Counter) Em caso de PIN Online
          table_row_8: Tamanho do campo baTLVDataEMV
          table_row_9: Tags mandatórias e opcionais requisitadas no parâmetro baMandatoryTags de AddData (criptograma para ser análisado pelo emissor do cartão em caso de transação online)
          table_row_10: Quantidade disponível para aprovação offline
          table_row_11: VLP Issuer Authorization Code. Apenas para cartões Visa e JCB
          table_row_12: VISA Card Transaction Qualifiers
          table_row_13: Data de expiração da aplicação
          table_row_14: Aplicação efetiva na data (“DDMMAA”)
          table_row_15: Tamanho do campo baTrack1EquivalentData
          table_row_16: Track 1 Equivalent Data
          table_row_17: Tamanho do campo baTrack2EquivalentData
          table_row_18: Track 2 Equivalent Data
          table_row_19: Tipo do cartão</br>0 - Tarja magnética</br>3 - EMV chip card
          table_row_20: Tamanho do campo baApplicationIdentifier
          table_row_21: Application Identifier
          table_row_22: Tamanho do campo bTrack1
          table_row_23: Trillha 1 (Hex)
          table_row_24: Tamanho do campo bTrack2
          table_row_25: Trilha 2 (Hex)
          table_row_26: Tamanho do campo baPAN
          table_row_27: PAN
          table_row_28: PAN Sequence
          table_row_29: Tamanho do campo baApplicationLabel
          table_row_30: Application Name
          table_row_31: Tamanho do campo baCardHolderName
          table_row_32: Nome cardholder
        parameters:
          parameter_1: <strong>parameter</strong> <span class='data-type'>[string]</span><br/>Nome do parâmetro que desejamos buscar <a href='#table-of-parameters'>(veja tabela abaixo)</a>.
          parameter_2: <strong>type</strong> <span class='data-type'>[string]</span><br/>tipo do parâmetro, pode ser:<br/><ul><li>init</li><li>process</li><li>finish</li></ul>
          parameter_3: <strong>value</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o valor do parâmetro que será retornado pelo <em>Kernel EMV</em>.
      emv_inittransaction:
        description: Inicializa o processo EMV com os parâmetros inseridos
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>emv.inittransaction</span> inicia o processamento EMV com um cartão, seja ele magnético ou com chip. Neste momento, a biblioteca EMV pedirá a <strong>inserção/passagem</strong> do cartão para escolha e inicialização da aplicação EMV no smartcard, a resposta são os dados do cartão para análise da aplicação no dispositivo.
        paragraph_3: Esta instrução utiliza o timeout na operação de inserção de cartão e escolha de aplicação, caso este tenha sido definido em <a href='emv.settimeout' class='command'>emv.settimeout</a>.
        paragraph_4: No exemplo acima, o comando <a href='emv.cleanstructures' class='command'>emv.cleanstructures</a> foi utilizado para limpar as estruturas de dados, e o comando <a href='emv.adddata' class='command'>emv.adddata</a> foi utilizado para passar parâmetros para o <em>Kernel EMV</em>.
        paragraph_5: Após isso, o comando <span class='code'>emv.inittransaction</span> é executado para iniciar a processamento EMV. Como o retorno do comando é um <a href='integervariable' class='command'>integervariable</a>, o comando <a href='inttostring' class='command'>inttostring</a> é utilizado para converter a variável e exibi-la com o comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/><ul><li>0: OK</li><li>11: Parâmetro inválido passado em <em>emv.addata</em></li><li>12: Timeout</li><li>13: Operação de inserção/passagem do cartão ou escolha de aplicação cancelada pelo usuário</li><li>15: Biblioteca EMV não iniciada</li></ul>'
      emv_loadtables:
        description: Carrega tabelas EMV e PKI de arquivo por adquirente
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>emv.loadtables</span> é utilizado para carregar as tabelas de configurações para cada aplicação EMV por rede adquirente.
        paragraph_3: O carregamento das tabelas deve ser feito na inicialização do dispositivo. Para carregar um tabela, deve ser enviado para o dispositivo um arquivo com um padrão de nome mais o número da rede adquirente.
        paragraph_4: No exemplo acima, o comando <a href='emv.open' class='command'>emv.open</a> é utilizado para inicializar a biblioteca EMV, e em seguida o comando <a href='if' class='command'>if</a> é utilizado para avaliar o resultado da operação.
        paragraph_5: O comando <span class='code'>emv.loadtables</span> é utilizado para carregar as tabelas, e como o retorno do comando é um <a href='integervariable' class='command'>integervariable</a>, o comando <a href='inttostring' class='command'>inttostring</a> é utilizado para converter e exibir a variável através do comando <a href='display' class='command'>display</a>.
        paragraph_6: <strong>ATENÇÃO!</strong>
        paragraph_7: Só é necessário inicializar a biblioteca EMV e carregar as tabelas caso o dispositivo seja <strong>ligado</strong> ou <strong>reiniciado</strong>, caso contrário, não é necessário usar este comando todas as vezes em uma transação EMV.
        parameters:
          parameter_1: <strong>acquirer</strong> <span class='data-type'>[integer]</span><br/> Número de identificação da rede adquirente.
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/><ul><li>0: OK </li><li>10: Problema na inicialização das tabelas</li><li>15: Biblioteca EMV não iniciada</li><li>16: Erro interno</li><li>21: Erro ao tentar armazenar registros</li><li>30: Erro de comunicação, porta serial do PIN-Pad provavelmente esta ocupada</li></ul>'
      emv_open:
        description: Inicializa a biblioteca EMV
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>emv.open</span> é utilizado para inicializar a biblioteca EMV, alocando os recursos de hardware e software necessários ao funcionamento do conjunto Kernel EMV do equipamento. A chamada bem sucedida deste comando é pré-requisito para todas as outras chamadas da biblioteca.
        paragraph_3: No exemplo acima, o comando <span class='code'>emv.open</span> foi utilizado para inicializar da biblioteca EMV do dispositivo. Como o retorno do comando é um <a href='integervariable' class='command'>integervariable</a>, utiliza-se o comando <a href='inttostring' class='command'>inttostring</a> para converter a variável para <a href='stringvariable' class='command'>stringvariable</a> e exibi-la em seguida com o comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>mkslot</strong> <span class='data-type'>[integer]</span><br/> Slot do dispositivo onde esta gravado a master key.
          parameter_2: '<strong>pinpadtype</strong> <span class="data-type">[integer]</span><br/> Tipo do PIN-Pad utilizado: <br/><ul><li>1: Interno</li><li>2: Externo</li></ul>'
          parameter_3: <strong>pinpadwk</strong> <span class='data-type'>[string]</span><br/> Working key utilizada na sessão com o pinpad.
          parameter_4: '<strong>showamount</strong> <span class="data-type">[integer]</span><br/> Define se a biblioteca mostrará amount ou não: <br/><ul><li>1: Mostra amount</li><li>0: Não mostra amount</li></ul>'
          parameter_5: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/> Retorno do comando, onde: <br/><ul><li>0: OK</li><li>14: Biblioteca já inicializada</li><li>16: Erro</li></ul>'
      emv_processtransaction:
        description: Inicia a execução do processo EMV
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>emv.processtransaction</span> continua o processo de tratamento de cartões com chip. Caso a instrução <a href='emv.inittransaction' class='command'>emv.inittransaction</a> tenha reportado a passagem de um cartão magnético esta instrução não devera ser chamada.
        paragraph_3: Este comando utiliza timeout na captura de PIN caso este tenha sido definido em <a href='emv.settimeout' class='command'>emv.settimeout</a>.
        paragraph_4: No exemplo acima, foi usado o comando <a href='emv.adddata' class='command'>emv.adddata</a> para passagem de parâmetros para o <em>Kernel EMV</em>.
        paragraph_5: Após isso, o comando <span class='code'>emv.processtransaction</span> é executado para continuar o processamento do cartão com chip. Como o retorno do comando é um <a href='integervariable' class='command'>integervariable</a>, o comando <a href='inttostring' class='command'>inttostring</a> é utilizado para converter a variável e exibi-la com o comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: '<strong>ctls</strong> <span class="data-type">[integer]</span><br/>Define se a transação será <em><strong>contact-less</strong></em> ou não, onde:<br/><ul><li>1: Transação contact-less</li><li>0: Transação com contato</li></ul>'
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/><ul><li>0: OK</li><li>11: Parâmetro inválido passado em <em>emv.adddata</em></li><li>12: Timeout</li><li>13: Operação de inserção/passagem do cartão ou escolha de aplicação cancelada pelo usuário</li><li>15: Bilioteca EMV não iniciada</li><li>16: Erro interno</li><li>19: Ausência de dado mandatório para a montagem do campo 55, ou dado mandatório não está acessivel (se esse o caso, passe a tag em baOptionalTags)</li><li>31: Erro de comunicação com o PIN-Pad</li><li>40: Erro na execução</li><li>43: Cartão retirado no meio da operação</li></ul>'
      emv_removecard:
        description: Aguarda remoção do cartão
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>emv.removecard</span> aguarda a remoção do cartão com chip. Aconselha-se sempre o uso deste comando ao final do fluxo de operação, seja ele bem ou mal sucedido.
        paragraph_3: Este comando utiliza timeout para a retirada do cartão, caso este tenha sido definido em <a href='emv.settimeout' class='command'>emv.settimeout</a>.
        paragraph_4: No exemplo acima, foi usado o comando <a href='emv.adddata' class='command'>emv.adddata</a> para passagem de parâmetros para o <em>Kernel EMV</em>.
        paragraph_5: Após isso, o comando <span class='code'>emv.finishtransaction</span> é executado para finalizar o processamento do cartão com chip. Em seguinda o comando <span class='code'>emv.removecard</span> solicita que usuário remova o cartão. Como o retorno do comando é um <a href='integervariable' class='command'>integervariable</a>, o comando <a href='inttostring' class='command'>inttostring</a> é utilizado para converter a variável e exibi-la com o comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/><ul><li>0: OK</li><li>11: Parâmetro inválido passado em <em>emv.adddata</em></li><li>12: Timeout</li><li>13: Operação de inserção/passagem do cartão ou escolha de aplicação cancelada pelo usuário</li><li>15: Bilioteca EMV não iniciada</li></ul>'
      emv_settimeout:
        description: Define Timeout (em segundos) da biblioteca de processos EMV
        paragraph_1: O conhecimento da norma <a href='http://www.emvco.com' class='external' target='blank'>EMV</a> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>emv.settimeout</span> é utilizado para definir o timeout para ser utilizado por comandos bloqueantes.
        paragraph_3: Esse timeout pode ser alterado antes da chamada de cada instrução, ou seja, esta instrução pode ser chamado diversas vezes durante o ciclo de uma transação.
        paragraph_4: No exemplo acima, o comando <span class='code'>emv.settimeout</span> é executado passando para o parâmetro <em><strong>seconds</strong></em> 10 segundos, ou seja, quando a próxima instrução <a href='emv.inittransaction' class='commands'>emv.inittransaction</a> for executada, o terminal irá aguardar durante 10 segundos até que o usuário insira ou passe o cartão.
        parameters:
          parameter_1: <strong>timeout</strong> <span class='data-type'>[integer]</span><br/>Timeout em segundos
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/><ul><li>0: OK</li><li>15: Bilioteca EMV não iniciada</li><li>16: Erro interno</li></ul>'
      example: Exemplo
      execute:
        app_name: 'Nome da aplicação:'
        description: Executa um aplicativo POSXML compilado e armazenado no POS
        paragraph_1: O comando <span class='code'>execute</span> executa um arquivo POSXML compilado.
        paragraph_2: Nos exemplos acima, foram desenvolvidas duas aplicações utilizando a linguagem POSXML, a primeira com o nome <strong>appone</strong> e a segunda com o respectivo nome <strong>apptwo</strong>.
        paragraph_3: A primeira aplicação, ao ser iniciada e caso consiga estabelecer uma conexão com sucesso, dará inicio ao download da segunda aplicação que posteriormente será iniciada através do comando <a href='execute' class='command'>execute</a>. A segunda aplicação (<strong>apptwo</strong>) exibirá uma mensagem de confirmação ao ser executada pela aplicação <strong>appone</strong>.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo POSXML que será executado.
      exit:
        description: Encerra imediatamente a execução do aplicativo POSXML
        paragraph_1: O comando <span class='code'>exit</span> é utilizado para cancelar a execução de uma aplicação POSXML.
        paragraph_2: Neste exemplo, apesar do uso do comando <a href='waitkey' class='command'>waitkey</a>, o comando <strong>exit</strong> irá fechar a aplicação após o comando <a href='display' class='command'>display</a> ser executado.
      file_close:
        description: Fecha um arquivo que foi previamente aberto com file.open
        paragraph_1: O comando <span class='code'>file.close</span> é utilizado para fechar um arquivo aberto.
        paragraph_2: No exemplo acima, foi feito o download do arquivo <strong>test.txt</strong> com o comando <a href='downloadfile' class='command'>downloadfile</a>.
        paragraph_3: O arquivo <strong>test.txt</strong> foi aberto para leitura(<strong>r</strong>) com o comando <a href='file.open' class='command'>file.open</a> e fechado pelo comando <a href='file.close' class='command'>file.close</a>.
        parameters:
          parameter_1: <strong>handle</strong> <span class='data-type'>[integer]</span><br/>Identificador do arquivo aberto.
      file_open:
        description: Abre um arquivo para leitura ou escrita
        paragraph_1: O comando <span class='code'>file.open</span> é utilizado para fazer a abertura de um arquivo para leitura ou escrita.
        paragraph_2: No exemplo acima, foi feito o download do arquivo <strong>test.txt</strong> com o comando <a href='downloadfile' class='command'>downloadfile</a>. O arquivo <strong>test.txt</strong> foi aberto para leitura(<strong>r</strong>) com o comando <a href='file.open' class='command'>file.open</a>.
        paragraph_3: O <a href='display' class='command'>display</a> irá exibir uma valor maior do que <strong>0</strong>. Caso haja algum erro será exibido <strong>-1</strong>.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo.
          parameter_2: '<strong>mode</strong> <span class="data-type">[string]</span><br/><ul><li>r: Leitura</li><li>w: Escrita</li></ul>'
          parameter_3: '<strong>variablehandle</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando.<ul><li>-1: Não foi possível abrir arquivo</li><li>>-1: Arquivo aberto</li></ul>'
      file_read:
        description: Lê um arquivo que foi previamente aberto com file.open
        paragraph_1: O comando <span class='code'>file.read</span> é utilizado para fazer a leitura de um arquivo aberto.
        paragraph_2: No exemplo acima, foi feito o download do arquivo <strong>test.txt</strong> com o comando <a href='downloadfile' class='command'>downloadfile</a>. O arquivo <strong>test.txt</strong> foi aberto para leitura(<strong>r</strong>) com o comando <a href='file.open' class='command'>file.open</a>.
        paragraph_3: Note que para informar o tamanho do arquivo, em bytes, para o comando <a href='file.read' class='command'>file.read</a>, foi preciso usar o comando <a href='filesystem.filesize' class='command'>filesystem.filesize</a>.
        paragraph_4: O retorno da leitura do arquivo feita de pelo comando <a href='file.read' class='command'>file.read</a> será exibido no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>handle</strong> <span class='data-type'>[integer]</span><br/>Identificador do arquivo aberto.
          parameter_2: <strong>size</strong> <span class='data-type'>[integer]</span><br/>Quantidade de bytes que serão lidos.
          parameter_3: <strong>variablebuffer</strong> <span class='data-type'>[string]</span><br/>Hexadecimal do conteúdo dos bytes lidos.
          parameter_4: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Número de bytes lidos.
      file_write:
        description: Grava um arquivo que foi previamente aberto com file.open
        paragraph_1: O comando <span class='code'>file.write</span> é utilizado para fazer a escrita em um arquivo aberto.
        paragraph_2: No exemplo acima, foi feito o download do arquivo <strong>test.txt</strong> com o comando <a href='downloadfile' class='command'>downloadfile</a>. O arquivo <strong>test.txt</strong> foi aberto para leitura(<strong>r</strong>) com o comando <a href='file.open' class='command'>file.open</a>.
        paragraph_3: Note que para informar o tamanho do arquivo, em bytes, para o comando <a href='file.read' class='command'>file.read</a>, foi preciso usar o comando <a href='filesystem.filesize' class='command'>filesystem.filesize</a>.
        paragraph_4: O retorno da leitura do arquivo feita de pelo comando <a href='file.read' class='command'>file.read</a> será exibido no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>handle</strong> <span class='data-type'>[integer]</span><br/>Identificador do arquivo aberto.
          parameter_2: <strong>size</strong> <span class='data-type'>[integer]</span><br/>Quantidade de bytes que serão escritos.
          parameter_3: <strong>buffer</strong> <span class='data-type'>[string]</span><br/>Hexadecimal do conteúdo a ser escrito.
      filesystem_filesize:
        description: Retorna o tamanho de um arquivo na memória do dispositivo
        paragraph_1: O comando <span class='code'>filesystem.filesize</span> é utilizado para retornar o tamanho em bytes, de um arquivo na memória do dispositivo.
        paragraph_2: No exemplo acima, o arquivo <strong>wallpaper_walkpb.bmp</strong> será baixado pelo comando <strong>downloadfile</strong> e o comando <strong>filesystem.filesize</strong> irá retornar o seu tamanho, em bytes.
        paragraph_3: Como o retorno do comando <strong>filesystem.filesize</strong> é uma <a href='integervariable' class='command'>integervariable</a>, ela precisa ser convertida para <a href='stringvariable' class='command'>stringvariable</a> para ser exibida no <a href='display' class='command'>display</a>, com o comando <a href='inttostring' class='command'>inttostring</a>.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo, com extensão.
          parameter_2: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando.
      filesystem_listfiles:
        description: Lista os arquivos de um diretório salvando-os em um arquivo
        paragraph_1: O comando <span class='code'>filesystem.listfiles</span> é utilizado para listar os arquivos de um diretório salvando-os em um arquivo.
        paragraph_2: Este comando ainda não funciona para a linha de terminais <strong>Telium 2</strong>.
        paragraph_3: No exemplo acima, será criado um arquivo chamado <em><strong>files.dat</strong></em>, e este arquivo guardará o nome e o tamanho de todos os arquivos que estiverem no diretório que foi analisado, neste caso <strong>F</strong>.<br/> Como o retorno do comando é um <a href='integervariable' class='command'>integervariable</a> o comando <a href='inttostring' class='command'>inttostring</a> é utilizado para converter a variável e exibi-la com o comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>dir</strong> <span class='data-type'>[string]</span><br/>Diretório que será analizado, pode ser I ou F (Verifone).
          parameter_2: <strong>listfilename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo que irá armazenar o nome e o tamanho dos arquivos do diretório especificado.
          parameter_3: '<strong>variablereturn</strong> <span class="data-type">[inteiro]</span><br/>Variável que irá armazenar o retorno do comando.<ul><li>0: Listagem de arquivos criada</li><li>-1: Diretório vazio</li></ul>'
      filesystem_renamefile:
        description: Renomeia um arquivo
        paragraph_1: O comando <span class='code'>filesystem.renamefile</span> é utilizado para renomear um arquivo.
        paragraph_2: No exemplo acima, o arquivo chamado <em><strong>file_temp.dat</strong></em> foi renomeado para <em><strong>file.dat</strong></em>.
        parameters:
          parameter_1: <strong>oldname</strong> <span class='data-type'>[string]</span><br/>Nome atual do arquivo.
          parameter_2: <strong>newname</strong> <span class='data-type'>[string]</span><br/>Novo nome, que irá substituir o atual.
          parameter_3: '<strong>variablereturn</strong> <span class="data-type">[inteiro]</span><br/>Variável que irá armazenar o retorno do comando.<ul><li>0: Arquivo renomeado</li><li>-1: Arquivo não encontrado</li></ul>'
      filesystem_space:
        description: Verifica o espaço (livre e utilizado) e o número de arquivos na memória
        paragraph_1: Este comando não funciona em terminais da linha <strong>Telium 2.</strong>
        paragraph_2: O comando <span class='code'>filesystem.space</span> é utilizado para retornar o informações sobre a memória do dispositivo
        paragraph_3: No exemplo acima, serão exibidas no <a href='display' class='command'>display</a>, todas as informações sobre a memória do dispositivo.
        paragraph_4: Como o retorno do comando <strong>filesystem.space</strong> é uma <a href='integervariable' class='command'>integervariable</a>, ela precisa ser convertida para <a href='stringvariable' class='command'>stringvariable</a> para ser exibida no <a href='display' class='command'>display</a>, com o comando <a href='inttostring' class='command'>inttostring</a>
        parameters:
          parameter_1: <strong>dir</strong> <span class='data-type'>[string]</span><br/>Unidade.
          parameter_2: '<strong>type</strong> <span class="data-type">[string]</span><br/><ul><li>total: Espaço total</li><li>used: Espaço usado</li><li>free: Espaço livre</li><li>countfiles: Quantidade de arquivos</li></ul>'
          parameter_3: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando.
      function:
        description: Define um bloco de código que pode ser posteriormente executado
        paragraph_1: O comando <span class='code'>function</span> encapsula outros comandos e ações e pode ser chamado pelo comando <a href='callfunction' class='command'>callfunction</a> quando necessário. Funções são usadas para evitar repetição de código.
        paragraph_2: No exemplo acima foi declarada a função <em>double_value</em> que encapsula o comando <a href='mathematicaloperation' class='command'>mathematicaloperation</a> que por sua vez dobra o valor da variável <em><strong>iNumber</strong></em>.
        paragraph_3: O comando <a href='callfunction' class='command'>callfunction</a> faz a chamada da função <em>dobra_valor</em>.
        paragraph_4: Para exibir o valor da variável <em><strong>iNumber</strong></em>, que é um <a href='integervariable' class='command'>integervariable</a>, é preciso mudar o seu tipo para <a href='stringvariable' class='command'>stringvariable</a>, usando o comando <a href='inttostring' class='command'>inttostring</a>.
        parameters:
          parameter_1: <strong>name</strong> <span class='data-type'>[string]</span><br/>Nome dado a função, usado quando for preciso fazer a chamada.
      getcardvariable:
        description: Obtém o número do cartão e o armazena diretamente em uma variável
        paragraph_1: O comando <span class='code'>getcardvariable</span> é utilizado para recuperar o número do cartão passado no leitor magnético.
        paragraph_2: No exemplo acima, quando o cartão for passado pelo leitor magnético, o seu número será exibido.
        parameters:
          parameter_1: <strong>firstmessage</strong> <span class='data-type'>[string]</span><br/>Mensagem que será exibida antes do cartão ser passado no leitor magnético.
          parameter_2: <strong>maximum</strong> <span class='data-type'>[integer]</span><br/>O tamanho máximo do número do cartão.
          parameter_3: <strong>minimum</strong> <span class='data-type'>[integer]</span><br/>O tamanho mínimo do número do cartão.
          parameter_4: <strong>secondmessage</strong> <span class='data-type'>[string]</span><br/>Mensagem que será exibida quando o usuário pressionar a tecla <strong>Enter</strong>.
          parameter_5: <strong>variable</strong> <span class='data-type'>[string]</span><br/>Variável que irá receber o retorno da função.
      getdatetime:
        description: Armazena em uma variável a data e a hora no momento da execução
        paragraph_1: O comando <span class='code'>getdatetime</span> é utilizado para pegar a data e hora do relógio do dispositivo.
        paragraph_2: O comando <a href='getdatetime' class='command'>getdatetime</a> recebe o formato desejado e informa a variável que irá amazenar seu retorno que é, em seguida, exibida na tela do dispositivo.
        parameters:
          parameter_1: '<strong>format</strong> <span class="data-type">[string]</span><br/>Formato da data recuperada onde:<ul><li>yy: ano com quatros dígitos</li><li>y: ano com dois dígitos</li><li>M: mês com dois dígitos</li><li>d: dia com dois dígitos</li><li>h: hora com dois dígitos</li><li>m: minutos com dois dígitos</li><li>s: segundos com dois dígitos</li>Os separadores <strong>/</strong> são adicionados automaticamente, caso sejam passados no parâmetro.</ul>'
          parameter_2: <strong>returnvariable</strong> <span class='data-type'>[string]</span><br/>Armazena a data retornada.
      if:
        description: Instrução de tomada de decisão ou comparação lógica
        operators:
          operator_1: <strong>greaterthan:</strong> maior <span class='code'>&gt;</span>
          operator_2: <strong>lessthan:</strong> menor <span class='code'>&lt;</span>
          operator_3: <strong>greaterthanorequalto:</strong> maior ou igual <span class='code'>&gt;=</span>
          operator_4: <strong>lessthanorequalto:</strong> menor ou igual <span class='code'>&lt;=</span>
          operator_5: <strong>equalto:</strong> igual <span class='code'>=</span>
          operator_6: <strong>notequalto:</strong> diferente <span class='code'>!</span>
        operators_integer:
          paragraph_1: <strong>Operadores com variáveis do tipo integer</strong>
          paragraph_2: Para variáveis do tipo integer, todas as operações são realizadas seguindo o padrão de qualquer linguagem de programação.
        operators_list: <strong>Listagem de operadores</strong>
        operators_string:
          paragraph_1: <strong>Operadores com variáveis do tipo string</strong>
          paragraph_2: Os operadores <span class='code'>greaterthan</span>, <span class='code'>lessthan</span>, <span class='code'>greaterthanorequalto</span>, <span class='code'>lessthanorequalto</span>, no caso de variáveis do tipo string, convertem a variável que está sendo comparada para ponto flutuante, e em seguida realiza a comparação.
        other_operators: Os operadores <span class='code'>equalto</span> e <span class='code'>notequalto</span> seguem a mesma lógica de comparação de qualquer linguagem de programação.
        paragraph_1: O comando <span class='code'>if</span> é utilizado para especificar uma tomada de decisão ou comparação lógica em uma aplicação POSXML. Outros comandos podem ser utilizados dentro de um bloco <span class='code'>if</span>, e estes comandos são executados caso a expressão lógica seja verdadeira.
        paragraph_2: No exemplo acima, existem três condições:<ul><li>1ª - compara dois textos fazendo com que ela seja <em><strong>verdadeira</strong></em> pois <em><strong>azul</strong></em> é igual ao valor da variável <em><strong>sColor</strong></em></li><li>2ª - compara dois números fazendo com que ela seja <em><strong>falsa</strong></em> pois <em><strong>111</strong></em> não é maior que o valor da variável <em><strong>iNumber</strong></em></li><li>3ª - compara dois textos fazendo com que ela seja <em><strong>falsa</strong></em> pois <em><strong>Azul</strong></em> é diferente do valor da variável <em><strong>sColor</strong></em>. POSXML leva em consideração letras maiúsculas e minúsculas (<em><strong>case-sensitive</strong></em>)</li></ul>O comando <a href='waitkey' class='command'>waitkey</a> aguarda o clique de alguma tecla para continuar a execução do código.
        parameters:
          parameter_1: <strong>variable</strong> <span class='data-type'>[string ou integer]</span><br/>Variável que será utilizada na comparação.
          parameter_2: '<strong>operator</strong> <span class="data-type">[string]</span><br/>Operadores de comparação: <span class="code">lessthan</span>, <span class="code">greaterthan</span>, <span class="code">equalto</span>, <span class="code">notequalto</span>, <span class="code">greaterthanorequalto</span> ou <span class="code">lessthanorequalto</span>.'
          parameter_3: <strong>value</strong> <span class='data-type'>[string ou integer]</span><br/>Valor que será utilizado na comparação.
      input_getvalue:
        description: Captura uma string e a exibe na tela em qualquer posição
        paragraph_1: O comando <span class='code'>input.getvalue</span> é usado para capturar uma string e exibi-la na tela em qualquer posição.
        paragraph_2: No exemplo acima o comando <a href='input.getvalue' class='command'>input.getvalue</a> irá receber um input e armazenar o valor na variável <strong>sReturn</strong>.
        parameters:
          parameter_1: <strong>allowsempty</strong> <span class='data-type'>[string]</span><br/>Define a obrigatoriedade.
          parameter_2: <strong>caption</strong> <span class='data-type'>[string]</span><br/>Cabeçalho.
          parameter_3: <strong>columncaption</strong> <span class='data-type'>[integer]</span><br/>Coluna aonde o valor digitado deverá aparecer.
          parameter_4: <strong>linecaption</strong> <span class='data-type'>[integer]</span><br/>Linha aonde o valor digitado deverá aparecer o cabeçalho.
          parameter_5: <strong>columninput</strong> <span class='data-type'>[integer]</span><br/>Coluna aonde o valor digitado deverá aparecer.
          parameter_6: <strong>lineinput</strong> <span class='data-type'>[integer]</span><br/>Linha aonde o valor digitado deverá aparecer.
          parameter_7: <strong>maximum</strong> <span class='data-type'>[integer]</span><br/>Número máximo de caracteres.
          parameter_8: <strong>minimun</strong> <span class='data-type'>[integer]</span><br/>Número mínimo de caracteres.
          parameter_9: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que vai armazenar o retorno do comando.
      inputfloat:
        description: Permite a entrada de um valor com ponto (.) através da tecla (*)
        paragraph_1: O comando <span class='code'>inputfloat</span> é utilizado para permitir a entrada de um valor decimal (por exemplo 1.99).
        paragraph_2: No exemplo acima, foi criado a variável <strong>sNumber</strong> do tipo string, que receberá um valor do tipo <em>float</em> digitado pelo usuário. Em seguida o valor é exibido através do comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>line</strong> <span class='data-type'>[integer]</span><br/>Linha que a mensagem será exibida.
          parameter_2: <strong>column</strong> <span class='data-type'>[integer]</span><br/>Coluna que mensagem será exibida.
          parameter_3: <strong>message</strong> <span class='data-type'>[string]</span><br/>Mensagem customizada que será exibida.
          parameter_4: <strong>variable</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      inputformat:
        description: Permite a entrada de um valor baseado em um formato pré-definido
        paragraph_1: O comando <span class='code'>inputformat</span> é utilizado para definir a entrada de um valor, baseado em um formato pré-definido.
        paragraph_2: No exemplo acima, cada comando tem um formato pré-definido, e o valor é exibido no <a href='display' class='command'>display</a>. Quando alguma tecla numérica é pressionada e seu valor é armazenado na variável <strong>sReturn</strong>.
        parameters:
          parameter_1: <strong>line</strong> <span class='data-type'>[integer]</span><br/>Linha que a mensagem será exibida.
          parameter_2: <strong>column</strong> <span class='data-type'>[integer]</span><br/>Coluna que mensagem será exibida.
          parameter_3: <strong>message</strong> <span class='data-type'>[string]</span><br/>Mensagem customizada que será exibida.
          parameter_4: <strong>variable</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno da função.
          parameter_5: '<strong>format</strong> <span class="data-type">[integer]</span><br/>Formato da entrada<ul><li>9: qualquer caracter numérico</li><li>A: qualquer caracter não numérico</li><li>*: senha</li></ul>É possível usar somente um formato por comando.'
      inputinteger:
        description: Permite a entrada de um valor inteiro
        paragraph_1: Os comandos <span class='code'>inputinteger</span> e <span class='code'>inputoption</span> são utilizados para permitir a entrada de um número inteiro, obedecendo um limite mínimo e máximo.
        paragraph_2: No exemplo acima o comando <strong>inputinteger</strong> aguarda um número inteiro, que é convertido para <a href='stringvariable' class='command'>stringvariable</a> para ser exibido no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>line</strong> <span class='data-type'>[integer]</span><br/>Linha que a mensagem será exibida.
          parameter_2: <strong>column</strong> <span class='data-type'>[integer]</span><br/>Coluna que mensagem será exibida.
          parameter_3: <strong>message</strong> <span class='data-type'>[string]</span><br/>Mensagem customizada que será exibida.
          parameter_4: <strong>variable</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando.
          parameter_5: <strong>minimum</strong> <span class='data-type'>[integer]</span><br/>Tamanho máximo do número.
          parameter_6: <strong>maximum</strong> <span class='data-type'>[integer]</span><br/>Tamanho mínimo do número.
      inputmoney:
        description: Permite a entrada de um valor monetário
        paragraph_1: O comando <span class='code'>inputmoney</span> é utilizado para digitar valores monetários. Os separadores são adicionados automaticamente, eliminando a necessidade do usuário digitar respectivamente ponto ou vírgula.
        paragraph_2: No exemplo acima o comando <strong>inputmoney</strong> aguarda que um número do tipo <em><strong>inteiro</strong></em> seja digitado pelo usuário. O valor será armazenado sem formatação na variável, onde posteriormente este valor é convertido para <a href='stringvariable' class='command'>stringvariable</a> através do comando <a href='inttostring' class='command'>inttostring</a>, e logo em seguida é exibido no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>line</strong> <span class='data-type'>[integer]</span><br/>Linha que a mensagem será exibida.
          parameter_2: <strong>column</strong> <span class='data-type'>[integer]</span><br/>Coluna que a mensagem será exibida.
          parameter_3: <strong>message</strong> <span class='data-type'>[string]</span><br/>Mensagem customizada que será exibida.
          parameter_4: <strong>variable</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o valor digitado.
      inputoption:
        description: Permite a entrada de um valor inteiro
        paragraph_1: O comando <span class='code'>inputoption</span> é utilizado para permitir a entrada de um número inteiro, obedecendo um limite mínimo e máximo. A diferença deste comando para o comando <a href='inputinteger' class='command'>inputinteger</a>, é que este ao digitarmos o número máximo especificado na instrução, a instrução pula para a próxima como que se estivéssemos pressionando OK
        paragraph_2: No exemplo acima o comando <strong>inputoption</strong> aguarda um número inteiro, que é convertido para <a href='stringvariable' class='command'>stringvariable</a> para ser exibido no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>line</strong> <span class='data-type'>[integer]</span><br/>Linha que a mensagem será exibida.
          parameter_2: <strong>column</strong> <span class='data-type'>[integer]</span><br/>Coluna que mensagem será exibida.
          parameter_3: <strong>message</strong> <span class='data-type'>[string]</span><br/>Mensagem customizada que será exibida.
          parameter_4: <strong>variable</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando.
          parameter_5: <strong>minimum</strong> <span class='data-type'>[integer]</span><br/>Tamanho máximo do número.
          parameter_6: <strong>maximum</strong> <span class='data-type'>[integer]</span><br/>Tamanho mínimo do número.
      integerconvert:
        description: Conversão de integer para binário, octal ou hexadecimal
        paragraph_1: O comando <span class='code'>integerconvert</span> é utilizado para converter um número integer em binário, octal ou hexadecimal.
        paragraph_2: No exemplo acima o número <strong>10</strong> será convertido para binário, octal e hexadecimal e os valores serão exibidos no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: '<strong>base</strong> <span class="data-type">[integer]</span><br/>Qual base será usada na conversão:<ul><li>2: binário</li><li>8: octal</li><li>16: hexadecimal</li></ul>'
          parameter_2: <strong>number</strong> <span class='data-type'>[integer]</span><br/>Número decimal que será convertido.
          parameter_3: <strong>sizereturn</strong> <span class='data-type'>[integer]</span><br/>Tamanho do retorno, se o número informado for maior, serão adicionados 0 à esquerda.
          parameter_4: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      integeroperator:
        description: Incrementa em +1 ou decrementa em -1 uma variável do tipo integer
        paragraph_1: O comando <span class='code'>integeroperator</span> é utilizado para incrementar ou decrementar o respectivo valor contido na variável.
        paragraph_2: No exemplo acima o número <strong>10</strong> será incrementado, tendo seu valor alterado para <strong>11</strong> e será armazenado na variável <strong>sGreaterNumber</strong>.
        paragraph_3: O novo valor da variável <strong>iNumber</strong>,<strong>11</strong>, será decrementado, tendo seu valor alterado para <strong>10</strong> e será armazenado na variável <strong>sLowerNumber</strong>.
        paragraph_4: Para que os valores sejam exibidos no <a href='display' class='command'>display</a>, será necessário convertê-los para <a href='stringvariable' class='command'>stringvariable</a> com o comando <a href='inttostring' class='command'>inttostring</a>.
        parameters:
          parameter_1: <strong>operator</strong> <span class='data-type'>[string]</span><br/>Incremento(++) ou decremento(--).
          parameter_2: <strong>variablesource</strong> <span class='data-type'>[integer]</span><br/>Número que será usado na operação.
      integervariable:
        description: Cria uma instância de variável do tipo integer
        paragraph_1: O comando <span class='code'>integervariable</span> é utilizado para declarar uma variável que armazene somente números integers, positivos ou negativos.
        paragraph_2: Para exibir uma variável do tipo <strong>integervariable</strong>, é preciso converter o seu tipo para <a href='stringvariable' class='command'>stringvariable</a>, como foi feito no exemplo acima.
        paragraph_3: No exemplo acima, foram criadas duas variáveis, uma do tipo <strong>integervariable</strong> e outra do tipo <a href='stringvariable' class='command'>stringvariable</a>. A variável <em><strong>iNumber</strong></em> tem um valor inicial de <em><strong>10</strong></em>.
        parameters:
          parameter_1: <strong>variable</strong><br/>Nome da variável.
          parameter_2: <strong>value</strong> <span class='data-type'>[integer]</span><br/>Valor inicial da variável.
      inttostring:
        description: Conversão de integer para string
        paragraph_1: O comando <span class='code'>inttostring</span> é utilizado para converter um número integer em string.
        paragraph_2: No exemplo acima o número <strong>10</strong> será convertido para string e será exibido no <a href='display' class='command'>display</a>.
        paragraph_3: O comando <a href='display' class='command'>display</a> só exibe variáveis do tipo <a href='stringvariable' class='command'>stringvariable</a>.
        parameters:
          parameter_1: <strong>variableinteger</strong> <span class='data-type'>[integer]</span><br/>Valor integer que será convertido em string.
          parameter_2: <strong>variablestring</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o valor convertido.
      iso8583_analyzemessage:
        description: Inicia o processo de análise e decomposição dos campos da mensagem
        paragraph_1: O conhecimento da norma <strong>ISO-8583</strong> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>iso8583.analyzemessage</span> é usado para iniciar o processo de análise e decomposição dos campos da mensagem.
        paragraph_3: No exemplo acima, após a trasansação ser realizada com o comando <a href='iso8583.transactmessage' class='command'>iso8583.transactmessage</a>, o autorizador responde enviando uma outra mensagem ISO, que fica armazenada na variável <em><strong>ReceiveMsgISO</strong></em>, e a quantidade de bytes da variável <em><strong>iRecvBytes</strong></em>.
        paragraph_4: O comando <span class='code'>iso8583.analyzemessage</span> é executado para analizar a mensagem retornada pelo autorizador, caso seja executado com sucesso, a <em><strong>função</strong></em> <em><strong>Getfields</strong></em> é executada para que recuperar os campos da mensagem de resposta.
        parameters:
          parameter_1: <strong>format</strong> <span class='data-type'>[string]</span><br/> Formato da mensagem a ser analisada, podendo ser ASCII ou BCD.
          parameter_2: <strong>size</strong> <span class='data-type'>[integer]</span><br/> Tamanho da mensagem a ser analisada.
          parameter_3: <strong>variableid</strong> <span class='data-type'>[string]</span><br/> Variável onde o ID da mensagem ficará armazenado.
          parameter_4: <strong>variablemessage</strong> <span class='data-type'>[string]</span><br/> Variável onde esta armazenada a mensagem a ser analisada.
          parameter_5: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/> Variável que armazenará o retorno do comando, onde: <br/> <span class="data-type"> 0: mensagem analisada com sucesso <br/> -806: erro na mensagem analisada </span>'
      iso8583_endmessage:
        description: Finaliza a montagem da mensagem ISO
        paragraph_1: O conhecimento da norma <strong>ISO-8583</strong> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>iso8583.endmessage</span> é usado para finalizar a montagem da mensagem ISO8583.
        paragraph_3: No exemplo acima, após iniciar a montagem da mensagem <strong>ISO8583</strong> através do comando <a href='iso8583.initmessage' class='command'>iso8583.initmessage</a> e inserir com sucesso todos os respectivos campos na mensagem, utilizando o comando <a href='iso8583.putfield' class='command'>iso8583.putfield</a> de acordo com o arquivo contendo a especificação do mapa de bits (<strong>bitmap.dat</strong>), o comando <a href='iso8583.endmessage' class='command'>iso8583.endmessage</a> será responsável por finalizar a montagem da mensagem, atribuindo à variável <strong>iSizeMessageISO</strong> o valor referente ao tamanho da mensagem e armazenando os dados na variável <strong>sMsgIso8583</strong>.
        paragraph_4: Para visualizar os dados armazenados na variável <strong>sMsgIso8583</strong>, foi adicionado o comando <a href='print' class='command'>print</a>, passando como parâmetro a mensagem ISO8583 montada e finalizada, para que a mesma seja impressa pelo dispositivo. Agora é possível iniciar a transação através do comando <a href='iso8583.transactmessage' class='command'>iso8583.transactmessage</a>.
        parameters:
          parameter_1: <strong>variablesize</strong> <span class='data-type'>[integer]</span><br/> Variável onde será armazenado o tamanho da mensagem finalizada.
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável responsável por armazenar o retorno do comando realizado, onde:<br/> <span class="data-type"> 0: mensagem finalizada com sucesso <br/> -802: erro de função <br/> -803: buffer overrun </span>'
      iso8583_getfield:
        description: Extrai um campo de uma mensagem previamente analisada
        paragraph_1: O conhecimento da norma <strong>ISO-8583</strong> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>iso8583.getfield</span> é usado para extrair um campo de uma mensagem previamente analisada em ordem crescente.
        paragraph_3: No exemplo acima, após processar a transação e analizar a mensagem ISO retornada pelo autorizador, conforme mostrado no exemplo <a href='iso8583.analyzemessage' class='command'>iso8583.analyzemessage</a>, é possível iniciar a recuperação dos valores nos campos da mensagem com o comando <span class='code'>iso8583.getfield</span>.
        paragraph_4: <strong>ATENÇÃO!</strong>
        paragraph_5: A extração dos campos deve ser feita em ordem crescente.
        parameters:
          parameter_1: <strong>fieldnumber</strong> <span class='data-type'>[integer]</span><br/> Número do campo a ser extraído.
          parameter_2: <strong>type</strong> <span class='data-type'>[string]</span><br/> Tipo do campo a ser extraído da mensagem, podendo ser <strong>string</strong> ou <strong>integer</strong>.
          parameter_3: <strong>variablevalue</strong> <span class='data-type'>[string ou integer]</span><br/> Variável onde será armazenado o valor do campo extraído.
          parameter_4: "<strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/> Variável que irá armazenar o retorno do comando, onde: <br/><span class='data-type'>0: Campo extraído com sucesso<br/>-801: Parâmetro inválido<br/>-802: Erro de função<br/>-803: Buffer overrun<br/>-805: No field<br/>-806: Msg error</span>"
      iso8583_initfieldtable:
        description: Inicia a tabela de campos ISO8583 baseado em um arquivo especificado
        paragraph_1: O conhecimento da norma <strong>ISO-8583</strong> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>iso8583.initfieldtable</span> irá iniciar a tabela de campos ISO8583 de acordo com os campos especificados no arquivo definido no parâmetro <strong>filename</strong>. Este comando deve ser executado antes de iniciar o trabalho com mensagens ISO8583.
        paragraph_3: 'No exemplo acima, foram criadas duas funções:'
        paragraph_4: 1. <strong>downloadBitmap</strong> que realiza o download do arquivo <span class='code'>bitmap.dat</span> contendo o mapa de bits. O arquivo precisa estar armazenado no repositório de <a href='/pt-BR/manager/assets'>arquivos</a> no <a href='https://manager.cloudwalk.io' class='external' target='_blank'>CloudWalk Manager</a>.
        paragraph_5: 2. <strong>startEngineISO8583</strong> que inicia a tabela utilizando o comando <span class='code'>iso8583.initfieldtable</span>.
        paragraph_6: Caso o download do arquivo tenha sido completado com sucesso, é definido 1 no parâmetro bitmap do arquivo <span class='code'>params.dat</span>, apenas para indicar que o arquivo esta presente no dispositivo, caso contrário será apresentado uma mensagem de erro, baseado no respectivo retorno do comando e fechará a aplicação após pressionar a tecla Enter.
        paragraph_7: Após baixar e verificar a existência do arquivo bitmap.dat, será executada a função <strong>startEngineISO8583</strong>. A função referencia o comando <span class='code'>iso8583.initfieldtable</span> para iniciar a tabela. Caso o valor retornado na variável <strong>iReturn</strong> for <strong>0</strong>, a tabela foi iniciada com sucesso; caso contrário, o erro <strong>-802</strong> será apresentado, indicando falha na inicialização da tabela de mapa de bits.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo contendo o formato e o tamanho de todos os 128 campos da norma ISO8583.
          parameter_2: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando.
      iso8583_initmessage:
        description: Inicia a montagem de uma mensagem ISO
        paragraph_1: O conhecimento da norma <strong>ISO-8583</strong> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>iso8583.initmessage</span> é usado para iniciar a montagem de uma mensagem ISO8583.
        paragraph_3: 'No exemplo acima, foi implementado a função <strong>initISO8583Message</strong> com os seguintes passos:'
        paragraph_4: 1. Iniciar a montagem da mensagem ISO8583
        paragraph_5: 2. Inserir nos respectivos campos os valores de cada bit, parametrizando de acordo com a especificação do mapa de bits
        paragraph_6: 3. E por fim finalizar a mensagem.
        paragraph_7: Este procedimento deve ser executado após a verificação do arquivo <span class='code'>bitmap.dat</span> e após o processo de inicialização da tabela de bits realizado através do comando <a href='iso8583.initfieldtable' class='command'>iso8583.initfieldtable</a>.
        paragraph_8: Para melhor exemplificar o processo de inicialização da mensagem ISO8583 utilizando a linguagem POSXML, foi adicionado o BIT41 e o BIT64, que serão inseridos utilizando do comando <a href='iso8583.putfield' class='command'>iso8583.putfield</a> após iniciar a montagem da mensagem ISO8583 através do comando <a href='iso8583.initmessage' class='command'>iso8583.initmessage</a>.
        paragraph_9: Caso não ocorra nenhum erro referente à inicialização da mensagem e na inserção nos campos, a mensagem é finalizada utilizando o comando <a href='iso8583.endmessage' class='command'>iso8583.endmessage</a>
        parameters:
          parameter_1: <strong>format</strong> <span class='data-type'>[string]</span><br/>Formato da mensagem a ser montada, podendo ser ASCII ou BCD.
          parameter_2: '<strong>id</strong> <span class="data-type">[string]</span><br/>Identificador da mensagem com 4 digitos, por exemplo: 0800, 0200, 0400.'
          parameter_3: <strong>variablemessage</strong> <span class='data-type'>[string]</span><br/>Variável responsável por armazenar a mensagem que está sendo montada.
          parameter_4: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Retorno da operação realizada, onde:<br/> <span class="data-type"> 0: mensagem iniciada com sucesso<br/> -801: parâmetro inválido<br/> -803: buffer overrun </span>'
      iso8583_putfield:
        description: Insere um campo na mensagem, obrigatoriamente em ordem crescente
        paragraph_1: O conhecimento da norma <strong>ISO-8583</strong> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>iso8583.putfield</span> é usado para inserir um campo na mensagem, obrigatoriamente em ordem crescente.
        paragraph_3: No exemplo acima, foi criado a função <strong>initISO8583Message</strong>, que será responsável por iniciar a mensagem ISO8583, inserir os campos (caso existir algum valor no mesmo) e finalizar a mensagem.
        paragraph_4: Para exemplificar, foi adicionado apenas dois bits (<strong>BIT41</strong> e <strong>BIT64</strong>), que por sua vez serão inseridos na mensagem ISO8583 através do comando <a href='iso8583.putfield' class='command'>iso8583.putfield</a>.
        paragraph_5: O valor deve ser formatado e alinhado de acordo com a especificação do mapa de bits (<strong>bitmap.dat</strong>).
        parameters:
          parameter_1: <strong>fieldnumber</strong> <span class='data-type'>[integer]</span><br/>Número do campo da mensagem que o valor deve ser inserido. É possível especificar de 2 à 128, de acordo com o mapa de bits.
          parameter_2: <strong>type</strong> <span class='data-type'>[string]</span><br/>Tipo do campo que será inserido, pode ser (<strong>string</strong> or <strong>integer</strong>).
          parameter_3: <strong>value</strong> <span class='data-type'>[string ou integer]</span><br/>Conteúdo do campo, formatado de acordo com a especificação do mapa de bits.
          parameter_4: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Retorno da operação realizada, onde:<br/> <span class="data-type"> 0: campo inserido com sucesso <br/> -801: parâmetro inválido <br/> -802: erro de função <br/> -803: buffer overrun <br/> -804: campo inválido</span>'
      iso8583_transactmessage:
        description: Acrescenta size, header e trailer e envia a mensagem ISO ao autorizador
        paragraph_1: O conhecimento da norma <strong>ISO-8583</strong> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>iso8583.transactmessage</span> é usado para acrescentar size, header e trailer e enviar a mensagem ISO ao autorizador.
        paragraph_3: 'No exemplo acima, foi criado a função <strong>transactIsoMessage</strong>, que será responsável por estabelecer a conexão com o host, utilizando o comando <a href="preconnect" class="command">preconnect</a> e posteriormente enviar a mensagem ISO8583 ao servidor autorizador com o auxílio do comando <a href="iso8583.transactmessage" class="command">iso8583.transactmessage</a>. '
        paragraph_4: A mensagem ISO8583 está armazenada na varíavel <strong>sMsgIso8583</strong>, montada e pronta para ser enviada. Os valores referente ao header e trailer deverão estar armazenados nas variáveis e serem definidos posteriormente de acordo com os parâmetros do comando <a href='iso8583.transactmessage' class='command'>iso8583.transactmessage</a>, isso caso a sua especificação e documentação da estrutura do servidor autorizador, determine que deve ser definido estes campos.
        paragraph_5: 'Ao finalizar a transação com sucesso, a mensagem ISO8583 recebida do host, estará armazenada na variável <strong>sReceiveMsgISO</strong>, com todos os dados de acordo com a especificação do mapa de bits. '
        parameters:
          parameter_1: '<strong>channel</strong> <span class="data-type">[string]</span><br/> Size que será incrementado. Canais disponíveis: <br/><span class="data-type"> NONE: Nenhum size acrescentado <br/> NAC: Size de 2 bytes binários (x01 x00 ou 0000-0001 0000-0000) <br/> NCC: Size de 2 bytes no formato BCD (x02 x56) <br/> RAW: Size de 4 bytes no formato binário (x00 x00 x01 x00 ou 0000-0000 0000-0000 0000-0001 0000-0000) <br/> ASCII: Size de 4 bytes no formato ASCII (x30 x32 x35 x36 ou 0256)</span>'
          parameter_2: <strong>header</strong> <span class='data-type'>[string]</span><br/> Header da mensagem ISO8583, usado para roteamento e integridade da mesma, será acrescentado ao início da mensagem.
          parameter_3: <strong>trailler</strong> <span class='data-type'>[string]</span><br/> Trailer da mensagem ISO8583, usado para roteamento e integridade da mesma, será acrescentado ao final da mensagem.
          parameter_4: <strong>isomsg</strong> <span class='data-type'>[string]</span><br/> Mensagem ISO8583 incluindo os elementos de dados ISO (os campos da mensagem).
          parameter_5: <strong>variableresponse</strong> <span class='data-type'>[string]</span><br/> Mensagem ISO8583 contendo os dados da resposta do servidor autorizador.
          parameter_6: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/> Retorno do comando realizado, onde:<br/> <span class="data-type"> >0: Tamanho da mensagem de resposta <br/> -1: Canal desconhecido ou não implementado <br/> -2: Falha de conexão com o host ou na tentativa de discagem <br/> -3: Falha ao enviar mensagem ao servidor destino <br/> -4: Falha ao receber o tamanho da mensagem de resposta <br/> -5: Falha ao receber a mensagem de resposta</span>'
      joinstring:
        description: Concatena em uma string o valor de outras 2 strings
        paragraph_1: O comando <span class='code'>joinstring</span> é utilizado para unir duas strings.
        paragraph_2: No exemplo acima o comando <a href='joinstring' class='command'>joinstring</a> irá unir as variáveis <strong>sTextOne</strong> e <strong>sTextTwo</strong>.
        parameters:
          parameter_1: <strong>firstvalue</strong> <span class='data-type'>[string]</span><br/>Primeira string.
          parameter_2: <strong>secondvalue</strong> <span class='data-type'>[string]</span><br/>Segunda string.
          parameter_3: <strong>variabledestination</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      mathematicaloperation:
        description: Realiza uma operação matemática entre dois valores
        paragraph_1: O comando <span class='code'>mathematicaloperation</span> é utilizado para realizar operações matemáticas.
        paragraph_2: No exemplo acima foram realizadas as 6 operações matemáticas com as variáveis <strong>$(number_1)</strong> e <strong>$(number_2)</strong>.
        paragraph_3: '<ul><li>1ª operação: 200 + 100 = <strong>300</strong></li><li>2ª operação: 200 - 100 = <strong>100</strong></li><li>3ª operação: 200 * 100 = <strong>2000</strong></li><li>4ª operação: 200 / 100 = <strong>2</strong></li><li>5ª operação: 200 % 100 = <strong>0</strong></li><li>6ª operação: 200 ^ 100 = <strong>2147483647</strong></li></ul>'
        parameters:
          parameter_1: <strong>firstvalue</strong> <span class='data-type'>[string ou integer]</span><br/>Primeira variável da operação.
          parameter_2: '<strong>operator</strong> <span class="data-type">[string]</span></br>Operadores matemáticos: <span class="code">+</span> soma, <span class="code">-</span> subtração, <span class="code">*</span> multiplicação, <span class="code">/</span> divisão, <span class="code">%</span> resto da divisão, <span class="code">^</span> exponenciação.'
          parameter_3: <strong>secondvalue</strong> <span class='data-type'>[string ou integer]</span><br/>Segunda variável da operação.
          parameter_4: <strong>variabledestination</strong> <span class='data-type'>[string ou integer]</span><br/>Variável onde o valor da operação será armazenado.
      menu:
        description: Monta um menu na tela do dispositivo, baseado no número de linhas do equipamento
        paragraph_1: O comando <span class='code'>Menu</span> é utilizado para gerar uma lista de opções.
        paragraph_2: No exemplo acima foi criado um menu com três opções, aonde a barra (<strong>/</strong>) é o separador e a variável <strong>option</strong> irá armazernar o resultado do comando, que será o número da tecla pressionada, um valor entre <strong>0</strong> e <strong>9</strong>.
        parameters:
          parameter_1: <strong>variable</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o valor da tecla pressionada
          parameter_2: <strong>options</strong> <span class='data-type'>[string]</span><br/>Lista contendo a descrição de cada item do menu, separados por uma barra <strong>/</strong>.
      menuwithheader:
        description: Monta um menu com cabeçalho, baseado no número de linhas do equipamento
        paragraph_1: O comando <span class='code'>menuwithheader</span> é utilizado para gerar uma lista de opções.
        paragraph_2: No exemplo acima é preciso fazer a alteração no arquivo <strong>config.dat</strong>, que contém alguns parâmetros, entre eles <strong>iskeytimeout</strong>, definido com o valor <strong>1</strong>, que permite o comando <strong>menuwithheader</strong> funcionar.
        paragraph_3: Se o arquivo <strong>config.dat</strong> não tiver seu parâmetro <strong>iskeytimeout</strong> definido para <strong>1</strong>, não será retornado nenhum erro mas o comando <strong>menuwithheader</strong> não funcionará como esperado.
        paragraph_4: Caso os segundos da propriedade <strong>timeout</strong> terminem sem a interação do usuário, o comando retornara <strong>-1</strong>.
        parameters:
          parameter_1: <strong>header</strong> <span class='data-type'>[string]</span><br/>Define o conteúdo do cabeçalho do menu, separados por <strong>|</strong>. Se o conteúdo for maior do que o espaço na tela, será exibido um sinal positivo (<strong>+</strong>) informando a continuidade do texto.
          parameter_2: <strong>timeoutheader</strong> <span class='data-type'>[integer]</span><br/>Tempo em segundos para que a descrição do cabeçalho do menu mude.
          parameter_3: <strong>options</strong> <span class='data-type'>[string]</span><br/>Opções do menu, separados por uma barra <strong>\</strong>.
          parameter_4: <strong>timeout</strong> <span class='data-type'>[integer]</span><br/>Valor que determina o tempo, em segundos, de espera pela interação do usuário.
          parameter_5: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá receber o retorno do comando.
      network_checkgprssignal:
        description: Verifica o status da conexão GPRS, caso o dispositivo tenha suporte.
        paragraph_1: Saiba mais sobre <a href='https://docs.cloudwalk.io/pt-BR/integration/http'>Integração com o host - Simple HTTP</a>.
        paragraph_2: O comando <span class='code'>network.checkgprssignal</span> é utilizado para verificar o nível do sinal GPRS, caso o dispositivo ofereça este tipo de comunicação.
        paragraph_3: No exemplo acima o commando <a href='network.checkgprssignal' class='command'>network.checkgprssignal</a> irá verificar o nível do sinal GPRS, armazenando o resultado da operação na variável <strong>iReturn</strong> do tipo inteiro.
        parameters:
          parameter_1: <strong>variablestatus</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o nível do sinal GPRS.
      network_hostdisconnect:
        description: Desconecta o dispositivo do serviço CloudWalk, mantendo-o conectado a rede
        paragraph_1: Saiba mais sobre <a href='https://docs.cloudwalk.io/pt-BR/integration/http'>Integração com o host - Simple HTTP</a>.
        paragraph_2: O comando <span class='code'>network.hostdisconnect</span> é usado para desconectar o dispositivo do serviço CloudWalk mas o mantém conectado na rede.
        paragraph_3: No exemplo acima o commando <a href='preconnect' class='command'>preconnect</a> irá realizar uma conexão com o serviço CloudWalk. O comando <a href='network.hostdisconnect' class='command'>network.hostdisconnect</a> irá fechar esta conexão mas o dispositivo será mantido com a conexão na rede.
        paragraph_4: <strong>ATENÇÃO!</strong>
        paragraph_5: Se a conexão utilizada para efetuar transações for discada <strong>(PPP ou SDLC)</strong>, é necessário usar o comando <a href='shutdownmodem' class='command'>shutdownmodem</a> para fechar o <strong>socket</strong> após transação realizada, evitando que o dispositivo mantenha a linha ocupada.
        paragraph_6: O comando <span class='code'>network.hostdisconnect</span> também fecha o socket que foi aberto com o  <a href='preconnect' class='command'>preconnect</a>, mas só para tipos de conexão <strong>ETHERNET e GPRS </strong>.
      network_ping:
        description: Verifica o status da conexão
        paragraph_1: Saiba mais sobre <a href='https://docs.cloudwalk.io/pt-BR/integration/http'>Integração com o host - Simple HTTP</a>
        paragraph_2: O comando <span class='code'>network.ping</span> é usado para testar a conectividade com o host.
        paragraph_3: No exemplo acima o commando <a href='network.ping' class='command'>network.ping</a> irá realizar um ping no host, o seu retorno será armazenado na variável <strong>iReturn</strong>, que deverá ser transformada em <a href='stringvariable' class='command'>stringvariable</a> para ser exibido no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Retorno da função:<ul><li>0: Sucesso</li><li>-1: Erro na conexão com o servidor</li><li>-2: Erro ao enviar ping</li></ul>'
          parameter_2: <strong>host</strong> <span class='data-type'>[string]</span> Hostname ou IP que será efetuado o ping.
      network_start:
        description: Inicia o modem do dispositivo.
        paragraph_1: O comando <span class='code'>network.start</span> é usado para iniciar o modem do dispositivo.
        paragraph_2: No exemplo acima o comando <span class='code'>network.start</span> irá iniciar o modem do dispositivo, em seguida o retorno do comando é exibido no display.
        paragraph_3: '<strong>Diferenças entre os comandos <a href="preconnect" class="command">preconnect</a> e <a href="network.start" class="command">network.start</a> </strong> :'
        paragraph_4: O comando POSXML <a href='preconnect' class='command'>preconnect</a> inicia o modem do dispositivo e estabelece uma nova conexão com o host, já o comando <a href='network.start' class='command'>network.start</a> apenas inicia o modem do dispositivo, <strong>NÃO</strong> será estabelecido uma nova conexão com o host.
        parameters:
          parameter_1: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Retorno da função:<ul><li>1: Modem inicializado</li><li>Qualquer coisa diferente de <strong>1</strong> significa <strong>Erro</strong> (modem não inicializado)</li></ul>'
      network_receive:
        description: Recebe um buffer do serviço CloudWalk previamente conectado
        paragraph_1: Saiba mais sobre <a href='https://docs.cloudwalk.io/pt-BR/integration/http'>Integração com o host - Simple HTTP</a>
        paragraph_2: O comando <span class='code'>network.receive</span> é usado para receber uma mensagem (hexadecimal) do switch transacional do CloudWalk.
        paragraph_3: No exemplo acima o commando <a href='preconnect' class='command'>preconnect</a> irá realizar uma conexão com o serviço CloudWalk, o seu retorno será armazenado na variável <strong>iConnect</strong>.
        paragraph_4: O commando <a href='network.send' class='command'>network.send</a> irá enviar uma mensagem hexadecimal para o switch transacional, e o seu retorno será armazenado na variável <strong>iReturn</strong>.
        paragraph_5: O commando <a href='network.receive' class='command'>network.receive</a> irá receber uma mensagem hexadecimal do switch transacional, e o seu retorno será armazenado na variável <strong>variablebuffer</strong>, que deverá ser transformada de <strong>HEX</strong> para <strong>ASCII</strong> com a função <a href='string.fromhex' class='command'>string.fromhex</a>.
        parameters:
          parameter_1: <strong>maxsize</strong> <span class='data-type'>[integer]</span><br/>Tamanho máximo da mensagem que será recebida.
          parameter_2: <strong>variablereceivedbytes</strong> <span class='data-type'>[integer]</span><br/>Quantidade de bytes recebidos.
          parameter_3: <strong>variablebuffer</strong> <span class='data-type'>[string]</span><br/>Variável que irá receber a mensagem do switch transacional.
          parameter_4: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Retorno da função:<ul><li>1: Mensagem recebida com sucesso</li><li>0: Não foi possível receber a mensagem</li></ul>'
      network_send:
        description: Envia um buffer para o serviço CloudWalk
        paragraph_1: Saiba mais sobre <a href='https://docs.cloudwalk.io/pt-BR/integration/http'>Integração com o host - Simple HTTP</a>
        paragraph_2: O comando <span class='code'>network.send</span> é usado para enviar uma mensagem (hexadecimal) para o switch transacional do serviço CloudWalk.
        paragraph_3: No exemplo acima o commando <a href='preconnect' class='command'>preconnect</a> irá realizar uma conexão com o serviço CloudWalk, o seu retorno será armazenado na variável <strong>iConnect</strong>.
        paragraph_4: O commando <a href='network.send' class='command'>network.send</a> irá enviar uma mensagem hexadecimal para o switch transacional do CloudWalk, e o seu retorno será armazenado na variável <strong>iReturn</strong>.
        paragraph_5: Para transformar o conteúdo da variável <strong>sBufSend</strong> em hexadecimal, será usado o comando <a href='string.tohex' class='command'>string.tohex</a> e o tamanho será calculado pelo comando <a href='string.length' class='command'>string.length</a>.
        parameters:
          parameter_1: <strong>buffer</strong> <span class='data-type'>[string]</span><br/>Mensagem hexadecimal que será enviada
          parameter_2: <strong>size</strong> <span class='data-type'>[integer]</span><br/>Tamanho em bytes da mensagem.
          parameter_3: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Retorno da função:<ul><li>1: Mensagem enviada com sucesso</li><li>0: Não foi possível enviar a mensagem</li></ul>'
      openserialport:
        description: Abre a porta serial para comunicação com periféricos externos
        paragraph_1: O comando <span class='code'>openserialport</span> é utilizado para abrir uma conexão com a porta serial.
        paragraph_2: No exemplo acima o comando <a href='openserialport' class='command'>openserialport</a> irá abrir uma conexão na porta <strong>COM1</strong> com a taxa <strong>115200</strong> e configuração <strong>A8N1</strong>, retorno será armazenado na variável <strong>iReturn</strong>, convertido usando o comando <a href='inttostring' class='command'>inttostring</a> e exibido no <a href='display' class='command'>display</a>.
        paragraph_3: O comando <a href='closeserialport' class='command'>closeserialport</a> fecha a porta serial.
        parameters:
          parameter_1: <strong>port</strong> <span class='data-type'>[string]</span><br/>Porta aonde a conexão será aberta.<ul><li>COM1, COM2, COM3, COM4, COM5, COM6</li></ul>
          parameter_2: <strong>rate</strong> <span class='data-type'>[string]</span><br/>A taxa da porta serial.<ul><li>300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 12000, 14400, 28800, 33600</li></ul>
          parameter_3: <strong>configuration</strong> <span class='data-type'>[string]</span><br/>A configuração da porta serial.<ul><li>A7E1, A7N1, A7O1, A8E1, A8N1, A8O1</li></ul>
          parameter_4: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando.<ul><li>-2: Configuração incorreta</li><li>-1 ou 0: Erro ao abrir porta serial</li><li>>0: Porta serial aberta com sucesso</li></ul>'
      paperfeed:
        description: Envia um sinal para a impressora adicionando linhas em branco no ticket
        paragraph_1: O comando <span class='code'>paperfeed</span> é utilizado para enviar um sinal a impressora que irá adicionar uma linha em branco.
        paragraph_2: No exemplo acima, quando a aplicação for executada, a impressora irá adicionar uma linha em branco no papel.
      parameters: Parâmetros
      pinpad_close:
        description: Encerra a comunicação com o pinpad externo ou interno
        paragraph_1: O comando <span class='code'>pinpad.close</span> é usado para encerrar a comunicação com o pinpad externo ou interno, que foi previamente aberto com <span class='code'>pinpad.open</span>, e ainda define uma mensagem padrão que vai ser exibida no display do pinpad.
        paragraph_2: No exemplo acima, primeiramente estabelecemos uma comunicação com o <strong>pinpad externo</strong>, em seguida aguarda-se que uma tecla seja pressionada com o comando <a href='waitkey' class='command'>waitkey</a>, e então é encerrada a comunicação com o PIN-Pad com o comando <span class='code'>pinpad.close</span>.
        parameters:
          parameter_1: <strong>message</strong> <span class='data-type'>[string]</span> Mensagem que vai ser exibida no display do PIN-Pad após ser encerrada a comunicação.
      pinpad_display:
        description: Exibe uma mensagem customizada no display do pinpad
        paragraph_1: O comando <span class='code'>pinpad.display</span> é usado para exibir uma mensagem customizada no display do pinpad externo.
        paragraph_2: No exemplo acima, primeiramente é aberto a conexão com o <strong>pinpad externo</strong> com o comando  <a href='pinpad.open' class='command'>pinpad.open</a>, e então o comando <span class='code'>pinpad.display</span> é executado, exibindo a mensagem <strong><em>Hello World!</em></strong>.
        paragraph_3: É aguardado então que alguma tecla do <strong>terminal POS</strong> seja pressionada, e após isso a desconexão com o pinpad é feita com o comando <a href='pinpad.close' class='command'>pinpad.close</a>.
        paragraph_4: <strong>ATENÇÃO!</strong>
        paragraph_5: Este comando não se aplica se o PIN-Pad utilizado for um <strong>PIN-Pad interno</strong>
        parameters:
          parameter_1: <strong>message</strong> <span class='data-type'>[string]</span> Mensagem que vai ser exibida no display do PIN-Pad externo.
      pinpad_getkey:
        description: Captura uma tecla que seja pressionada no pinpad externo
        paragraph_1: O comando <span class='code'>pinpad.getkey</span> é usado para capturar uma tecla pressionada no pinpad externo, enquanto exibe uma mensagem no diplay do <strong>pinpad externo</strong>.
        paragraph_2: No exemplo acima, primeiramente é aberta uma conexão com o <strong>PIN-Pad externo</strong> com o comando <a href='pinpad.open' class='command'>pinpad.open</a>, após isso o comando <span class='code'>pinpad.getkey</span> é executado.
        paragraph_3: É aguardado 10 minutos, se nenhuma ação for tomada, é retornado <strong>-1</strong> na variável <strong><em>sKey</em></strong>, se alguma ação ocorrer a tecla pressionada é retornada.
        paragraph_4: Após isso, é efetuada a desconexão com o PIN-Pad com o comando <a href='pinpad.close' class='command'>pinpad.close</a> e o resultado é exibido através do comando <a href='display' class='command'>display</a>.
        paragraph_5: <strong>ATENÇÃO!</strong>
        paragraph_6: Este comando não se aplica se o PIN-Pad utilizado for um <strong>PIN-Pad interno</strong>
        parameters:
          parameter_1: <strong>message</strong> <span class='data-type'>[string]</span> Mensagem que vai ser exibida no display do pinpad externo.
          parameter_2: <strong>timeout</strong> <span class='data-type'>[integer]</span> Timeout em segundos que a instrução deve aguardar antes de continuar a execução.
          parameter_3: '<strong>variablereturn</strong> <span class="data-type">[string]</span> Retorno do comando, onde: <br/><ul><li>-1: Timeout foi atingido e nehuma ação foi tomada</li></ul> Se ocorrer alguma ação, a tecla do PIN-Pad que foi pressionada é retornada: <strong>KEY_ENTER, KEY_CANCEL, KEY_CLEAR, KEY_EXTRAS</strong>.'
      pinpad_getpindukpt:
        description: Captura um PIN e o encripta usando o padrão DUKPT
        paragraph_1: O conhecimento do padrão <strong>DUKPT</strong> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>pinpad.getpindukpt</span> captura um PIN e o encripta usando o padrão DUKPT no pinpad interno ou pinpad externo, enquanto exibe uma mensagem no display do pinpad externo ou na tela do terminal POS.
        paragraph_3: No exemplo acima, primeiramente é aberta uma conexão com o <strong>PIN-Pad interno</strong> através do comando <a href='pinpad.open' class='command'>pinpad.open</a>, e então o comando <span class='code'>pinpad.getpindukpt</span> é executado.
        paragraph_4: É solicitado que o usuário entre com o <strong>PIN (senha);</strong> O PIN então é criptografado e armazenado na variável <strong><em>sEncriptedPIN</em></strong> e a KSN do mesmo na variável <strong><em>sKSN</em></strong>. Como o tipo do retorno é um inteiro, ele é convertido para <a href='stringvariable' class='command'>stringvariable</a> com o comando <a href='inttostring' class='command'>inttostring</a>
        paragraph_5: É efetuado a desconexão com o PIN-Pad com o comando <a href='pinpad.close' class='command'>pinpad.close</a> e então exibido o conteúdo das variáveis através do comando <a href='display' class='command'>display</a>
        parameters:
          parameter_1: <strong>maxlen</strong> <span class='data-type'>[integer]</span> Número máximo de caracteres digitados no PIN.
          parameter_2: <strong>message</strong> <span class='data-type'>[string]</span> Mensagem que será exibida no display do PIN-Pad externo, ou interno no caso de um terminal POS.
          parameter_3: <strong>pan</strong> <span class='data-type'>[string]</span> Primary account number do cartão.
          parameter_4: '<strong>type</strong> <span class="data-type">[integer]</span> Tipo do algoritimo utilizado na encriptação, pode ser: <br/><ul><li>0: DES</li><li>1: 3DES</li></ul>'
          parameter_5: <strong>variablereturnksn</strong> <span class='data-type'>[string]</span> Variável que irá armazenar a <strong>KSN</strong> retornada do processo de encriptação.
          parameter_6: <strong>variablereturnpin</strong> <span class='data-type'>[string]</span> Variável que irá armazenar o <strong>PIN</strong> criptografado.
          parameter_7: '<strong>variablereturn</strong> <span class="data-type">[integer]</span> Variável que irá armazenar o retorno do comando, onde: <br/><ul><li>0: OK</li><li>-1: COMM Error</li><li>-2: Cancelado</li><li>-3: PIN Error</li></ul>'
      pinpad_loadipek:
        description: Grava uma chave inicial e uma ksn inicial na memória do pinpad
        paragraph_1: O conhecimento do padrão <strong>DUKPT</strong> é necessário para utilização deste comando.
        paragraph_2: O comando <span class='code'>pinpad.loadipek</span> é usado para gravar uma chave inicial e uma ksn inicial na memória do pinpad interno ou externo, para que seja possível efetuar uma encriptação de senhas usando o padrão <strong><em>DUKPT</em></strong>.
        paragraph_3: No exemplo acima, primeiramente é efetuada a conexão com o <strong>pinpad interno</strong> através do comando <a href='pinpad.open' class='command'>pinpad.open</a>. Após isso as chaves ipek (inicial) <strong><em>EA51888F7CF2EBA6BB80EF0D4267642E</em></strong> e ksn <strong><em>FFFF0123456789A00003</em></strong> são carregadas para a memória do PIN-Pad com o comando <span class='code'>pinpad.loadipek</span>.
        paragraph_4: Em seguida a conexão com o PIN-Pad é finalizada com o comando <a href='pinpad.close' class='command'>pinpad.close</a>, e então a variável é convertida para <a href='stringvariable' class='command'>stringvariable</a> para ser exibida através do comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>ipek</strong> <span class='data-type'>[string]</span> Chave inicial no formato <strong>hex ascii 16</strong> ou <strong>32</strong> caracteres.
          parameter_2: <strong>ksn</strong> <span class='data-type'>[string]</span> KSN inicial no formato <strong>hex ascii 20</strong> caracteres.
          parameter_3: '<strong>type</strong> <span class="data-type">[inteiro]</span> tipo do algoritmo de criptografia a ser usado, pode ser: <br/><ul><li>0: DES</li><li>1: 3DES</li></ul>'
          parameter_4: '<strong>variablereturn</strong> <span class="data-type">[inteiro]</span> Retorno do comando, onde: <br/><ul><li>0: OK</li><li>-1: Erro</li></ul>'
      pinpad_open:
        description: Habilita a comunicação com o pinpad externo ou interno
        paragraph_1: O comando <span class='code'>pinpad.open</span> é usado para habilitar a comunicação com o pinpad externo ou interno.
        paragraph_2: No exemplo acima, primeiramente foi aberta uma conexão com o <strong>PIN-Pad interno</strong>, e o comando então retorna o resultado da operação para a variável <em><strong>variablereturn</strong></em>.
        paragraph_3: Em seguida utiliza-se o comando <a href='inttostring' class='command'>inttostring</a> para converter a variável para <a href='stringvariable' class='command'>stringvariable</a>, que em seguida é exibida através do comando <a href='display' class='command'>display</a>, e finalmente a conexão com o PIN-Pad é fechada, através do comando <a href='pinpad.close' class='command'>pinpad.close</a>.
        paragraph_4: O mesmo caso se aplica para o <strong>PIN-Pad externo</strong>, mas neste é armazenado o <em>serial number</em> do mesmo na variável <span class='code'>sSerialNumber</span>.
        parameters:
          parameter_1: '<strong>type</strong> <span class="data-type">[integer]</span> Tipo do PIN-Pad a ser habilitado: <br/><ul><li>0: PIN-Pad interno</li><li>1: PIN-Pad externo</li></ul>'
          parameter_2: <strong>variableserialnumber</strong> <span class='data-type'>[string]</span> Variável onde será armazenado o <em>serial number</em> do PIN-Pad que será habilitado.
          parameter_3: '<strong>variablereturn</strong> <span class="data-type">[integer]</span> Retorno do comando, onde: <br/><ul><li>0: PIN-Pad conectado</li><li>-1: PIN-Pad não conectado</li></ul>'
      preconnect:
        description: Efetua a conexão com o serviço CloudWalk
        paragraph_1: Saiba mais sobre <a href='https://docs.cloudwalk.io/pt-BR/integration/http'>Integração com o host - Simple HTTP</a>
        paragraph_2: O comando <span class='code'>preconnect</span> é usado para inicializar o dispositivo de conexão, e estabelecer uma conexão com o serviço CloudWalk.
        paragraph_3: No exemplo acima o commando <a href='preconnect' class='command'>preconnect</a> irá realizar uma conexão com o serviço CloudWalk, o seu retorno será armazenado na variável <strong>iConnect</strong>.
        paragraph_4: Como a variável <strong>iConnect</strong> é do tipo <a href='integervariable' class='command'>integervariable</a>, ela precisa ser transformada em <a href='stringvariable' class='command'>stringvariable</a> para ser exibida no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: '<strong>variablestatus</strong> <span class="data-type">[integer]</span><br/>Retorno da função:<ul><li>0: Conexão realizada com sucesso</li><li>-1: Erro ao tentar se conectar</li></ul>'
      predial:
        description: Inicializa o dispositivo de discagem
        paragraph_1: Saiba mais sobre <a href='https://docs.cloudwalk.io/pt-BR/integration/http'>Integração com o host - Simple HTTP</a>
        paragraph_2: O comando <span class='code'>predial</span> é usado para realizar uma conexão discada com o provedor.
        paragraph_3: No exemplo acima o primeiro commando <a href='predial' class='command'>predial</a>, com <strong>option</strong> 1, irá realizar uma conexão com o provedor, o retorno será armazenado na variável <strong>iReturn</strong>.
        paragraph_4: O segundo comando <a href='predial' class='command'>predial</a>, com <strong>option</strong> 2, irá verificar se o processo de discagem foi concluído.
        parameters:
          parameter_1: '<strong>option</strong> <span class="data-type">[integer]</span><br/><ul><li>1: O comando irá realizar uma discagem</li><li>2: O comando irá verificar se a discagem foi concluída</li></ul>'
          parameter_2: <strong>variablestatus</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno da função.
      print:
        description: Imprime uma mensagem customizada em tamanho de fonte padrão
        paragraph_1: O comando <span class='code'>print</span> é utilizado para imprimir qualquer mensagem com um tamanho padrão.
        paragraph_2: No exemplo acima, quando a aplicação for executada, irá imprimir a mensagem <strong>Using PRINT</strong> com tamanho padrão.
        parameters:
          parameter_1: <strong>message</strong> <span class='data-type'>[string]</span><br/>Mensagem que será impressa.
      printbarcode:
        description: Imprime um código de barras no formato I25, na horizontal ou vertical
        paragraph_1: O comando <span class='code'>printbarcode</span> é utilizado para imprimir código de barras.
        paragraph_2: No exemplo acima, será impresso um código de barras do número <strong>123456</strong> na posição <strong>horizontal</strong>.
        parameters:
          parameter_1: <strong>horizontal</strong> <span class='data-type'>[integer]</span><br/>Define se o código de barras irá ser horizontal(1) ou vertical(0).
          parameter_2: <strong>number</strong> <span class='data-type'>[string]</span><br/>Número do código de barras.
      printbig:
        description: Imprime uma mensagem customizada em tamanho de fonte dupla
        paragraph_1: O comando <span class='code'>printbig</span> é utilizado para imprimir qualquer mensagem com um tamanho de fonte dupla.
        paragraph_2: No exemplo acima, quando a aplicação for executada, irá imprimir a mensagem <strong>Using PRINTBIG</strong> com tamanho de fonte dupla.
        parameters:
          parameter_1: <strong>message</strong> <span class='data-type'>[string]</span><br/>Mensagem que será impressa.
      printbitmap:
        description: Imprime um bitmap monocromático presente no dispositivo
        paragraph_1: O comando <span class='code'>printbitmap</span> é utilizado para imprimir um bitmap monocromático.
        paragraph_2: No exemplo acima, quando a aplicação for executada, irá imprimir a imagem definida na propriedade <strong>filename</strong> do comando <strong>printbitmap</strong>.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo.
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá receber o retorno do comando<ul><li>-2: bitmap não é monocromático</li><li>-1: tamanho de bitmap inválido</li><li>0: bitmap não encontrado</li><li>1: bitmap impresso com sucesso</li></ul>'
      readfile:
        description: Realiza a leitura de um arquivo WALK dbfile (chave/valor)
        paragraph_1: O comando <span class='code'>readfile</span> é utilizado para fazer a leitura de um arquivo no formato <a href='#walk_db' class='command'>Walk DB</a>. Cada chave deve estar em uma linha separada.
        paragraph_2: No exemplo acima, foi feito o download do arquivo <strong>test.txt</strong> com o comando <a href='downloadfile' class='command'>downloadfile</a>.
        paragraph_3: O comando <a href='readfile' class='command'>readfile</a> faz a leitura do arquivo procurando pela chave (<strong>key</strong>) especificada e armazena seu retorno da variável especificada no parâmetro <strong>variabledestination</strong>.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo.
          parameter_2: <strong>key</strong> <span class='data-type'>[string]</span><br/>Nome da chave.
          parameter_3: <strong>variabledestination</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      readfilebyindex:
        description: Realiza a leitura de uma chave de um arquivo WALK dbfile
        paragraph_1: O comando <span class='code'>readfilebyindex</span> é utilizado para fazer a leitura de um arquivo no formato <a href='#walk_db' class='command'>Walk DB</a> em uma posição especificada. Cada chave deve estar em uma linha separada.
        paragraph_2: No exemplo acima, foi feito o download do arquivo <strong>test.txt</strong> com a função <a href='downloadfile' class='command'>downloadfile</a>.
        paragraph_3: A função <a href='readfilebyindex' class='command'>readfilebyindex</a> faz a leitura do arquivo procurando pela posição (<strong>index</strong>) especificada e armazena a chave na variável <strong>sKeyName</strong> e o valor na variável <strong>sKeyValue</strong>. A variável <strong>iReturn</strong> armazena um valor especificando se a posição (<strong>index</strong>) foi encontrada ou não.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo.
          parameter_2: <strong>index</strong> <span class='data-type'>[integer]</span><br/>Posição da chave, a primeira posição é 0(zero).
          parameter_3: <strong>variablekey</strong> <span class='data-type'>[string]</span><br/>Nome da chave.
          parameter_4: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando:<ul><li>0: item não encontrado</li><li>1: item encontrado</li></ul>'
          parameter_5: <strong>variablevalue</strong> <span class='data-type'>[string]</span><br/>Valor do index.
      readkey:
        description: Idem ao comando waitkey, mas a guarda a tecla pressionada
        paragraph_1: O comando <span class='code'>readkey</span> é utilizado para pausar a execução da aplicação por um tempo determinado, após uma tecla pressionada ela é armazenada na variável.
        paragraph_2: No exemplo acima a variável <strong>$(sPressedKey)</strong> irá armazenar a tecla que for pressionada. O comando <strong>readkey</strong> requer a propriedade <strong>milisenconds</strong> para definir o tempo máximo de espera para que uma tecla seja pressionada.
        paragraph_3: Se nenhuma tecla for pressionada no tempo definido(<strong>5 segundos</strong>), a aplicação assume que a tecla <strong>Cancelar</strong> foi pressionada.
        parameters:
          parameter_1: <strong>miliseconds</strong> <span class='data-type'>[integer]</span><br/>Tempo de pausa em milisegundos.
          parameter_2: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      readserialport:
        description: Lê um buffer de um dispositivo externo capturado pela porta serial
        paragraph_1: O comando <span class='code'>readserialport</span> é utilizado para ler um buffer(mensagem) hexadecimal, enviado por algum dispositivo externo conectado na porta serial.
        paragraph_2: No exemplo acima o comando <a href='openserialport' class='command'>openserialport</a> irá abrir uma conexão na porta <strong>COM1</strong> com a taxa <strong>115200</strong> e configuração <strong>A8N1</strong>.
        paragraph_3: O comando <a href='readserialport' class='command'>readserialport</a> irá ler o retorno da porta serial e armazenar na variável <strong>sBufferReturned</strong>.
        paragraph_4: O conteúdo da variável será convertido para <a href='stringvariable' class='command'>stringvariable</a> e exibido no <a href='display' class='command'>display</a>.
        paragraph_5: O comando <a href='closeserialport' class='command'>closeserialport</a> fecha a porta serial.
        parameters:
          parameter_1: <strong>bytes</strong> <span class='data-type'>[integer]</span><br/> Quantidade de bytes que vai ser lido da porta serial.
          parameter_2: <strong>timeout</strong> <span class='data-type'>[integer]</span><br/> Timeout que a instrução vai aguardar até receber algo da porta serial.
          parameter_3: <strong>variablebuffer</strong> <span class='data-type'>[string]</span><br/> Variável onde vai ser armazenado o buffer capturado da porta serial.
          parameter_4: <strong>variablehandle</strong> <span class='data-type'>[integer]</span><br/> Identificador da porta serial aberta.
          parameter_5: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/> Variável que vai armazenar o retorno do comando, onde: <br/><span class="data-type">-1: Timeout foi atingindo e nada foi capturado da porta serial<br/>>0: Quantidade de bytes que foi lido da porta serial. </span>'
      shutdownmodem:
        description: Desliga o modem e cancela as operações do dispositivo de conexão
        paragraph_1: O comando <span class='code'>shutdownmodem</span> é usado para desconectar o dispositivo do serviço CloudWalk e da rede.
        paragraph_2: No exemplo acima o commando <a href='preconnect' class='command'>preconnect</a> irá realizar uma conexão com o serviço CloudWalk. O comando <a href='shutdownmodem' class='command'>shutdownmodem</a> irá desconectar totalmente o dispositivo.
      smartcard_closereader:
        description: Finaliza o processo de comunicação com o smart card
        paragraph_1: O comando <span class='code'>smartcard.closereader</span> é usado para finalizar o processo de comunicação com o smart card.
        paragraph_2: No exemplo acima, primeiro usamos o comando <a href='smartcard.startreader' class='command'>smartcard.startreader</a> para iniciar o leitor e tentar ler o cartão; após isso o comando <a href='inttostring' class='command'>inttostring</a> é utilizado para converter e exibir a variável através do comando <a href='display' class='command'>display</a>.
        paragraph_3: Depois, o comando <span class='code'>smartcard.closereader</span> é utilizado para fechar a comunicação com o leitor, e novamente exibir o resultado da operação.
        parameters:
          parameter_1: <strong>slot</strong> <span class='data-type'>[integer]</span><br/> número do slot que foi aberto com <a href='smartcard.startreader' class='command'>smartcard.startreader</a>.
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/> Retorno do comando, onde:<br/><ul><li>-1: Slot inválido</li><li>1: Slot fechado com sucesso</li></ul>'
      smartcard_insertedcard:
        description: Verifica se o cartão está inserido no leitor de smart card do POS
        paragraph_1: O comando <span class='code'>smartcard.insertcard</span> é utilizado para verificar se um cartão smart foi inserido em um determinado slot.
        paragraph_2: No exemplo acima, o comando <strong>smartcard.insertedcard</strong> verifica se um cartão foi inserido ou não no slot definido. Caso não tenha cartão no slot, o retorno será <strong>-2</strong> e <strong>1</strong> caso contrário.
        parameters:
          parameter_1: '<strong>slot</strong> <span class="data-type">[integer]</span><br/> Define qual slot será usado pelo comando.<ul><li>1: principal</li><li>2: sam1</li><li>3: sam2</li><li>4: sam3</li><li>5: sam4</li></ul>'
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/><ul><li>-2: Cartão não esta presente</li><li>-1: Slot inválido</li><li>1: Cartão foi inserido no leitor com sucesso.</li></ul>'
      smartcard_startreader:
        description: Inicia o leitor de smart card e tenta iniciar o cartão
        paragraph_1: O comando <span class='code'>smartcard.startreader</span> é usado para iniciar o leitor de smart card e tenta iniciar o cartão enviando um comando ATR.
        paragraph_2: No exemplo acima, o comando <span class='code'>smartcard.startreader</span> foi utilizado para inicializar o leitor e o smartcard, e o resultado da operação foi armazenado na variável <strong>variablereturn</strong>.
        paragraph_3: O comando <a href='inttostring' class='command'>inttostring</a> é utilizado para converter a variável para <a href='stringvariable' class='command'>stringvariable</a> para depois ser exibida através do comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: '<strong>slot</strong> <span class="data-type">[integer]</span><br/> slot que será inicializado:<br/><ul><li>principal: 1</li><li>sam1: 2</li><li>sam2: 3</li><li>sam3: 4</li><li>sam4: 5</li></ul>'
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Retorno do comando, onde:<br/><ul><li>-2: Erro ao iniciar o leitor ou erro ao tentar ler o cartão</li><li>-1: Slot inválido</li><li>Leitor inicializado e comando ATR enviado com sucesso.</li></ul>'
      smartcard_transmitapdu:
        description: Envia um comando APDU para o smart card
        paragraph_1: O comando <span class='code'>smartcard.transmitAPDU</span> é usado para enviar um comando APDU para o smart card em um slot específico, note que antes de usar esta instrução o leitor de smartcard já deve estar inicializado e o comando ATR enviado para o cartão com a instrução <a href='smartcard.startreader' class='command'>smartcard.startreader</a>.
        paragraph_2: Todos os parâmetros devem receber somente strings no formato hexadecimal.
        paragraph_3: No exemplo acima, primeiramente é feito um loop com o comando <a href='while' class='command'>while</a> aguardando que o comando <a href='smartcard.insertedcard' class='command'>smartcard.insertedcard</a> identifique a inserção de um cartão.
        paragraph_4: Após o cartão ser inserido, o comando <a href='smartcard.startreader' class='command'>smartcard.startreader</a> inicializa o leitor e o cartão enviando um comando ATR, e em seguida o comando <span class='code'>smartcard.transmitAPDU</span> é executado. No final o resultado é exibido através do comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>datafield</strong> <span class='data-type'>[string]</span><br/>Campo datafield em hexadecimal de um comando APDU contendo informações adicionais. Campo opcional, porém quando não utilizado, deve receber o valor <strong>00</strong>
          parameter_2: <strong>header</strong> <span class='data-type'>[string]</span><br/>Header em hexadecimal do comando APDU composto por CLA + INS + P1 + P2. Campo obrigatório.
          parameter_3: <strong>LC</strong> <span class='data-type'>[string]</span><br/>Tamanho do parâmetro datafield em hexadecimal. Campo opcional, porém quando não utilizado, deve receber o valor <strong>00</strong>.
          parameter_4: <strong>LE</strong> <span class='data-type'>[string]</span><br/>Tamanho esperado da resposta em hexadecimal. Campo opcional, porém quando não utilizado, deve receber o valor <strong>00</strong>. Toda vez que receber uma resposta que seja maior que os 2 bytes obrigatórios de resposta SW1 e SW2, é necessário especificar o tamanho da resposta neste campo.
          parameter_5: <strong>slot</strong> <span class='data-type'>[string]</span><br/>slot que foi aberto com <span class='code'>smartcard.startreader</span>
          parameter_6: <strong>variabledatafieldresponse</strong> <span class='data-type'>[string]</span><br/>Variável que irá conter a resposta em hexadecimal do comando APDU.
          parameter_7: <strong>variableSW</strong> <span class='data-type'>[string]</span><br/>Variável que irá conter os 2 bytes obrigatórios (em hexadecimal) da resposta de um comando APDU.
          parameter_8: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Retorno do comando, onde:<br/><ul><li>-2: Erro ao enviar comando para o cartão</li><li>-1: Slot inválido</li><li>1: Comando enviado com sucesso</li></ul>'
      string_charat:
        description: Extrai um character da string especificada
        paragraph_1: O comando <span class='code'>string.charat</span> é utilizado para retornar um caracter de uma posição específica da string.
        paragraph_2: No exemplo acima o comando <a href='string.charat' class='command'>string.charat</a> irá pegar o 1º e 4º caracteres da variável <strong>sText</strong> e armazenar nas variáveis <strong>sReturnC</strong> e <strong>sReturnW</strong>.
        parameters:
          parameter_1: <strong>character_index</strong> <span class='data-type'>[integer]</span><br/>Posição do caracter.
          parameter_2: <strong>string</strong> <span class='data-type'>[string]</span><br/>Variável que será manipulada.
          parameter_3: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      string_elementat:
        description: Retorna um elemento em um index específico na string
        paragraph_1: O comando <span class='code'>string.elementat</span> é utilizado para separar uma string em partes, usando um delimitador.
        paragraph_2: No exemplo acima o texto da variável <strong>sText</strong> foi separada utilizando o comando <a href='string.elementat' class='command'>string.elementat</a>.
        paragraph_3: Os números (<a href='stringvariable' class='command'>stringvariable</a>) foram convertidos para <a href='integervariable' class='command'>integervariable</a> sendo possível usar no comando <a href='display' class='command'>display</a> para definir a linha e coluna.
        parameters:
          parameter_1: <strong>delimiter</strong> <span class='data-type'>[string]</span><br/>Delimitador de conteúdo.
          parameter_2: <strong>element_index</strong> <span class='data-type'>[integer]</span><br/> Um número que especifíca o index, a posição do elemento sendo o primeiro 0.
          parameter_3: <strong>string</strong> <span class='data-type'>[string]</span><br/>Texto que será separado.
          parameter_4: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando, que será o valor que esta no index especificado.
      string_elements:
        description: Retorna quantos elementos existem na string especificada
        paragraph_1: O comando <span class='code'>string.elements</span> é utilizado para retornar a quantidade de elementos encontrados em uma string de acordo com um delimitador.
        paragraph_2: No exemplo acima o comando <a href='string.elements' class='command'>string.elements</a> irá separar o conteúdo da variável <strong>sText</strong> baseado no delimitador <strong>;</strong>.
        paragraph_3: A variável <strong>iElements</strong> será convertida para <a href='stringvariable' class='command'>stringvariable</a> para ser exibida no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>delimiter</strong> <span class='data-type'>[string]</span><br/>Delimitador de conteúdo.
          parameter_2: <strong>string</strong> <span class='data-type'>[string]</span><br/>Texto que será separado.
          parameter_3: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o resultado do comando, que será a quantidade de elementos encontrados.
      string_find:
        description: Procura por uma substring na string especificada
        paragraph_1: O comando <span class='code'>string.find</span> é utilizado para retornar a posição de uma substring em uma string.
        paragraph_2: No exemplo acima o comando <a href='string.find' class='command'>string.find</a> irá  procurar pelo texto <strong>Walk</strong> na variável <strong>sText</strong>, iniciando a pesquisa na posição 0. O retorno será salvo na variável <strong>iElement</strong>.
        paragraph_3: A variável <strong>iElement</strong> será ser convertida para <a href='stringvariable' class='command'>stringvariable</a> para ser exibida no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>start</strong> <span class='data-type'>[integer]</span><br/>Define início da pesquisa.
          parameter_2: <strong>string</strong> <span class='data-type'>[string]</span><br/>Texto aonde será feita a pesquisa.
          parameter_3: <strong>substring</strong> <span class='data-type'>[string]</span><br/>Texto que deve ser encontrado.
          parameter_4: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o resultado do comando<ul><li>-1: texto não encontrado</li><li>>-1: posição do texto encontrado</li></ul>'
      string_fromhex:
        description: Converte uma representação em hexadecimal para uma string
        paragraph_1: O comando <span class='code'>string.fromhex</span> é utilizado para converter um hexadecimal em string ASCII.
        paragraph_2: No exemplo acima o valor hexadecimal <strong>436C6F756457616C6B</strong> será convertido para ASCII.
        parameters:
          parameter_1: <strong>string</strong> <span class='data-type'>[string]</span><br/>Valor hexadecimal que será convertido.
          parameter_2: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      string_getvaluebykey:
        description: Procura em uma string por um valor baseado em key/value
        paragraph_1: O comando <span class='code'>string.getvaluebykey</span> é utilizado para retornar um valor de uma chave na string.
        paragraph_2: No exemplo acima o comando <a href='string.getvaluebykey' class='command'>string.getvaluebykey</a> irá procurar na string pelo valor da chave <strong>company</strong>.
        parameters:
          parameter_1: <strong>key</strong> <span class='data-type'>[string]</span><br/>Chave a ser procurada.
          parameter_2: <strong>string</strong> <span class='data-type'>[string]</span><br/>Texto que será pesquisado.
          parameter_3: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que vai armazenar o retorno do comando.
      string_insertat:
        description: Insere um elemento em um índice específico na string
        paragraph_1: O comando <span class='code'>string.insertat</span> é utilizado para serparar uma string baseado em um delimitador e inserir uma substring em uma posição definida.
        paragraph_2: No exemplo acima o comando <a href='string.insertat' class='command'>string.insertat</a> irá inserir o texto <strong>Walk</strong> no segundo elemento gerado pela separação da string, cujo index é <strong>1</strong>.
        parameters:
          parameter_1: <strong>delimiter</strong> <span class='data-type'>[string]</span><br/>Delimitador de conteúdo.
          parameter_2: <strong>element_index</strong> <span class='data-type'>[integer]</span><br/> Um número que especifíca o index da posição do elemento, sendo 0 a primeira.
          parameter_3: <strong>string</strong> <span class='data-type'>[string]</span><br/>Texto que será dividido.
          parameter_4: <strong>string_to_be_inserted</strong> <span class='data-type'>[string]</span><br/>Texto que será inserido.
          parameter_5: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando, a string com o novo elemento inserido.
      string_length:
        description: Retorna o tamanho da string especificada
        paragraph_1: O comando <span class='code'>string.length</span> é utilizado para retornar o tamanho de uma string.
        paragraph_2: No exemplo acima o comando <a href='string.length' class='command'>string.length</a> irá retornar o tamanho do texto da variável <strong>sText</strong>.
        paragraph_3: O retorno do comando <a href='string.length' class='command'>string.length</a> é um <a href='integervariable' class='command'>integervariable</a> e será convertido para <a href='stringvariable' class='command'>stringvariable</a> para ser exibido no <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>value</strong> <span class='data-type'>[string]</span><br/>A string que será contada.
          parameter_2: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando, tamanho da string.
      string_pad:
        description: Efetua um padding com um caracter específico na string
        paragraph_1: O comando <span class='code'>string.pad</span> é utilizado para adicionar conteúdo à direita ou à esquerda de uma string.
        paragraph_2: No exemplo acima o primeiro comando <a href='string.pad' class='command'>string.pad</a> irá adicionar o caracter <strong>0</strong> à esquerda da string <strong>1234</strong>, o comando aceitará no máximo <strong>10</strong> caracteres, sendo assim, o resultado será <strong>0000001234</strong>.
        paragraph_3: O segundo comando <a href='string.pad' class='command'>string.pad</a> irá adicionar o caracter <strong>0</strong> à direita da string <strong>1234</strong>, o comando aceitará no máximo <strong>10</strong> caracteres, sendo assim, o resultado será <strong>1234000000</strong>.
        parameters:
          parameter_1: <strong>character</strong> <span class='data-type'>[string]</span><br/>Texto que será inserido.
          parameter_2: <strong>length</strong> <span class='data-type'>[integer]</span><br/>Tamanho final da string com pad.
          parameter_3: <strong>align</strong> <span class='data-type'>[string]</span><br/>Alinhamento, left ou right.
          parameter_4: <strong>origin</strong> <span class='data-type'>[string]</span><br/>Texto no qual será adicionado o caracter.
          parameter_5: <strong>destination</strong> <span class='data-type'>[string]</span><br/>Variável que irá receber o resultado do comando, a string com pad.
      string_removeat:
        description: Remove um elemento em um índice específico na string
        paragraph_1: O comando <span class='code'>string.removeat</span> é utilizado para separar uma string em partes, usando um delimitador e remover um elemento especifícado.
        paragraph_2: No exemplo acima o comando <a href='string.removeat' class='command'>string.removeat</a> irá separar o conteúdo da variável <strong>sText</strong> de acordo com o delimitador e irá remover a parte separada de acordo com o index na propriedade <strong>element_index</strong>.
        parameters:
          parameter_1: <strong>delimiter</strong> <span class='data-type'>[string]</span><br/>Delimitador de conteúdo.
          parameter_2: <strong>element_index</strong> <span class='data-type'>[integer]</span><br/>Um número que especifíca o index da posição do elemento, sendo 0 a primeira.
          parameter_3: <strong>string</strong> <span class='data-type'>[string]</span><br/>Texto que será separado.
          parameter_4: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o resultado do comando.
      string_replace:
        description: Substitui todas as ocorrências da substring especificada
        paragraph_1: O comando <span class='code'>string.replace</span> é utilizado para substituir parte de uma string.
        paragraph_2: No exemplo acima o comando <a href='string.replace' class='command'>string.replace</a> irá substituir o conteúdo <strong>WalkCloud</strong>, na variável <strong>sText</strong>, pelo conteúdo <strong>CloudWalk</strong>.
        parameters:
          parameter_1: <strong>new_substring</strong> <span class='data-type'>[string]</span><br/>Novo texto.
          parameter_2: <strong>old_substring</strong> <span class='data-type'>[string]</span><br/>Texto que será substituido.
          parameter_3: <strong>original_string</strong> <span class='data-type'>[string]</span><br/>Texto original.
          parameter_4: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o resultado do comando.
      string_replaceat:
        description: Substitui um elemento em um índice específico na string
        paragraph_1: O comando <span class='code'>string.replaceat</span> é utilizado para substituir uma parte específica da string.
        paragraph_2: No exemplo acima o comando <a href='string.replaceat' class='command'>string.replaceat</a> irá separar a string da variável <strong>sText</strong> e substituir o conteúdo da segunda parte, definida pelo <strong>element_index</strong> 1, que é <strong>POSXML Application</strong> por <strong>POSXML</strong>.
        parameters:
          parameter_1: <strong>delimiter</strong> <span class='data-type'>[string]</span><br/>Delimitador de conteúdo.
          parameter_2: <strong>element_index</strong> <span class='data-type'>[integer]</span><br/>Um número que representa o index da posição do elemento, sendo 0 a primeira.
          parameter_3: <strong>new_element</strong> <span class='data-type'>[string]</span><br/>Novo texto.
          parameter_4: <strong>string</strong> <span class='data-type'>[string]</span><br/>Texto que será separado.
          parameter_5: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando, a string com o elemento especificado removido.
      string_substring:
        description: Captura uma parte específica da string
        paragraph_1: O comando <span class='code'>string.substring</span> é utilizado para retornar uma parte específica de uma <a href='stringvariable' class='command'>stringvariable</a>.
        paragraph_2: No exemplo acima a variável <strong>sCompleteText</strong> será usada pelo comando <strong>string.substring</strong> que irá pegar o seu conteúdo apartir do 10º caracter(0 é o primeiro, incluíndo os espaços) e retornará 7 caracteres que serão retornados para a variável <strong>sHalfText</strong>.
        parameters:
          parameter_1: <strong>length</strong> <span class='data-type'>[integer]</span><br/>Tamanho da substring que queremos capturar.
          parameter_2: <strong>start</strong> <span class='data-type'>[integer]</span><br/>Define qual posição da string o comando usará como referência.
          parameter_3: <strong>string</strong> <span class='data-type'>[string]</span><br/>A string na qual queremos capturar a substring.
          parameter_4: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      string_tohex:
        description: Converte uma string para sua representação em hexadecimal
        paragraph_1: O comando <span class='code'>string.tohex</span> é utilizado para converter uma string ASCII em hexadecimal.
        paragraph_2: No exemplo acima o texto <strong>CloudWalk</strong> será convertido para hexadecimal.
        parameters:
          parameter_1: <strong>string</strong> <span class='data-type'>[string]</span><br/>Valor que será convertido.
          parameter_2: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      string_trim:
        description: Elimina os espaços em branco a esquerda e a direita da string
        paragraph_1: O comando <span class='code'>string.trim</span> é utilizado para remover os espaços em branco no início e final da string.
        paragraph_2: No exemplo acima o comando <a href='string.trim' class='command'>string.trim</a> irá remover os espaços em branco no início e final do conteúdo da variável <strong>sText</strong>.
        paragraph_3: Serão exibidos dois resultados com o comando <a href='display' class='command'>display</a>, mostrando o texto sem e com o comando <a href='string.trim' class='command'>string.trim</a>.
        parameters:
          parameter_1: <strong>string</strong> <span class='data-type'>[string]</span><br/>Texto que será removido os espaços em branco.
          parameter_2: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o resultado do comando, a string sem espaços em branco.
      stringtoint:
        description: Conversão de string para integer
        paragraph_1: O comando <span class='code'>stringtoint</span> é utilizado para converter uma string em um número integer.
        paragraph_2: No exemplo acima o texto da variável <strong>sText</strong> foi separada utilizando o comando <a href='string.elementat' class='command'>string.elementat</a>.
        paragraph_3: Os números (<a href='stringvariable' class='command'>stringvariable</a>) foram convertidos para <a href='integervariable' class='command'>integervariable</a> sendo possível usar no comando <a href='display' class='command'>display</a> para definir a linha e coluna.
        parameters:
          parameter_1: <strong>variableinteger</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o valor convertido.
          parameter_2: <strong>variablestring</strong> <span class='data-type'>[string]</span><br/>String que será convertida.
      stringvariable:
        description: Cria uma instância de variável do tipo string
        paragraph_1: O comando <span class='code'>stringvariable</span> é utilizado para declarar uma variável que armazene somente textos. Este tipo de variável aceita números mas em operações matemáticas eles não serão tratados como valores numéricos, por exemplo, <strong>variavel123</strong>.
        paragraph_2: No exemplo acima, foi criada uma variável do tipo <strong>stringvariable</strong> que tem um valor inicial <strong>Initial value</strong>.
        parameters:
          parameter_1: <strong>variable</strong> </br>Nome da variável.
          parameter_2: <strong>value</strong> <span class='data-type'>[string]</span></br>Valor inicial da variável.
      substring:
        description: Copia o trecho de uma variável string para outra variável
        paragraph_1: O comando <span class='code'>substring</span> é utilizado para separar uma string em substrings de acordo com um delimitador.
        paragraph_2: No exemplo acima o comando <a href='substring' class='command'>substring</a> irá separar a string da variável <strong>sText</strong> de acordo com o delimitador e armazenar a substring, definida pelo <strong>index</strong> 0, encontrada na variável <strong>variabledestination</strong> na variável <strong>sReturn</strong>.
        parameters:
          parameter_1: <strong>character</strong> <span class='data-type'>[string]</span><br/>Delimitador de conteúdo.
          parameter_2: <strong>index</strong> <span class='data-type'>[integer]</span><br/>Um número que representa o index da posição do elemento, sendo 0 a primeira.
          parameter_3: <strong>variabledestination</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar a substring encontrada.
          parameter_4: <strong>variablesource</strong> <span class='data-type'>[string]</span><br/>Texto que será separado.
          parameter_5: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando. Se nada for encontrado irá retornar <strong>-1</strong>.
      system_backlight:
        description: Permite controlar o nível de intensidade do backlight do dispositivo
        paragraph_1: O comando <span class='code'>system.backlight</span> permite controlar o nível do backlight do dispositivo.
        paragraph_2: Este comando é bastante utilizado quando o dispositivo possui uma bateria (não é conectado diretamente na energia elétrica), pois há um consumo considerável de bateria quando o backlight esta em 100%.
        paragraph_3: No exemplo acima, o comando <span class='code'>system.backlight</span> foi utilizado para modificar o nível de intensidade do backlight para 50%.
        paragraph_4: Como o retorno do comando é um <a href='integervariable' class='commands'>integervariable</a>, foi utilizado o comando <a href='inttostring' class='commands'>inttostring</a> para converter a variável e exibi-la através do comando <a href='display' class='commands'>display</a>.
        parameters:
          parameter_1: <strong>level</strong> <span class='data-type'>[integer]</span><br/>Percentual do nível do backlight.
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/><ul><li>-1: Erro ao definir o novo valor</li><li>0: OK</li></ul>'
      system_beep:
        description: Produz um sinal sonoro curto no dispositivo
        paragraph_1: O comando <span class='code'>system.beep</span> é usado para emitir um sinal sonoro.
        paragraph_2: No exemplo acima, o comando <strong>system.beep</strong> irá fazer com que o dispositivo emita um sinal sonoro.
      system_checkbattery:
        description: Verifica o status da bateria do dispositivo
        paragraph_1: O comando <span class='code'>system.checkbattery</span> é utilizado para retornar a porcentagem atual da bateria.
        paragraph_2: No exemplo acima, o comando <strong>system.checkbattery</strong> irá retornar para a variável <strong>$(battery_status)</strong> que é uma variável <a href='integervariable' class='command'>integervariable</a>. Como a propriedade <strong>variablestatus</strong> só aceita um valor integer, é preciso converter o valor para <a href='stringvariable' class='command'>stringvariable</a> para que o valor possa ser exibido no display.
        paragraph_3: O valor <strong>-1</strong> significa que o dispositivo não possui bateria.
        parameters:
          parameter_1: '<strong>variablestatus</strong> <span class="data-type">[integer]</span></br>Variável que irá armazenar o retorno do comando. O valor retornado varia de 0 até 100, em uma escala de 1 em 1. Examplos: 0, 1, 2, 3, 4, 5 ... 95, 96, 97, 98, 99, 100.'
      system_gettouchscreen:
        description: Captura as coordenadas (x e y) de onde o display foi pressionado
        paragraph_1: O comando <span class='code'>system.gettouchscreen</span> é usado para capturar as coordenadas (x e y) de onde o display foi pressionado. É necessário alterar o documento config.dat para habilitar o uso do touchscreen na aplicação.
        parameters:
          parameter_1: <strong>axisx</strong> <span class='data-type'>[integer]</span><br/>Coordenada do eixo X do visor, onde o visor foi pressionado.
          parameter_2: <strong>axisy</strong> <span class='data-type'>[integer]</span><br/>Coordenada do eixo Y do visor, onde o visor foi pressionado.
          parameter_3: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/> <span class="data-type"> 1: visor foi pressionado<br/> 0: visor não foi pressionado</span>'
        paragraph_2: No exemplo acima, o comando <strong>system.gettouchscreen</strong> retornará em iXaxis a coordenada X e em iYaxis a coordenada Y do ponto pressionado no display.
        paragraph_3: O laço de repetição é para garantir que o display foi pressionado.
      system_info:
        description: Busca de informações no sistema do POS (MAC Address, SIM ID, etc)
        paragraph_1: O comando <span class='code'>system.info</span> é usado para retornar informações do dispositivo.
        paragraph_2: No exemplo acima, o comando <strong>system.infor</strong> irá retorar o macaddress do dispositivo.
        parameters:
          parameter_1: <strong>type</strong> <span class='data-type'>[string]</span><br/>Informação que deseja retornar, simid ou macaddress.
          parameter_2: <strong>variablereturn</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o retorno do comando.
      system_qrcode:
        description: Gera um QR Code com base nos dados informados
        paragraph_1: O comando <span class='code'>system.qrcode</span> é usado para gerar um QR Code com base nos dados do parâmetro <strong>input</strong>. O QR Code gerado pode ser exibido no display do dispositivo ou impresso, caso o dispositivo possua uma impressora.
        paragraph_2: "No exemplo acima, o comando <strong>system.qrcode</strong> irá gerar um novo bitmap no tamanho: <strong>x1</strong> e versão: <strong>4</strong> e um segundo bitmap utilizando o tamanho: <strong>x5</strong> e versão: <strong>4</strong>. Em seguida, o QR Code referente ao tamanho <strong>x1</strong> será exibido no tela do dispositivo através do comando <a href='displaybitmap' class='command'>displaybitmap</a> e o QR Code no tamanho <strong>x5</strong> será impresso através do comando <a href='printbitmap' class='command'>printbitmap</a> (caso o dispositivo possua uma impressora)."
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do bitmap que será criado.
          parameter_2: <strong>input</strong> <span class='data-type'>[string]</span><br/>Conteúdo que será utilizado para gerar o QR Code.
          parameter_3: "<strong>size</strong> <span class='data-type'>[string]</span><br/>Tamanho da imagem bitmap. Tamanhos suportados: <strong>x1, x2, x3, x4 e x5</strong>."
          parameter_4: "<strong>version</strong> <span class='data-type'>[string]</span><br/>Versão do símbolo do QR Code. Cada versão possui um número específico de módulos. Versões suportadas: <strong>1, 2, 3, 4, 5 e 6</strong>."
      system_inputtransaction:
        description: "Recebe os dados do cartão em uma transação sem contato (contactless)"
        paragraph_1: "O comando <span class='code'>system.inputtransaction</span> é uma instrução utilizada para receber os dados de um cartão em uma transação sem contato (contactless)."
        paragraph_2: "No exemplo acima, as variáveis armazenarão os valores gerados pela instrução <strong>system.inputtransaction</strong>. A aplicação irá aguardar uma interação do usuário através de um cartão ou do teclado (pressionando uma tecla), durante o intervalo definido na propriedade <strong>timeout</strong>."
        parameters:
          parameter_1: "<strong>inputtype</strong> <span class='data-type'>[string]</span><br/>1 para magstripe, 2 para chip, 3 para contactless, 4 para teclado, 5 para toque (touchscreen)."
          parameter_2: "<strong>keyboard</strong> <span class='data-type'>[string]</span><br/>1 para teclado ativado e 0 para teclado desativado."
          parameter_3: "<strong>cardvariable</strong> <span class='data-type'>[string]</span><br/>Armazena o conteúdo da track 2 e/ou track 1 somente quando o inputtype for 1."
          parameter_4: "<strong>timeout</strong> <span class='data-type'>[integer]</span><br/>Tempo de espera até que o comando cancele a operação (em milissegundos)."
          parameter_5: "<strong>keyvariable</strong> <span class='data-type'>[string]</span><br/>When keyboard equals 0, just returns with timeout or if you press KEY_CANCEL. If keyboard equals 1 it will return all the pressed keys."
          parameter_6: "<strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando, onde:<br/> <span class='data-type'>0: quando uma tecla é pressionada ou quando um cartão é inserido com sucesso<br>-1: se ocorrer um erro no momento de ler as tracks<br>-2: timeout<br><strong>Para EMV chip ou sem contato</strong><br>1: sucesso<br> >1: erro</span>"
      system_readcard:
        description: Aguarda até que um cartão seja passado ou uma tecla seja pressionada
        paragraph_1: O comando <span class='code'>system.readcard</span> é utilizado para fazer a leitura de um cartão.
        paragraph_2: No exemplo acima, as 4 variáveis vão armazenar valores que foram gerados pelo comando <strong>system.readcard</strong>. A aplicação ficará aguardando a interação do usuário passando um cartão ou pressionando alguma tecla, durante o tempo definido na propriedade <strong>timeout</strong>.
        parameters:
          parameter_1: <strong>cardvariable</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenas o número do cartão.
          parameter_2: <strong>keyvariable</strong> <span class='data-type'>[string]</span><br/>Variável que irá armazenar o valor da tecla pressionada.
          parameter_3: <strong>timeout</strong> <span class='data-type'>[integer]</span><br/>Tempo de espera até que o comando cancele a operação.
          parameter_4: <strong>variablereturn</strong> <span class='data-type'>[integer]</span><br/>Variável que irá armazenar o retorno do comando.
      system_restart:
        description: Executa uma instrução que reinicia o dispositivo
        paragraph_1: O comando <span class='code'>system.restart</span> é usado para reiniciar o dispositivo.
        paragraph_2: No exemplo acima assim que a aplicação for iniciada, o comando <strong>system.restart</strong> irá reiniciar o dispositivo.
      time_calculate:
        description: Calculo de tempo com suporte a adição, subtração e diferença
        paragraph_1: O comando <span class='code'>time.calculate</span> é utilizado para realizar calculo de tempo com suporte a adição, subtração e diferença.
        paragraph_2: 'No exemplo acima, existem três operações: <strong><em>difference, sum e less</em></strong>.'
        paragraph_3: A primeira operação feita é <strong><em>difference</em></strong>, nesta operação a data contida na variável <em><strong>sDate1</strong></em> é comparada com a data contida na variável <em><strong>sDate2</strong></em>, e a diferença entre as duas datas é retornada em <strong><em>segundos</em></strong> para o parâmetro <strong><em>variablereturn</em></strong>.
        paragraph_4: A segunda operação feita é <strong><em>sum</em></strong>, nesta operação, é somado <strong><em>10 horas</em></strong> na data contida em <strong><em>sDate1</em></strong>. Caso a operação seja executada com successo, o parâmetro <strong><em>variablereturn</em></strong> retornará 0, e, a data contida em <strong><em>sDate1</em></strong> vai estar com <strong><em>10 horas incrementadas</em></strong>.
        paragraph_5: A terceira operação feita é <strong><em>less</em></strong>, nesta operação, é subtraido <strong><em>10 minutos</em></strong> na data contida em <strong><em>sDate1</em></strong>. Caso a operação seja executada com succeso, o parâmetro <strong><em>variablereturn</em></strong> retornará 0, e, a data contida em <strong><em>sDate1</em></strong> vai estar com <strong><em>menos 10 minutos</em></strong>.
        parameters:
          parameter_1: <strong>date</strong> <span class='data-type'>[string]</span><br/> Data que será alterada ou utilizada como comparação no caso da operação <strong>diferença</strong>.
          parameter_2: <strong>greaterdate</strong> <span class='data-type'>[string]</span><br/> Data maior que será usada na comparação no caso de operação diferença. Para as operações de mais e menos, essa variável não é utilizada, porém <strong>não deve</strong> ser passado um valor em branco, pois isso pode causar um POSXML Error.
          parameter_3: '<strong>operation</strong> <span class="data-type">[string]</span><br/> Tipo da operação, pode ser: sum, less ou difference.'
          parameter_4: '<strong>type</strong> <span class="data-type">[string]</span><br/> Tipo de tempo a ser calculado: years, months, days, hours, minutes ou seconds.<br/>Para a operação de diferença essa variável não é utilizada, porém <strong>não deve</strong> ser passado um valor em branco, pois isso pode causar um POSXML Error.'
          parameter_5: <strong>value</strong> <span class='data-type'>[integer]</span><br/> Valor a ser somado ou subtraído<strong> (somente para operações sum e less)</strong>.
          parameter_6: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/> Caso a operação seja <strong>diferença</strong>, é retornado o <strong>valor</strong> da diferença. Caso seja operação mais ou menos retorna: <br/><em><strong>0:</strong></em> Sucesso<br/><em><strong>-1:</strong></em> Erro.'
      title: Comando
      unzipfile:
        description: Descompacta um arquivo compactado no formato zip
        paragraph_1: O comando <span class='code'>unzipfile</span> é utilizado para descompactar um arquivo compactado no formato zip.
        paragraph_2: No exemplo acima usamos o comando <span class='code'>unzipfile</span> para descompactar um arquivo chamado <strong>teste.zip</strong> que esta na memória do dispositivo. Em seguida o comando <a href='inttostring' class='command'>inttostring</a> é utilizado para converter e exibir a variável através do comando <a href='display' class='command'>display</a>.
        parameters:
          parameter_1: <strong>filename</strong> <span class='data-type'>[string]</span><br/>Nome do arquivo zip que esta na memória do dispositivo.
          parameter_2: '<strong>variablereturn</strong> <span class="data-type">[integer]</span><br/>Retorno do comando, onde:<br/><ul><li>0: Arquivo descompactado com sucesso</li><li>-1: Erro no processo de descompressão</li></ul>'
      wait:
        description: Pause a execução por um tempo definido
        paragraph_1: O comando <span class='code'>wait</span> é utilizado para pausar a execução da aplicação por um tempo determinado.
        paragraph_2: No exemplo acima o primeiro <a href='display' class='command'>display</a> será exibido e após <strong>2000 milisegundos (2 segundos)</strong> o segundo <a href='display' class='command'>display</a> será exibido.
        parameters:
          parameter_1: <strong>miliseconds</strong> <span class='data-type'>[integer]</span><br/>Tempo de pausa em milisegundos.
      waitkey:
        description: Pausa a execução até que o operador pressione uma tecla
        paragraph_1: O comando <span class='code'>waitkey</span> é usado para aguardar o toque de qualquer tecla do dispositivo.
        paragraph_2: No exemplo acima o comando <strong>waitkey</strong> para a execução do código fazendo com que somente o primeiro <a href='display' class='command'>display</a> seja exibido.
        paragraph_3: Ao pressionar qualquer tecla do dispositivo, o comando <strong>waitkey</strong> dará continuidade ao processo da aplicação, exibindo uma outra mensagem.
        paragraph_4: O último <strong>waitkey</strong> é usado para que a aplicação não seja fechada logo após a execução.
      waitkeytimeout:
        description: Idem ao comando waitkey, mas possui um timeout
        paragraph_1: O comando <span class='code'>waitkeytimeout</span> é utilizado para aguardar o toque de qualquer tecla do dispositivo mas com um tempo limite de espera.
        paragraph_2: No exemplo acima o comando <strong>waitkeytimeout</strong> irá aguardar 10 segundos, se nenhuma tecla for pressionada.
        parameters:
          parameter_1: <strong>seconds</strong> <span class='data-type'>[integer]</span><br/>Tempo de pausa em segundos.
      while:
        description: Instrução que permite a execução de um código multiplas vezes
        operators:
          operator_1: <strong>greaterthan:</strong> maior <span class='code'>&gt;</span>
          operator_2: <strong>lessthan:</strong> menor <span class='code'>&lt;</span>
          operator_3: <strong>greaterthanorequalto:</strong> maior ou igual <span class='code'>&gt;=</span>
          operator_4: <strong>lessthanorequalto:</strong> menor ou igual <span class='code'>&lt;=</span>
          operator_5: <strong>equalto:</strong> igual <span class='code'>=</span>
          operator_6: <strong>notequalto:</strong> diferente <span class='code'>!</span>
        operators_integer:
          paragraph_1: <strong>Operadores com variáveis do tipo integer</strong>
          paragraph_2: Para variáveis do tipo integer, todas as operações são realizadas seguindo o padrão de qualquer linguagem de programação.
        operators_list: <strong>Listagem de operadores</strong>
        operators_string:
          paragraph_1: <strong>Operadores com variáveis do tipo string</strong>
          paragraph_2: Os operadores <span class='code'>greaterthan</span>, <span class='code'>lessthan</span>, <span class='code'>greaterthanorequalto</span>, <span class='code'>lessthanorequalto</span>, no caso de variáveis do tipo string, convertem a variável que está sendo comparada para ponto flutuante, e em seguida realiza a comparação.
        other_operators: Os operadores <span class='code'>equalto</span> e <span class='code'>notequalto</span> seguem a mesma lógica de comparação de qualquer linguagem de programação.
        paragraph_1: O comando <span class='code'>while</span> é utilizado para repetir um bloco de código até que uma condição seja satisfeita.
        paragraph_2: No exemplo acima, existem três condições:<ul><li>1ª - compara dois textos fazendo com que ela seja <em>verdadeira</em> pois <em>azul</em> é igual ao valor da variável <em>sColor</em></li><li>2ª - compara dois números fazendo com que ela seja <em>falsa</em> pois <em>111</em> não é maior que o valor da variável <em>iNumber</em></li><li>3ª - compara dois textos fazendo com que ela seja <em>falsa</em> pois <em>Azul</em> é diferente do valor da variável <em>sColor</em>. POSXML leva em consideração letras maiúsculas e minúsculas (<em>case-sensitive</em>)</li></ul>O comando <a href='waitkey' class='command'>waitkey</a> aguarda o clique de alguma tecla para continuar a execução do código.
        paragraph_3: O código dentro do bloco <strong>while</strong> será executado <em>6</em> vezes (a variável número tem o valor inicial = 0) mostrando no <a href='display' class='command'>display</a> o texto 'Mensagem'.
        paragraph_4: O comando <a href='integeroperator' class='command'>integeroperator</a> é usado para incrementar, de um em um, o valor da variável <em><strong>iNumber</strong></em> a cada execução do bloco <strong>while</strong> até que a condição seja satisfeita, saíndo do bloco.
        parameters:
          parameter_1: <strong>variable</strong> <span class='data-type'>[string ou integer]</span><br/>Variável que será utilizada na comparação.
          parameter_2: '<strong>operator</strong> <span class="data-type">[string]</span><br/>Operador de comparação: <span class="code">lessthan</span>, <span class="code">greaterthan</span>, <span class="code">equalto</span>, <span class="code">notequalto</span>, <span class="code">greaterthanorequalto</span> ou <span class="code">lessthanorequalto</span>.'
          parameter_3: <strong>value</strong> <span class='data-type'>[string ou integer]</span><br/>Valor que será utilizado na comparação.
      writeserialport:
        description: Escreve um buffer na porta serial
        paragraph_1: O comando <span class='code'>writeserialport</span> é utilizado para escrever uma mensagem, hexadecimal, na porta serial.
        paragraph_2: No exemplo acima o comando <a href='openserialport' class='command'>openserialport</a> irá abrir uma conexão na porta <strong>COM1</strong> com a taxa <strong>115200</strong> e configuração <strong>A8N1</strong>.
        paragraph_3: O comando <a href='writeserialport' class='command'>writeserialport</a> enviará um buffer (mensagem) para a porta.
        paragraph_4: O comando <a href='closeserialport' class='command'>closeserialport</a> fecha a porta serial.
        parameters:
          parameter_1: <strong>buffer</strong> <span class='data-type'>[string]</span><br/>Buffer, hexadecimal, que será escrito na porta serial.
          parameter_2: <strong>variablehandle</strong> <span class='data-type'>[integer]</span><br/>Identificador da porta aberta.
    commands_list:
      commands:
        groups:
          card_reading: Leitura de cartão
          complete_list: Lista Completa
          connectivity: Conectividade
          cryptography: Criptografia
          data_entry: Entrada de dados
          date_time: Date e hora
          emv: EMV
          file_manipulation: Manipulação de arquivo
          flow_control: Controle de fluxo
          iso_8583: ISO 8583
          pinpad: Pinpad
          print: Impressão
          serial_port: Porta serial
          smartcard: Smartcard
          string: String
          user_interface: User interface
          utils: Utils
          variables_conversions: Variáveis e conversões
        paragraph_1: Para fins de organização, os comandos POSXML estão agrupados por similaridade. No caso de dúvidas, existe também a possibilidade de visualizar todos os comandos, através da categoria 'Todos comandos'.
      description: Lista de comandos POSXML disponíveis no CloudWalk IDE.
      presentation:
        paragraph_1: Listagem de comandos disponíveis no CloudWalk IDE.
        paragraph_2: 'Caso seja executado algum aplicativo contendo um comando não suportado pela versão do CloudWalk Framework instalada no dispositivo, ocorrerá o erro <span class="code">WALK: Byte Mode Error</span>, informando que o Byte Code do comando ainda não existe na versão do CloudWalk Framework instalada no dispositivo.'
      table_of_contents:
        commands: Lista de comandos
        commands_list: Lista de comandos
        presentation: Apresentação
      title: POSXML - Lista de comandos
    configuration:
      description: O CloudWalk Framework tem várias variáveis de configuração, permitindo configurar o dispositivo através da linguagem POSXML. Lista de parâmetros.
      parameters_list:
        accepts_track_1_and_2: Aceita trilhas 1 e 2
        accepts_track_2: Aceita trilha 2
        config_dat_model: Modelo no config.dat
        manual_typing_not_allowed: Não permite digitação manual
        manual_typing_or_swap: Digitação manual ou passe
        option: Opção
        paragraph_1: 'Abaixo as variáveis de configuração do arquivo config.dat:'
        parameter_1: <strong>autooffmodem</strong><br/> Desliga o modem automaticamente após uma conexão
        parameter_10: <strong>keystar</strong><br/> Tecla que será utilizada para colocar o <strong>*</strong> (asterisco). As teclas opcionais variam de dispositivo para dispositivo, e podem ir de KEY_EXTRA1 até KEY_EXTRA99
        parameter_11: '<strong>model</strong><br/> Modelo do dispositivo, conforme a tabela abaixo:'
        parameter_12: <strong>mygateway</strong><br/> Gateway que será utilizado pelo dispositivo. É necessário definir o Gateway <strong>0.0.0.0</strong> se o protocolo de comunicação <strong>PPP</strong> ou <strong>DHCP</strong> for utilizado
        parameter_13: <strong>myip</strong><br/> Endereço IP do dispositivo. É necessário definir o IP <strong>0.0.0.0</strong> se o protocolo de comunicação <strong>PPP</strong> ou <strong>DHCP</strong> for utilizado
        parameter_14: <strong>nomeaplicativo</strong><br/> Nome do aplicativo que será buscado no CloudWalk Manager
        parameter_15: <strong>numerodestepos</strong><br/> Número lógico do dispositivo
        parameter_16: <strong>primeiravez</strong><br/> Indica se é a primeira vez que o dispositivo está executando uma aplicação POSXML
        parameter_17: <strong>qtdetentativasenvio</strong><br/> Número de pacotes que serão enviados até haver a confirmação pelo autorizador
        parameter_18: <strong>retentativas</strong><br/> Quantidade de retentativas de conexão com o serviço CloudWalk
        parameter_19: <strong>sn_terminal</strong><br/> Número de série (serial number) do dispositivo
        parameter_2: <strong>crcpaginawalkserver</strong><br/> CRC do aplicativo do CloudWalk Manager
        parameter_20: <strong>subnet</strong><br/> Máscara de rede. É necessário definir a máscara <strong>255.255.255.255</strong> se o protocolo de comunicação <strong>PPP</strong> for utilizado, se for utilizado <strong>DHCP</strong> é necessário definir a máscara <strong>0.0.0.0</strong>
        parameter_21: <strong>timeoutinput</strong><br/> Timeout para todas as instruções que a utilizam
        parameter_22: '<strong>tiposcartao</strong><br/> Define as regras para utilização de cartões, conforme a tabela abaixo:'
        parameter_23: |-
          <strong>touchscreen</strong><br/>Habilita ou não o teclado virtual, caso o dispositivo possua touchscreen, onde:<pre>0 – Não ativa o teclado virtual
          1 – Ativa o teclado virtual</pre>
        parameter_24: <strong>uclapn</strong><br/> APN da rede GPRS
        parameter_25: |-
          <strong>uclmedia</strong><br/>Tipo de conexão que será utilizada, podendo ser:<pre>LANDLINE
          ETHERNET
          GPRS
          WIFI</pre>
        parameter_26: <strong>uclpassword</strong><br/>Senha do usuário do RAS ou APN (PPP)
        parameter_27: <strong>uclphoneno</strong><br/>Número que o dispositivo irá efetuar a discagem;
        parameter_28: |-
          <strong>uclprotocol</strong><br/>Protocolo de comunicação que será utilizado, podendo ser:<pre>TCP
          SDLC</pre>
        parameter_29: <strong>uclusername</strong><br/>Nome de usuário do RAS ou APN (PPP);
        parameter_3: <strong>dnsprimario</strong><br/> DNS primário que será utilizado pelo dispositivo. É necessário definir o DNS <strong>0.0.0.0</strong> se o protocolo de comunicação <strong>PPP</strong> for utilizado
        parameter_30: <strong>uclwifikey</strong><br/>Senha para a rede WIFI que desejamos conectar (hexadecimal)
        parameter_31: <strong>uclwifinetwork</strong><br/>Nome da rede WIFI que desejamos conectar
        parameter_32: |-
          <strong>uclwifisecurity</strong><br/>Tipo de criptografia da rede <pre>WEP64-40
          WEP128-104
          WPA2-PSK <strong>(somente para VX 680)</strong></pre>
        parameter_33: <strong>versaoframework</strong><br/>Versão do CloudWalk Framework instalado no dispositivo
        parameter_4: <strong>dnssecundario</strong><br/> DNS secundário que será utilizado pelo dispositivo. É necessário definir o DNS <strong>0.0.0.0</strong> se o protocolo de comunicação <strong>PPP</strong> for utilizado
        parameter_5: <strong>gprs_pin</strong><br/> PIN do chip GPRS
        parameter_6: |-
          <strong>iskeytimeout</strong><br/> Utilizado para identificar o que a função <a href='/pt-BR/posxml/commands/readkey' class='command'>readkey</a> vai retornar em caso de timeout, onde:<pre>0 – Desativado, readkey retorna KEY_CANCEL em timeout.
          1 – Ativado, readkey retorna -1 em timeout.</pre>
        parameter_7: <strong>keyalpha</strong><br/> Tecla que será utilizada para fazer o <strong>alpha</strong> do teclado. As teclas opcionais variam de dispositivo para dispositivo, e podem ir de KEY_EXTRA1 até KEY_EXTRA99
        parameter_8: <strong>keypaperfeed</strong><br/> Tecla que será utilizada para efetuar o <a href='/pt-BR/posxml/commands/paperfeed' class='command'>paperfeed</a>
        parameter_9: <strong>keypound</strong><br/> Tecla que será utilizada para colocar o <strong>#</strong> (sharp). As teclas opcionais variam de dispositivo para dispositivo, e podem ir de KEY_EXTRA1 até KEY_EXTRA99
        pos_model: Modelo do dispositivo POS
        reading_type: Tipo de leitura
        tracks: Trilhas
      presentation:
        paragraph_1: O CloudWalk Framework possui diversas variáveis de configuração, permitindo configurar qualquer parâmetro do dispositivo através da linguagem POSXML, como se fossem variáveis de ambiente utilizadas pelo aplicativo e por drivers do dispositivo, como modem e impressora.
        paragraph_2: Qualquer um desses parâmetros pode ser configurado com o auxílio do comando <a href='/pt-BR/posxml/commands/editfile' class='command'>editfile</a>, apontando para arquivo config.dat, e utilizando o nome desses parâmetros como chave. O arquivo config.dat nada mais é do que um arquivo no formato de sistema de arquivos do CloudWalk.
        paragraph_3: É possível configurar qualquer tipo de comunicação, retentativas, entre outros parâmetros e fazer lógicas de reconexão de backup através da linguagem POSXML, utilizando as instruções <a href='/pt-BR/posxml/commands/editfile' class='command'>editfile</a> e <a href='/pt-BR/posxml/commands/preconnect' class='command'>preconnect</a>.
      table_of_contents:
        parameters_list: Listagem de parâmetros
        presentation: Apresentação
      title: POSXML - Configuração
    file_system:
      creating_and_editing_files:
        paragraph_1: Os comandos <a href='/pt-BR/posxml/commands/editfile' class='command'>editfile</a>, <a href='/pt-BR/posxml/commands/readfile' class='command'>readfile</a> e <a href='/pt-BR/posxml/commands/readfilebyindex' class='command'>readfilebyindex</a> podem ser utilizados para trabalhar com este tipo de arquivo, baseado em chaves e valores, possibilitando um meio rápido e eficiente para armazenar dados estáticos no dispositivo.
        paragraph_2: 'Recomendamos a utilização do utilitário EditDBFile para manipular seus arquivos WALK dbfile. Siga o seguinte procedimento:'
        paragraph_3: Baixe o utilitário em <a href='http://dl.cloudwalk.io/edit_db_file.zip'>http://dl.cloudwalk.io/edit_db_file.zip</a>
        paragraph_4: Descompacte o pacote e execute o arquivo <strong>EditDbFileWalk.exe</strong>
        paragraph_5: Digite o caminho do arquivo dat e pressione o botão <strong>Load</strong>
        paragraph_6: Faça as devidas alterações e pressione o botão <strong>Save</strong>
        paragraph_7: Cadastre o <a href='/pt-BR/manager/assets'>arquivo no CloudWalk Manager</a> e seus dispositivos poderão baixá-lo com o comando <a href='/pt-BR/posxml/commands/downloadfile' class='command'>downloadfile</a>
      description: O CloudWalk Framework tem um sistema de arquivos do tipo WALK dbfile (arquivos de text em ambientes UNIX). Criando e editando arquivos. Use o utilitário EditDBFile para manipular arquivos WALK dbfile.
      presentation:
        paragraph_1: 'O CloudWalk Framework possui um sistema de arquivos que consegue manipular arquivos do tipo WALK dbfile, onde é possível criar e trabalhar com arquivos no seguinte formato:'
        paragraph_2: Basicamente, seria o formato de arquivos texto em ambientes UNIX, onde o <span class='code'>\n</span>F representa a quebra de linha. O próprio arquivo de configuração do dispositivo (config.dat) é um arquivo WALK dbfile.
      table_of_contents:
        creating_and_editing_files: Criando e editando arquivos
        presentation: Apresentação
      title: POSXML - Sistema de arquivos
    memory_and_variables:
      description: O POSXML tem o conceito de tipos de variáveis, que podem ser do tipo string ou integer. Limitações e envio de parâmetros.
      introduction: O CloudWalk Framework é responsável por executar o aplicativo POSXML compilado, e ao ser instalado no dispositivo, assume toda a responsabilidade de gerenciamento de memória e drivers do mesmo. Sendo assim, para executar uma aplicação em um dispositivo, basta escrever um aplicativo POSXML.
      limitations:
        paragraph_1: Existe uma limitação de 511 variáveis por aplicação POSXML, sendo 256 do tipo string com tamanho máximo de 1K (1023 caracteres, sendo que um é utilizado automaticamente pela plataforma para alocar o <span class='code'>\0</span>), e 255 do tipo integer.
        paragraph_2: Ao declarar uma variável com os comandos <a href='/pt-BR/posxml/commands/integervariable' class='command'>integervariable</a> ou <a href='/pt-BR/posxml/commands/stringvariable' class='command'>stringvariable</a>, esta ficará na memória da aplicação até que o dispositivo seja desligado. Por este motivo, é necessário se ter o cuidado de definir no começo da aplicação todas as variáveis utilizadas e limpá-las para não ocorrer erros no decorrer da execução do aplicativo.
        paragraph_3: Atualmente existe um limite de memória de 32K para carregamento de páginas POSXML compiladas.
      parameters:
        paragraph_1: Todo comando POSXML que possuir um parâmetro cujo nome contenha a palavra <span class='code'>variable</span>, por exemplo, <span class='code'>variablereturn</span>, é obrigatório passar uma variável para aquele parâmetro.
        paragraph_2: 'A passagem de variáveis é feita com a nomenclatura <span class="code">$(nomeDaVariavel)</span>, conforme pode ser observado abaixo:'
        paragraph_3: 'Quando no nome do parâmetro não tiver a palavra variável, é possível passar tanto uma constante quanto uma variável. A passagem de constantes é feita como em toda linguagem de programação:'
        paragraph_4: Em variáveis string, ainda é possível passar para o comando apenas um trecho indexado da variável, assim como em outras linguagens de programação, utilizando ponteiros de variáveis.
        paragraph_5: 'No exemplo abaixo, a seguinte string seria exibida: <strong>H</strong>'
        paragraph_6: 'No exemplo abaixo, a seguinte string seria exibida: <strong>e</strong>'
        paragraph_7: 'No exemplo abaixo, a seguinte string seria exibida: <strong>ello World</strong>'
        paragraph_8: Neste último exemplo foi especificado o símbolo <span class='code'>!</span> para que seja exibido os caracteres da posição definida em <span class='code'>intIndex</span> até o final da string. Quando o símbolo <span class='code'>!</span> é omitido, somente o caracter definido na posição de <span class='code'>intIndex</span> é exibido no display do dispositivo.
      table_of_contents:
        limitations: Limitações
        parameters: Passagem de parâmetros
        variable_types: Tipos de variável
      title: POSXML - Variáveis e memória
      variable_types:
        paragraph_1: A linguagem POSXML possui o conceito de tipos de variável, onde as mesmas podem ser do tipo <strong>string</strong> ou <strong>integer</strong>. Diversos comandos da linguagem POSXML exigem um tipo de variável, o qual está descrito na explicação de funcionamento dos comandos.
        paragraph_2: É possível converter variáveis do tipo <strong>integer</strong> para <strong>string</strong> e vice-versa, bastando para isso utilizar os comandos inttostring e stringtoint.
        paragraph_3: Variáveis do tipo <strong>double</strong> (ponto flutuante, decimal) também podem ser utilizadas, bastando utilizar variáveis do tipo string com a casa decimal separada por <strong>.</strong> (ponto), e não por vírgula.
    structure:
      case_sensitive:
        paragraph_1: A linguagem POSXML é <em>case sensitive</em>, portanto, existem diferenças entre palavras com letras minúsculas e palavras com letras maiúsculas. É necessário muita atenção, principalmente ao nomear funções e variáveis.
        paragraph_2: 'Exemplo:'
      comments:
        paragraph_1: 'Blocos de comentários devem ser utilizados com as tags <span class="code">&lt;!--</span> e <span class="code">--&gt;</span> conforme o exemplo abaixo:'
      description: Organização e Estrutura, Tag pai ou Tag root, Case sensitive, Caracteres reservados, Comentários.
      introduction: A linguagem POSXML segue o padrão aberto <a href='http://pt.wikipedia.org/wiki/XML' class='external'>XML</a>, amplamente difundido na indústria de software. O padrão XML é totalmente flexível e possibilita rápida expansão. Todas as regras de formatação aplicadas ao XML continuam existindo no POSXML.
      reserved_characters:
        paragraph_1: Todos os caracteres reservados na linguagem XML também são reservados na linguagem POSXML e devem ser escritos da maneira correta.
        paragraph_2: 'Os símbolos a seguir devem ser escritos da seguinte maneira:'
        paragraph_3: 'Para exibir uma mensagem com o símbolo <span class="code">&lt;</span> (menor), o código seria assim:'
      structure:
        paragraph_1: A linguagem POSXML é organizada e estruturada em forma de tags com níveis e subníveis de comandos que formam a estrutura lógica do aplicativo POSXML. Uma tag pode ser identificada quando está entre os sinais <span class='code'>&lt;</span> (menor) e <span class='code'>></span> (maior), onde a mesma deve obrigatoriamente ser aberta e fechada.
        paragraph_2: 'Exemplo:'
      table_of_contents:
        case_sensitive: Case sensitive
        comments: Comentários
        reserved_characters: Caracteres reservados
        structure: Organização e Estrutura
      tag_root:
        paragraph_1: Todo aplicativo POSXML deve obrigatoriamente possuir uma tag pai ou tag root, e possuir um nome válido, obedecendo ao critério de abertura e fechamento da mesma. Abaixo da tag root, deve ser criada a tag <span class='code'>&lt;pagina nome="principal"&gt;</span>, que é onde deve ser feita toda a lógica da aplicação.
        paragraph_2: 'Exemplo:'
      title: POSXML - Estrutura da linguagem
    useful_functions:
      title: "POSXML - Funções úteis"
      description: "Funções POSXML prontas para uso."
      introduction: "Otimize seu tempo e utilize funções POSXML prontas em seus projetos."
      paragraph_1: "Você gosta de compartilhar? <a href='mailto:posxml@cloudwalk.io'>Envie-nos sua função</a>, e caso a mesma seja publicada, mencionaremos a autoria!"
      table_of_contents:
        cpf_validation: "Validação de CPF"
        hide_credit_card_number: "Ocultar número do cartão de crédito"
        center_text: "Centralizar texto"
        format_iso8583_money: "Formatar valor ISO8583"
      cpf_validation:
        paragraph_1: "Função para validar um CPF informado."
      hide_credit_card_number:
        paragraph_1: "Função para ocultar o número do cartão de crédito informado."
      center_text:
        paragraph_1: "Função para centralizar um texto."
      format_iso8583_money:
        paragraph_1: "Função para formatar um valor ISO8583. Por exemplo, 100 se torna 1,00."
  framework:
    package:
      select: "<strong>Pacote do CloudWalk Framework:</strong> Selecione a marca, modelo e assinatura (se aplicável) do seu dispositivo:"
      device:
        brand: "Marca do dispositivo"
        model: "Modelo"
        signature: "Assinatura"
      selected: "Pacote selecionado: "
      with_signature: "assinado por"
      binary: "Binário do CloudWalk Framework para"
      unsigned: "sem assinatura"
      download: "Fazer download"
      open_url: "Acessar processo de instalação"
      supplier:
        tefti: "BRASIL - TEFTI"
        paytec: "BRASIL - Paytec"
        pax: "BRASIL - PAX"
        other: "Outro fornecedor"
      models:
        list: "Modelos suportados: "
        verix: "Vx 510, Vx 610 e Vx 670"
        evo_usb: "VX 520, VX 675 e VX 680"
        evo_serial: "VX 805 e VX 820"
        telium_1: "EFT930G e EFT930S"
        telium_2: "ICT220, ICT250, IWL220, IWL250 e IWL280"
        d200: "D200"
    communication:
      paragraph_1: Rede local (Ethernet)
      paragraph_2: Linha discada (PPP)
      paragraph_3: Linha discada (SDLC)
      paragraph_4: Caso seu dispositivo não apresente alguma opção, por exemplo, GPRS, significa que o seu dispositivo não suporta o tipo de comunicação em questão.
      paragraph_5: Detalhes dos tipos de comunicação
      paragraph_6: 'Cada tipo de comunicação possui uma forma específica de configuração, a saber:'
      ethernet:
        name: "REDE LOCAL"
        media: "REDE LOCAL"
        posxml:
          screen_1:
            line_1: "REDE LOCAL\n"
            line_2: "\n"
            line_3: "ENDEREÇO IP\n"
            line_4: ":192.168.0.200\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_2:
            line_1: "REDE LOCAL\n"
            line_2: "\n"
            line_3: "MÁSCARA DE SUBREDE\n"
            line_4: ":255.255.255.0\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_3:
            line_1: "REDE LOCAL\n"
            line_2: "\n"
            line_3: "GATEWAY PADRÃO\n"
            line_4: ":192.168.0.1\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_4:
            line_1: "REDE LOCAL\n"
            line_2: "\n"
            line_3: "SERVIDOR DNS 1\n"
            line_4: ":192.168.0.1\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_5:
            line_1: "REDE LOCAL\n"
            line_2: "\n"
            line_3: "SERVIDOR DNS 2\n"
            line_4: ":192.168.0.1\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
        paragraph_1: '1. Definir o endereço IP do dispositivo (ex: 192.168.0.200). No caso de DHCP, definir <strong>0.0.0.0</strong>.'
        paragraph_2: '2. Definir a máscara de sub-rede compatível com a classe de IP utilizada (ex: 255.255.255.0).'
        paragraph_3: '3. Definir o endereço IP do router/gateway (ex: 192.168.0.1).'
        paragraph_4: '4. Definir o endereço IP do servidor de DNS primário (ex: 192.168.0.1).'
        paragraph_5: '5. Definir o endereço IP do servidor de DNS secundário (ex: 192.168.0.1).'
      gprs:
        name: "GPRS"
        media: "CONFIGURAÇÃO GPRS"
        posxml:
          screen_1:
            line_1: "CONFIGURAÇÃO GPRS\n"
            line_2: "\n"
            line_3: "1 CLARO\n"
            line_4: "2 TIM\n"
            line_5: "3 OI\n"
            line_6: "4 VIVO\n"
            line_7: "5 LYRA\n"
            line_8: "6 DEFINIR OPERADORA"
        paragraph_1: 1. Definir a operadora.
      ppp:
        name: "LINHA DISCADA PPP"
        media: "LINHA DISCADA PPP"
        posxml:
          screen_1:
            line_1: "LINHA DISCADA PPP\n"
            line_2: "\n"
            line_3: "VELOCIDADE MODEM\n"
            line_4: ":2400\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_2:
            line_1: "LINHA DISCADA PPP\n"
            line_2: "\n"
            line_3: "NUMERO DO PROVEDOR\n"
            line_4: ":11223344\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_3:
            line_1: "LINHA DISCADA PPP\n"
            line_2: "\n"
            line_3: "USUARIO\n"
            line_4: ":usuario\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_4:
            line_1: "LINHA DISCADA PPP\n"
            line_2: "\n"
            line_3: "SENHA\n"
            line_4: ":123456\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
        paragraph_1: '1. Definir a velocidade de comunicação do modem (ex: 2400).'
        paragraph_2: 2. Definir o número de telefone do provedor de internet.
        paragraph_3: '3. Definir o nome de usuário utilizado para se conectar à internet. Alguns provedores requerem que seja um nome de usuário completo, com e-mail (ex: user@provider.com), enquanto outros requerem somente o nome de usuário.'
        paragraph_4: 4. Definir a senha do provedor de internet.
      sdlc:
        name: "LINHA DISCADA SDLC"
        media: "LINHA DISCADA SDLC"
        posxml:
          screen_1:
            line_1: "LINHA DISCADA SDLC\n"
            line_2: "\n"
            line_3: "VELOCIDADE MODEM\n"
            line_4: ":2400\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_2:
            line_1: "LINHA DISCADA SDLC\n"
            line_2: "\n"
            line_3: "NUMERO DO PROVEDOR\n"
            line_4: ":11223344\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
        paragraph_1: '1. Definir a velocidade de comunicação do modem (ex: 2400).'
        paragraph_2: 2. Definir o número de telefone do provedor de internet.
      wifi:
        name: "WIFI"
        media: "CONFIGURAÇÃO WIFI"
        posxml:
          screen_1:
            line_1: "CONFIGURAÇÃO WIFI\n"
            line_2: "\n"
            line_3: "NOME DA REDE\n"
            line_4: ":redewifi\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_2:
            line_1: "CONFIGURAÇÃO WIFI\n"
            line_2: "\n"
            line_3: "SENHA\n"
            line_4: ":senhawifi\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_3:
            line_1: "CONFIGURAÇÃO WIFI\n"
            line_2: "\n"
            line_3: "PROTOCOLO\n"
            line_4: "\n"
            line_5: "1.WEP-128\n"
            line_6: "2.WEP-64\n"
            line_7: "\n"
            line_8: "STATUS: WEP-128"
          screen_4:
            line_1: "CONFIGURAÇÃO WIFI\n"
            line_2: "\n"
            line_3: "ENDEREÇO IP\n"
            line_4: ":192.168.0.200\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_5:
            line_1: "CONFIGURAÇÃO WIFI\n"
            line_2: "\n"
            line_3: "MASCARA DE SUBREDE\n"
            line_4: ":255.255.255.0\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_6:
            line_1: "CONFIGURAÇÃO WIFI\n"
            line_2: "\n"
            line_3: "GATEWAY PADRÃO\n"
            line_4: ":192.168.0.1\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_7:
            line_1: "CONFIGURAÇÃO WIFI\n"
            line_2: "\n"
            line_3: "SERVIDOR DNS 1\n"
            line_4: ":192.168.0.1\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
          screen_8:
            line_1: "CONFIGURAÇÃO WIFI\n"
            line_2: "\n"
            line_3: "SERVIDOR DNS 2\n"
            line_4: ":192.168.0.1\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
        paragraph_1: 1. Definir nome da rede wireless.
        paragraph_2: 2. Definir a senha da rede wireless.
        paragraph_3: '3. Definir o protocolo de segurança da rede (ex: WEP 128-104).'
        paragraph_4: '4. Definir o endereço IP do dispositivo (ex: 192.168.0.200). No caso de DHCP, definir <strong>0.0.0.0</strong>.'
        paragraph_5: '5. Definir a máscara de sub-rede compatível com a classe de IP utilizada (ex: 255.255.255.0).'
        paragraph_6: '6. Definir o endereço IP do router/gateway (ex: 192.168.0.1).'
        paragraph_7: '7. Definir o endereço IP do servidor de DNS primário (ex: 192.168.0.1).'
        paragraph_8: '8. Definir o endereço IP do servidor de DNS secundário (ex: 192.168.0.1).'
      ssl:
        posxml:
          screen_1:
            line_1: "%{media}\n"
            line_2: "\n"
            line_3: "ATIVAR SSL?\n"
            line_4: "\n"
            line_5: "1.SIM\n"
            line_6: "2.NÃO\n"
            line_7: "\n"
            line_8: "STATUS: INATIVO"
        paragraph_1: '%{num}. Definir se o dispositivo deve ou não utilizar <a href="http://en.wikipedia.org/wiki/Secure_Socket_Layer" class="external">SSL</a>.'
    configuration:
      description: 'Opções de configuração do CloudWalk Framework.'
      title: CloudWalk Framework - Configuração do dispositivo
      table_of_contents:
        logical_number: 'LOGICAL NUMBER'
        communication: 'COMMUNICATION'
        magstripe_settings: 'MAGSTRIPE SETTINGS'
        clear_this_device: 'CLEAR THIS DEVICE'
        check_serial_number: 'CHECK S. NUMBER'
        cloudwalk_update: 'CLOUDWALK UPDATE'
        about: 'ABOUT'
      password: "Para acessar o menu de configuração, é necessário informar a senha <strong>55555</strong>. Esta senha pode ser <a href='/pt-BR/framework/configuration/change-password'>alterada</a>."
      logical_number:
        paragraph_1: "Opção utilizada para definir o número lógico do dispositivo."
        paragraph_2: "Mais informações sobre a utilização de números lógicos podem ser encontradas em:"
        integration: "Integração"
      communication:
        paragraph_1: "Opção utilizada para configurar a comunicação do dispositivo."
        paragraph_2: "Os seguintes tipos de comunicação podem ser utilizados (as opções podem variar dependendo do tipo de dispositivo):"
      magstripe_settings:
        paragraph_1: "Define os parâmetros de leitura da tarja magnética do cartão."
        paragraph_2: "Os seguintes parâmetros podem ser utilizados:"
        types:
          t0: "Retorna a track 2 e permite que o cartão seja passado ou que o número seja digitado"
          t2: "Retorna a track 2 e permite que o cartão seja somente passado (sem digitação)"
          t4: "Retorna as tracks 1 e 2 e permite que o cartão seja passado ou que o número seja digitado"
          t255: "Retorna as tracks 1 e 2 e permite que o cartão seja somente passado (sem digitação)"
      clear_this_device:
        paragraph_1: "Opção utilizada para excluir os aplicativos e o arquivo de parâmetros do dispositivo."
      check_serial_number:
        paragraph_1: "Exibe o número de série do dispositivo."
      cloudwalk_update:
        paragraph_1: "Opção utilizada para atualizar remotamente o CloudWalk Framework do dispositivo."
      about:
        paragraph_1: "Exibe informações do dispositivo, como o modelo e a versão do CloudWalk Framework."
      change_password:
        description: "Procedimento de alteração da senha padrão de acesso ao menu de configuração do dispositivo"
        title: "Alteração de senha"
        table_of_contents:
          multiple_devices: "Multiplos dispositivos"
          single_device: "Dispositivos individuais"
        introduction: "Este guia o conduzirá através do processo de alteração da senha padrão do menu de configuração dos dispositivos, através do uso de parâmetros."
        multiple_devices:
          paragraph_1: "Para alterar a senha padrão de vários dispositivos, é necessário adicionar um novo parâmetro no grupo desejado. O nome do parâmetro é <strong>menupassword</strong>, e o mesmo aceita qualquer sequência numérica entre quatro e oito dígitos."
          paragraph_2: "No exemplo abaixo, todos os números lógicos do grupo <strong>CloudWalk</strong> terão a senha alterada de 55555 (padrão) para a nova senha <strong>112233</strong>."
        single_device:
          paragraph_1: "Para alterar a senha padrão de um único dispositivo, é necessário adicionar um novo parâmetro no número lógico desejado. Assim como no grupo, o nome do parâmetro é <strong>menupassword</strong>, e o mesmo aceita qualquer sequência numérica entre quatro e oito dígitos."
          paragraph_2: "No exemplo abaixo, o número lógico que está sendo atualizado terá a senha alterada de 55555 (padrão) para a nova senha <strong>123456</strong>."
    first_launch:
      description: "Procedimento de configuração do dispositivo após a instalação do CloudWalk Framework."
      title: "CloudWalk Framework - Primeira execução"
      after_install: "Agora que o dispositivo já possui o CloudWalk Framework instalado, o próximo passo é realizar a <a href='/pt-BR/framework/first-launch'>primeira execução</a> do dispositivo."
      integration:
        paragraph_1: "Agora que o dispositivo já está ativado, o próximo passo é realizar um teste de integração HTTP. Clique <a href='/pt-BR/integration/http'>aqui</a> para iniciar o processo."
      prerequisites:
        internet_access: "<strong>Computador com acesso à internet:</strong> Necessário para cadastrar o número lógico e liberar o dispositivo no serviço CloudWalk"
        framework: "<strong>CloudWalk Framework:</strong> Dispositivo com CloudWalk Framework devidamente instalado"
      table_of_contents:
        prerequisites: "Pré-requisitos"
        language_settings: "Preferência de idioma"
        step_1: "Passo 1 - Liberação do número de série"
        step_2: "Passo 2 - Cadastro do número lógico"
        step_3: "Passo 3 - Configuração da comunicação"
        step_4: "Passo 4 - Ativação"
        integration: "Integração"
      language_settings:
        paragraph_1: "Com o dispositivo recém instalado em mãos, a tela inicial irá oferecer a opção para escolher o idioma que será utilizado durante a ativação do dispositivo:"
        paragraph_2: "Basta então pressionar <strong>1</strong> para utilizar o idioma Português ou <strong>2</strong> para utilizar o idioma Inglês."
      step_1:
        posxml:
          screen_1:
            line_1: "PASSO 1 DE 4\n"
            line_2: "\n"
            line_3: "PRIMEIRAMENTE SERÁ\n"
            line_4: "NECESSÁRIO CADASTRAR\n"
            line_5: "O NÚMERO DE SÉRIE DO\n"
            line_6: "SEU DISPOSITIVO.\n"
            line_7: "\n"
            line_8: "OK PARA CONTINUAR"
          screen_2:
            line_1: "LIBERE ESTE NÚMERO DE\n"
            line_2: "SÉRIE NO SEU MANAGER:\n"
            line_3: "\n"
            line_4: "123-456-789\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "PRECISA DE AJUDA?\n"
            line_8: "www.cloudwalk.io/1"
        paragraph_1: 'Após selecionar o idioma (assumindo que você tenha selecionado <strong>Português</strong>), a seguinte tela será exibida:'
        paragraph_2: 'Este passo é importante, pois para que um dispositivo tenha acesso ao serviço CloudWalk, é necessário que o número de série do mesmo seja cadastrado no CloudWalk Manager. Pressione <strong>OK</strong> para passar para a próxima tela:'
        paragraph_3: 'O número <strong>123-456-789</strong> representa o número de série do dispositivo (fictício), e deverá ser utilizado na tela de liberação de dispositivos no CloudWalk Manager. Siga então o seguinte procedimento:'
        paragraph_4: Acesse o CloudWalk Manager em <a href='https://manager.cloudwalk.io' target='_blank' class='external'>https://manager.cloudwalk.io</a>
        paragraph_5: Acesse o menu <a href='https://manager.cloudwalk.io/devices' target='_blank' class='external'>Dispositivos</a>
        paragraph_6: Clique no botão <strong>Liberar um novo dispositivo</strong>
        paragraph_7: Informe o número de série exatamente como exibido na tela do dispositivo (ou impresso) e clique no botão <strong>Liberar acesso</strong>
        paragraph_8: "É necessário informar todos os números, letras e demais caracteres, <strong>exatamente</strong> como exibido na tela do dispositivo."
        paragraph_9: "Ao finalizar a liberação do número de série no CloudWalk Manager, pressione <strong>OK</strong> no dispositivo para iniciar o próximo passo."
      step_2:
        posxml:
          screen_1:
            line_1: "PASSO 2 DE 4\n"
            line_2: "\n"
            line_3: "AGORA SERÁ NECESSÁRIO\n"
            line_4: "CADASTRAR O NÚMERO\n"
            line_5: "LÓGICO DO SEU\n"
            line_6: "DISPOSITIVO.\n"
            line_7: "\n"
            line_8: "OK PARA CONTINUAR"
          screen_2:
            line_1: "CADASTRE UM NÚMERO\n"
            line_2: "LÓGICO NO SEU MANAGER\n"
            line_3: "E O INFORME AQUI\n"
            line_4: "\n"
            line_5: ":\n"
            line_6: "\n"
            line_7: "PRECISA DE AJUDA?\n"
            line_8: "www.cloudwalk.io/2"
        paragraph_1: "O segundo passo refere-se ao cadastramento do número lógico do dispositivo:"
        paragraph_2: Acesse o CloudWalk Manager em <a href='https://manager.cloudwalk.io' target='_blank' class='external'>https://manager.cloudwalk.io</a>
        paragraph_3: Acesse o menu <a href='https://manager.cloudwalk.io/logical_numbers' target='_blank' class='external'>Números lógicos</a>
        paragraph_4: Clique no botão <strong>Novo número lógico</strong>
        paragraph_5: Informe o número lógico (por exemplo 0001) e clique no botão <strong>Cadastrar número lógico</strong>
      step_3:
        posxml:
          screen_1:
            line_1: "PASSO 3 DE 4\n"
            line_2: "\n"
            line_3: "AGORA SERÁ NECESSÁRIO\n"
            line_4: "CONFIGURAR O TIPO DE\n"
            line_5: "COMUNICAÇÃO QUE SERÁ\n"
            line_6: "UTILIZADO.\n"
            line_7: "\n"
            line_8: "OK PARA CONTINUAR"
          screen_2:
            line_1: "1 REDE LOCAL\n"
            line_2: "2 LINHA DISCADA PPP\n"
            line_3: "3 LINHA DISCADA SDLC\n"
            line_4: "4 GPRS\n"
            line_5: "5 WIFI\n"
            line_6: "\n"
            line_7: "PRECISA DE AJUDA?\n"
            line_8: "www.cloudwalk.io/3"
        paragraph_1: 'Agora que o número de série e o número lógico do dispositivo já foram cadastrados no CloudWalk Manager, o próximo passo é configurar a comunicação:'
        paragraph_2: 'Pressione <strong>OK</strong> para iniciar o processo de configuração:'
        paragraph_3: 'Como pode ser observado, existem os seguintes tipos de comunicação:'
      step_4:
        posxml:
          screen_1:
            line_1: "PASSO 4 DE 4\n"
            line_2: "\n"
            line_3: "AGORA SEU DISPOSITIVO\n"
            line_4: "SERÁ ATIVADO EM NOSSA\n"
            line_5: "REDE E ESTARÁ PRONTO\n"
            line_6: "PARA SER UTILIZADO.\n"
            line_7: "\n"
            line_8: "OK PARA CONTINUAR"
          screen_2:
            line_1: "PROCESSO DE ATIVAÇÃO\n"
            line_2: "EM ANDAMENTO.\n"
            line_3: "\n"
            line_4: "AGUARDE ...\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: ""
        paragraph_1: "Com o dispositivo devidamente preparado, o último passo é a ativação do dispositivo."
        paragraph_2: "Pressione o botão <strong>OK</strong> para iniciar o processo de ativação:"
      finish:
        posxml:
          screen_1:
            line_1: "PARABÉNS!\n"
            line_2: "\n"
            line_3: "DISPOSITIVO ATIVADO\n"
            line_4: "COM SUCESSO!\n"
            line_5: "\n"
            line_6: "\n"
            line_7: "\n"
            line_8: "OK PARA CONTINUAR"
        paragraph_1: "No final do processo de ativação, a seguinte mensagem será exibida:"
    ingenico_telium_1:
      description: Processo passo a passo de instalação do CloudWalk Framework em terminais Ingenico EFT930G e EFT930S.
      introduction: Este guia o conduzirá através do processo de instalação do CloudWalk Framework em terminais Ingenico <strong>EFT930G</strong> e <strong>EFT930S</strong>. Atente-se aos pré-requisitos e siga o processo de instalação com atenção.
      deprecated: "Os terminais <strong>Telium 1</strong> (EFT930G e EFT930S) foram descontinuados, e não mais suportam EMV. Os mesmos ainda podem ser utilizados, mas não podem realizar transações financeiras (Visa, Master, etc). <a href='http://www.emvco.com/approvals.aspx?id=215#I'>Mais informações ≫</a>"
      loading_the_framework:
        paragraph_1: 'Os modelos <strong>EFT930G</strong> e <strong>EFT930S</strong> dispõem de uma entrada para um adaptador USB localizada no lado esquerdo do terminal. Conecte o adaptador USB na entrada e em seguida conecte o pendrive na outra extremidade, conforme a imagem abaixo:'
        paragraph_2: 'Siga então o seguinte procedimento:'
        paragraph_3: Reinicie o terminal e mantenha pressionado a tecla <strong>F4</strong>. O terminal deverá exibir a mensagem <strong>USB MASS STORAGE</strong>
        paragraph_4: Aguarde alguns instantes até que o terminal mostre o diretório WALK no display
        paragraph_5: Aguarde a execução do processo de carga do CloudWalk Framework
        paragraph_6: 'Ao finalizar, o terminal irá exibir a seguinte tela:'
        paragraph_7: Em seguida será apresentado a tela de configuração da primeira execução.
      preparing_the_pendrive:
        paragraph_1: 'Para montar a carga do CloudWalk Framework no pendrive, siga o seguinte procedimento:'
        paragraph_2: Conecte o pendrive no computador
        paragraph_3: Formate o pendrive
        paragraph_4: Extraia o pacote do CloudWalk Framework baixado no inicio deste tutorial
        sparagraph_5: Na pasta descompactada você irá encontrar uma pasta chamada 'CloudCloudWalk Framework', copie a pasta chamada TELIUM que se encontra nela para o pendrive
      prerequisites:
        adapter: <strong>Adaptador USB:</strong> Necessário para fazer a instalação, é possível conseguir com o seu fornecedor.
        operating_system: <strong>Sistema operacional:</strong> Microsoft Windows XP SP3 ou superior (Vista, Seven, etc)
        pendrive: <strong>Pendrive:</strong> Um pendrive comum (4GB no máximo).
      table_of_contents:
        loading_the_framework: Efetuando a carga no terminal POS
        preparing_the_pendrive: Preparando o pendrive
        prerequisites: Pré-requisitos
        wiping_the_device: Limpando o terminal POS
      title: CloudWalk Framework - Ingenico Telium 1
      wiping_the_device:
        paragraph_1: 'Acesse o menu do S.O. reiniciando o terminal e pressionando a tecla <strong>f2</strong> rapidamente ao aparecer a tela abaixo:'
        paragraph_2: 'No menu principal, selecione então a opção <strong>Delete menu</strong>:'
        paragraph_3: 'Em seguida, selecione o menu <strong>Delete application</strong>:'
        paragraph_4: A próxima tela lista algumas aplicações instaladas no terminal, onde <strong>M2OS</strong> refere-se ao Telium Manager, que não deve ser excluído. Para deletar qualquer outro arquivo, selecione o arquivo a ser excluído e pressione a tecla <strong>VERDE</strong>.
        paragraph_5: <strong>NÃO</strong> exclua o conteúdo do menu <strong>Delete library</strong> ou o arquivo <strong>M2OS</strong>, ou o terminal poderá ser danificado.
      troubleshooting:
        one:
          title: "Se o processo de carregamento não iniciar, por favor, certifique-se de que:"
          paragraph_1: "O pendrive está formatado como <strong>FAT32</strong>;"
          paragraph_2: "Somente o diretório TELIUM está na raiz do pendrive."
        two:
          title: "Qual é a senha do menu de configuração?"
          paragraph_1: "Se o seu dispositivo está solicitando uma senha, esta senha foi previamente definida por alguém. Por favor, entre em contato com o seu fornecedor de POS."
    ingenico_telium_2:
      description: Processo passo a passo de instalação do CloudWalk Framework em terminais Ingenico iCT220, iCT250, iWL220, iWL250 e iWL280.
      introduction: Este guia o conduzirá através do processo de instalação do CloudWalk Framework em terminais Ingenico <strong>ICT220</strong>, <strong>ICT250</strong>, <strong>IWL220</strong>, <strong>IWL250</strong> e <strong>IWL280</strong>. Atente-se aos pré-requisitos e siga o processo de instalação com atenção.
      loading_the_framework:
        paragraph_1: 'Os modelos <strong>ICT220</strong> e <strong>ICT250</strong> contém uma entrada USB localizada na parte debaixo do terminal, encaixe o seu pendrive na entrada como na imagem:'
        paragraph_2: 'Já os modelos IWL220, IWL250 e IWL280 dispõem de uma entrada para um adaptador USB localizada no lado esquerdo do terminal. Conecte o adaptador USB na entrada e em seguida conecte o pendrive na outra extremidade, conforme a imagem abaixo:'
        paragraph_3: 'Siga então o seguinte procedimento:'
        paragraph_4: Reinicie o terminal e mantenha pressionado a tecla <strong>F4</strong>. O terminal deverá exibir a mensagem <strong>USB MASS STORAGE</strong>
        paragraph_5: Aguarde alguns instantes até que o terminal mostre o diretório WALK no display
        paragraph_6: Selecione o diretório WALK pressionando a tecla <strong>VERDE</strong>
        paragraph_7: Aguarde a execução do processo de carga do CloudWalk Framework
        paragraph_8: 'Ao finalizar, o terminal irá exibir a seguinte tela:'
        paragraph_9: Em seguida será apresentado a tela de configuração da primeira execução.
      preparing_the_pendrive:
        macosx: <strong>Usuários Mac OS X:</strong> Para evitar problemas com arquivos ocultos no momento de descompactar o pacote do CloudWalk Framework, recomenda-se que o aplicativo gratuito <a href='https://itunes.apple.com/br/app/izip-archiver/id478738838' class='external' target='_blank'>iZip Archiver</a> seja utilizado para descompactar o pacote.
        paragraph_1: 'Para montar a carga do CloudWalk Framework no pendrive, siga o seguinte procedimento:'
        paragraph_2: Conecte o pendrive no computador
        paragraph_3: Formate o pendrive
        paragraph_4: Extraia o pacote do CloudWalk Framework baixado no inicio deste tutorial
        paragraph_5: Na pasta descompactada você irá encontrar uma pasta chamada 'CloudCloudWalk Framework', copie a pasta chamada TELIUM que se encontra nela para o pendrive
      prerequisites:
        adapter: <strong>Adaptador USB:</strong> Necessário somente para fazer a instalação no IWL220, IWL250 e IWL280
        operating_system: <strong>Sistema operacional:</strong> Microsoft Windows XP SP3 ou superior (Vista, Seven, etc)
        pendrive: <strong>Pendrive:</strong> Um pendrive comum
      table_of_contents:
        loading_the_framework: Efetuando a carga no terminal POS
        preparing_the_pendrive: Preparando o pendrive
        prerequisites: Pré-requisitos
        wiping_the_device: Limpando o terminal POS
      title: CloudWalk Framework - Ingenico Telium 2
      wiping_the_device:
        paragraph_1: 'Acesse o menu do S.O. reiniciando o terminal e pressionando a tecla <strong>F</strong> rapidamente ao aparecer a tela abaixo:'
        paragraph_2: 'No menu principal, selecione então a opção <strong>Delete menu</strong>:'
        paragraph_3: 'Em seguida, selecione o menu <strong>Delete application</strong>:'
        paragraph_4: A próxima tela lista algumas aplicações instalados no terminal, onde <strong>M2OS</strong> refere-se ao Telium Manager, que não deve ser excluído. Para deletar qualquer outro arquivo, selecione o arquivo a ser excluído e pressione a tecla <strong>VERDE</strong>.
        paragraph_5: <strong>NÃO</strong> exclua o conteúdo do menu <strong>Delete library</strong> ou o arquivo <strong>M2OS</strong>, ou o terminal poderá ser danificado.
      troubleshooting:
        one:
          title: "Se o processo de carregamento não iniciar, por favor, certifique-se de que:"
          paragraph_1: "O pendrive está formatado como <strong>FAT32</strong>;"
          paragraph_2: "Somente o diretório TELIUM está na raiz do pendrive."
        two:
          title: "Qual é a senha do menu de configuração?"
          paragraph_1: "Se o seu dispositivo está solicitando uma senha, esta senha foi previamente definida por alguém. Por favor, entre em contato com o seu fornecedor de POS."
    verifone_evo:
      description: Processo passo a passo de instalação do CloudWalk Framework em terminais Verifone VX 520 e VX 680.
      identify_os:
        os_version: Versão do sistema operacional
        eos_version: Extended Operating System Version
        paragraph_1: Para identificar a versão do sistema operacional que está instalado em seu terminal, observe a segunda linha no visor da tela inicial, considerando os últimos 2 caracteres. Esta tela é exibida quando o terminal é ligado.
        paragraph_2: Mantenha o sistema operacional dos seus terminais POS sempre atualizados. Terminais POS com o sistema operacional desatualizado podem ficar lentos e podem também apresentar problemas de comunicação.
        paragraph_3: 'Requisitos mínimos de sistema operacional para a instalação do CloudWalk Framework:'
        pos_model: Modelo POS
      installing_vx805_and_vx820: Para realizar a carga em terminais <strong>VX 805</strong> e <strong> VX 820 </strong>, confira <a href='/pt-BR/framework/verifone-evo-vx805'>este guia</a>.
      installing_vx805_and_vx820_intro: Este guia o conduzirá através do processo de instalação do CloudWalk Framework em terminais Verifone <strong>VX 805</strong> e <strong>VX 820</strong>. Atente-se aos pré-requisitos e siga o processo de instalação com atenção.
      introduction: Este guia o conduzirá através do processo de instalação do CloudWalk Framework em terminais Verifone <strong>VX 520</strong> e <strong>VX 680</strong>. Atente-se aos pré-requisitos e siga o processo de instalação com atenção.
      introduction_cable_terminals: Este guia o conduzirá através do processo de instalação do CloudWalk Framework em terminais Verifone VX 805 e VX 820. Atente-se aos pré-requisitos e siga o processo de instalação com atenção.
      loading_the_framework:
        paragraph_1: Para dar início ao processo de carga, execute o arquivo carrega_na_flash.bat para carregar os certificados e o CloudWalk Framework.
        paragraph_2: 'A seguinte tela do DOS será exibida:'
        paragraph_3: Esta tela mostra o prosseguimento do download do Framework para o terminal. Nenhuma ação é necessária, já que os comandos são executados automaticamente.
        paragraph_4: 'Enquanto a carga é efetuada, o terminal exibe o andamento do processo:'
        paragraph_5: Ao finalizar o processo de carga, a tela do DOS será fechada e o terminal será reiniciado algumas vezes, e em seguida será apresentado a tela de configuração da primeira execução.
      loading_the_framework_usb:
        paragraph_1: 'Em terminais <strong>VX 520</strong>, conecte o pendrive no terminal na parte traseira conforme a figura abaixo:'
        paragraph_2: 'Já os terminais <strong>VX 680</strong>, o local para conexão do pendrive se localiza no cabo que é utilizado para carregar a bateria do mesmo, conforme mostra a figura abaixo:'
        paragraph_3: 'O terminal detectará o pendrive conectado, e exibirá a seguinte tela no display:'
        paragraph_4: Escolha a opção 1, Sim, para começar o processo de carga
        paragraph_5: Após carregar todos os arquivos, o terminal solicitará a retirada do pendrive
        paragraph_6: Retire o pendrive e pressione a tecla enter(verde). O terminal reiniciará algumas vezes, e em seguida será apresentado a tela de configuração da primeira execução.
      preparing_the_device:
        paragraph_1: Descompacte o pacote do CloudWalk Framework baixado em um diretório de sua preferência.
        paragraph_2: Este diretório precisa ser um diretório local (por exemplo C:\temp\dir), e não um diretório de rede (\\)
        paragraph_3: 'Antes de executar qualquer arquivo, é necessário preparar o terminal para o download da carga. O primeiro ponto que deve ser verificado é se o cabo de carga está devidamente conectado na porta serial do seu computador e na porta <strong>RS 232</strong> do terminal, conforme a imagem abaixo:'
        paragraph_4: <strong>Atencão!</strong>
        paragraph_5: Este passo é o que apresenta o maior índice de erros, pois muitas pessoas conectam o cabo serial na porta errada do POS ou na porta errada do PC, caso este possua duas portas COM.
        paragraph_6: Outro ponto importante é que a COM1 do seu computador pode estar sendo utilizada por outro processo, causando erro na hora da carga do CloudWalk Framework, e como o download só é possível através da COM1, ela deva estar corretamente configurada no Windows.
      preparing_the_device_usb:
        paragraph_1: 'Ao ligar o terminal com o cabo de força, após exibir a tela inicial que exibe a versão do sistema operacional, ele permanecerá na seguinte tela:'
      preparing_the_pendrive:
        paragraph_1: 'Para montar a carga do CloudWalk Framework no pendrive, siga o seguinte procedimento:'
        paragraph_2: 'Conecte o pendrive no computador'
        paragraph_3: 'Formate o pendrive (Formato FAT32)'
        paragraph_4: 'Descompacte o pacote CloudWalk Framework baixado'
        paragraph_5: 'Copie o arquivo: verifone_evo_usb/lib_cless/modelo(VX 520 ou VX 680)/<strong>VERIFONE.zip</strong> para a raiz do pendrive'
        paragraph_6: 'Repita o processo com o arquivo: verifone_evo_usb/cw_framework_version/<strong>VERIFONE.zip</strong>'
      prerequisites:
        cable: <strong>Cabo de carga Serial</strong>
        operating_system: <strong>Sistema operacional:</strong> Microsoft Windows XP SP3 ou superior (Vista, Seven, etc)
        pendrive: <strong>Pendrive:</strong> Um pendrive comum, no máximo 4GB
        serial_port: <strong>Porta serial disponível e configurada como COM1</strong>
      table_of_contents:
        identify_os: Identificando a versão do SO do POS
        loading_the_framework: Efetuando a carga no terminal POS
        preparing_the_device: Preparando o terminal POS
        preparing_the_pendrive: Preparando o pendrive
        prerequisites: Pré-requisitos
        wiping_the_device: Limpando o terminal POS
      title: CloudWalk Framework - Verifone EVO
      wiping_the_device:
        paragraph_1: 'Com o cabo devidamente conectado, ligue o terminal no cabo de força. No modelo VX 805 pressione as teclas F2 e F4 no canto superior direito do terminal. No modelo VX 820 pressione as teclas enter (verde) e 7, simultaneamente, e a tela abaixo será exibida:'
        paragraph_10: Pressione 1 e veja a próxima tela.
        paragraph_11: Pressione 2 e pressione 2 novamente para escolher a opção COM1, para que o terminal fique aguardando a execução de algum arquivo do diretório CloudWalk Framework, que foi descompactado anteriormente.
        paragraph_12: O primeiro arquivo que deve ser executado é o <strong>limpa_terminal.bat</strong>. Este arquivo limpa qualquer informação que esteja no terminal, para que não fique 'lixo' na memória do terminal quando for efetuada a carga do novo Framework.
        paragraph_13: 'Ao executar o arquivo limpa_terminal.bat, será exibida a seguinte tela do DOS:'
        paragraph_14: Esta tela mostra que o terminal está sendo limpo. Nenhuma ação é necessária, já que os comandos são executados automaticamente. Ao finalizar a execução, a tela será fechada e o terminal irá reiniciar.
        paragraph_15: 'Após ser reiniciado, a seguinte tela será exibida:'
        paragraph_16: Esta tela indica que o terminal está aguardando a execução do arquivo de carga (CloudWalk Framework).
        paragraph_2: Esta é a tela inicial para o terminal receber a carga. Será necessário digitar a senha de acesso ao menu de configuração.
        paragraph_3: Caso não saiba a senha, entre em contato com o seu fornecedor de terminais POS.
        paragraph_4: 'Após digitar a senha, pressione a tecla verde (OK) para acessar a próxima tela:'
        paragraph_5: 'A opção do menu para dar carga do CloudWalk Framework é a opção DOWNLOAD. Pressione 3 no menu de configuração. A seguinte tela será exibida:'
        paragraph_6: 'Pressione a tecla verde (OK) para passar para a próxima tela:'
        paragraph_7: Digite a senha novamente.
        paragraph_8: Pressione a tecla verde (OK), para selecionar o tipo de download.
        paragraph_9: Pressione 1 para selecionar a opção Single App e passar para a tela de opção de download.
      troubleshooting:
        one:
          title: "Se o processo de carregamento não iniciar, por favor, certifique-se de que:"
          paragraph_1: "O pendrive está formatado como <strong>FAT32</strong>;"
          paragraph_2: "Somente o arquivo VERIFONE.zip está na raiz do pendrive."
    verifone_verix:
      description: Processo passo a passo de instalação do CloudWalk Framework em terminais Verifone Vx 510, Vx 610 e Vx 670.
      identify_os:
        os_version: Versão do sistema operacional
        paragraph_1: Para identificar a versão do sistema operacional que está instalado em seu terminal, observe a segunda linha no visor da tela inicial, considerando os últimos 2 caracteres. Esta tela é exibida quando o terminal é ligado.
        paragraph_2: Mantenha o sistema operacional dos seus terminais POS sempre atualizados. Terminais POS com o sistema operacional desatualizado podem ficar lentos e podem também apresentar problemas de comunicação.
        paragraph_3: 'Requisitos mínimos de sistema operacional para a instalação do CloudWalk Framework:'
        pos_model: Modelo POS
      introduction: Este guia o conduzirá através do processo de instalação do CloudWalk Framework em terminais Verifone <strong>Vx 510</strong>, <strong>Vx 610</strong> e <strong>Vx 670</strong>. Atente-se aos pré-requisitos e siga o processo de instalação com atenção.
      loading_the_framework:
        paragraph_1: Para dar início ao processo de carga, execute o arquivo carrega_na_flash.bat.
        paragraph_2: 'A seguinte tela do DOS será exibida:'
        paragraph_3: Esta tela mostra o prosseguimento do download do Framework para o terminal. Nenhuma ação é necessária, já que os comandos são executados automaticamente.
        paragraph_4: 'Enquanto a carga é efetuada, o terminal exibe o andamento do processo:'
        paragraph_5: Ao finalizar o processo de carga, a tela do DOS será fechada e o terminal será reiniciado algumas vezes, e em seguida será apresentado a tela de configuração da primeira execução.
      preparing_the_device:
        paragraph_1: Descompacte o pacote do CloudWalk Framework baixado em um diretório de sua preferência.
        paragraph_2: Este diretório precisa ser um diretório local (por exemplo C:\temp\dir), e não um diretório de rede (\\)
        paragraph_3: 'Antes de executar qualquer arquivo, é necessário preparar o terminal para o download da carga. O primeiro ponto que deve ser verificado é se o cabo de carga está devidamente conectado na porta serial do seu computador e na porta <strong>RS 232</strong> do terminal, conforme a imagem abaixo:'
        paragraph_4: Atencão!
        paragraph_5: Este passo é o que apresenta o maior índice de erros, pois muitas pessoas conectam o cabo serial na porta errada do POS ou na porta errada do PC, caso este possua duas portas COM.
        paragraph_6: Outro ponto importante é que a COM1 do seu computador pode estar sendo utilizada por outro processo, causando erro na hora da carga do CloudWalk Framework, e como o download só é possível através da COM1, ela deva estar corretamente configurada no Windows.
      prerequisites:
        cable: <strong>Cabo de carga para Verifone Verix 510 e 610:</strong> Se você estiver utilizando um terminal Verix 670, será necessário um adaptador especial que pode ser solicitado junto a seu revendedor autorizado.
        operating_system: <strong>Sistema operacional:</strong> Microsoft Windows XP SP3 ou superior (Vista, Seven, etc)
        serial_port: <strong>Porta serial ou USB:</strong> Disponível e configurada como <strong>COM1</strong>
      table_of_contents:
        identify_os: Identificando a versão do SO do POS
        loading_the_framework: Efetuando a carga no terminal POS
        preparing_the_device: Preparando o terminal POS
        prerequisites: Pré-requisitos
        wiping_the_device: Limpando o terminal POS
      title: CloudWalk Framework - Verifone Verix
      wiping_the_device:
        paragraph_1: 'Com o cabo devidamente conectado, ligue o terminal no cabo de força. Pressione as teclas F2 e F4 no canto superior direito do terminal, simultaneamente, e a tela abaixo será exibida:'
        paragraph_10: 'Pressione F3 para selecionar a opção FULL e passar para a tela de seleção de modo de transferência:'
        paragraph_11: 'Pressione F3 para escolher a opção COM1, para que o terminal fique aguardando a execução de algum arquivo do diretório CloudWalk Framework, que foi descompactado anteriormente:'
        paragraph_12: O primeiro arquivo que deve ser executado é o <strong>limpa_terminal.bat</strong>. Este arquivo limpa qualquer informação que esteja no terminal, para que não fique 'lixo' na memória do terminal quando for efetuada a carga do novo Framework.
        paragraph_13: 'Ao executar o arquivo limpa_terminal.bat, será exibida a seguinte tela do DOS:'
        paragraph_14: Esta tela mostra que o terminal está sendo limpo. Nenhuma ação é necessária, já que os comandos são executados automaticamente.
        paragraph_15: Ao finalizar a execução, a tela será fechada e o terminal irá reiniciar.
        paragraph_16: 'Após ser reiniciado, a seguinte tela será exibida:'
        paragraph_17: Esta tela indica que o terminal está aguardando a execução do arquivo de carga (CloudWalk Framework).
        paragraph_2: Esta é a tela inicial para o terminal receber a carga. Será necessário digitar a senha de acesso ao menu de configuração.
        paragraph_3: Caso não saiba a senha, entre em contato com o seu fornecedor de terminais POS.
        paragraph_4: 'Após digitar a senha, pressione a tecla verde (OK) para acessar a próxima tela:'
        paragraph_5: 'Pressione as teclas roxas logo abaixo da pequena flecha que aparece no visor para rolar o menu e ter acesso a mais opções, como mostrado a seguir:'
        paragraph_6: 'A opção do menu para dar carga do CloudWalk Framework é a opção DOWNLOAD. Pressione F2 no menu de configuração. A seguinte tela será exibida:'
        paragraph_7: 'Pressione a tecla verde (OK) para passar para a próxima tela:'
        paragraph_8: Digite a senha novamente.
        paragraph_9: 'Pressione a tecla verde (OK), para selecionar a opção de download:'
    pax_d200:
      title: CloudWalk Framework - PAX D200 (Windows)
      description: Processo passo a passo de instalação do CloudWalk Framework no terminal PAX D200.
      introduction: Este guia o conduzirá através do processo de instalação do CloudWalk Framework em terminais PAX D200. Atente-se aos pré-requisitos e siga o processo de instalação com atenção.
      note: "Guia para usuários Windows: <a href='/pt-BR/framework/pax-d200'>PAX D200 Windows</a> <i class='fa fa-windows'></i>"
      loading_the_framework:
        paragraph_1: 'Para iniciar o processo de carga, abra o TermAssist'
        paragraph_2: 'Com o dispositivo conectado no computador, vá na opção <em>Setting</em> selecione a opção <strong>Serial Port</strong> no campo <em>Connection Mode</em>'
        paragraph_3: 'Em seguida no campo <em>Serial Port Setting</em> clique no botão atualizar e aparecerá a qual porta seu dispositivo se encontra.'
        paragraph_4: 'Feito isso clique no botão <em>Play</em> para se conectar ao dispositivo.'
        paragraph_5: 'Agora vá até a opção <em>Installer</em> e clique em <strong>Select Installation Files</strong>, selecione o arquivo do framework conforme demonstrado abaixo:'
        paragraph_6: 'Para prosseguir com a carga clique no botão para download, conforme a figura abaixo:'
      preparing_the_device:
        paragraph_1: Descompacte o pacote do CloudWalk Framework baixado em um diretório de sua preferência
        paragraph_2: Este diretório precisa ser um diretório local (por exemplo C:\temp\dir), e não um diretório de rede (\\)
        paragraph_3: 'Antes de executar qualquer coisa (clique duplo), é necessário preparar o terminal para o download da carga. O primeiro ponto que deve ser verificado é se o cabo de carga está devidamente conectado na porta USB do seu computador e na porta USB do terminal'
        paragraph_4: 'Entre no menu principal do dispositivo. Ligue o aparelho e aperte repetidamente a tecla <strong>2</strong>, e a seguinte tela será exibida:'
      prerequisites:
        cable: <strong>Cabo:</strong> Cabo USB padrão 5 pinos
        operating_system: <strong>Sistema operacional:</strong> Microsoft Windows XP SP3 ou superior (Vista, Seven, etc)
        linux: <strong>Sistema operacional:</strong> Ubuntu/Debian
        software: "<strong>TermAssist:</strong> Disponível em <a href='https://dl.cloudwalk.io/util/term-assist.zip'>https://dl.cloudwalk.io/util/term-assist.zip</a>"
        cltool: "<strong>XCB:</strong> Disponível em <a href='https://dl.cloudwalk.io/util/xcb-with-driver.zip'>https://dl.cloudwalk.io/util/xcb-with-driver.zip</a>"
      table_of_contents:
        loading_the_framework: Efetuando a carga no terminal POS
        preparing_the_device: Preparando o terminal POS
        prerequisites: Pré-requisitos
      linux:
        title: CloudWalk Framework - PAX D200 (Linux)
        note: "Guia para usuários Linux: <a href='/pt-BR/framework/pax-d200-linux'>PAX D200 Linux</a> <i class='fa fa-linux'></i>"
        path: Este diretório precisa ser um diretório local (por exemplo ~/temp/), e não um diretório de rede.
        step_1: "Antes de executar os comandos do XCB, é útil saber qual emulador/dispositivo está conectado no server XCB. Você pode gerar uma lista de emuladores/dispositivos conectados usando o comando:"
        step_2: "Use o modo serial para conectar com o emulador ou dispositivo:"
        step_3: "Instale o pacote da aplicação:"
  manager:
    apps:
      description: O conceito de Aplicação no CloudWalk Manager, como o próprio nome sugere, define as aplicações disponíveis para serem utilizadas pelos terminais POS. Como cadastrar uma aplicação em 3 passos.
      functionality:
        paragraph_1: O conceito de <strong>Aplicação</strong> no CloudWalk Manager, como o próprio nome sugere, define as aplicações disponíveis para serem utilizadas pelos dispositivos.
        paragraph_2: Estas aplicações na prática são geradas pelo <a href='/pt-BR/introduction/ide'>CloudWalk IDE</a>, sempre que uma aplicação <a href='/pt-BR/introduction/posxml'>POSXML</a> é compilada.
      interface:
        paragraph_1: 'Para cadastrar uma aplicação, basta seguir o seguinte procedimento:'
        paragraph_2: Clique no menu <strong>Aplicações</strong>.
        paragraph_3: Clique no botão <strong>Nova Aplicação</strong>.
        paragraph_4: 'Preencha o formulário:'
        paragraph_5: <strong>Nome da aplicação</strong> é uma referência única no sistema (atente-se a regra de nomenclatura)
        paragraph_6: <strong>Breve descrição</strong> é um nome utilizado para identificar a aplicação no CloudWalk Manager
        paragraph_7: <strong>Endereço IP ou URL do autorizador</strong> é o endereço do servidor de autorização (atenção aos exemplos)
        paragraph_8: <strong>Aplicação deve ser exibida no menu de serviços.</strong> Define se a aplicação irá ou não aparecer em um lista de aplicativos do POS. Se esta opção for selecionada, torna-se necessário também definir o nome que será exibido na tela do dispositivo
      table_of_contents:
        functionality: Funcionalidade
        interface: Apresentação da interface
      title: CloudWalk Manager - Aplicações
    assets:
      description: 'Qualquer arquivo que seja diferente de uma aplicação POSXML pode ser enviado para os terminais POS. Exemplos de arquivos que podem ser enviados: Imagens, Textos, Zips.'
      functionality:
        paragraph_1: 'Qualquer arquivo que seja diferente de uma aplicação POSXML pode ser enviado para os dispositivos através desta funcionalidade, com auxílio do comando <a href="/posxml/commands/downloadfile" class="command">downloadfile</a>. Exemplos de arquivos que podem ser enviados:'
        paragraph_2: <strong>Imagens:</strong> Logotipo para a tela do dispositivo ou para o ticket de impressão
        paragraph_3: <strong>Textos:</strong> Arquivos com mensagens, nomes, etc
        paragraph_4: <strong>Zips:</strong> Que podem ser descompactados diretamente no POS
        paragraph_5: Antes de atualizar um arquivo, <strong>limpe o cache do navegador</strong>, para evitar que uma versão antiga do arquivo (mantida pelo navegador) seja enviada.
      interface:
        paragraph_1: 'Para cadastrar um arquivo, basta seguir o seguinte procedimento:'
        paragraph_2: Clique no menu <strong>Arquivos</strong>.
        paragraph_3: Clique no botão <strong>Novo arquivo</strong>.
        paragraph_4: 'Preencha o formulário:'
        paragraph_5: <strong>Breve descrição</strong> é um nome usado para controle interno como referência
        paragraph_6: <strong>Escolha o arquivo</strong> que será armazenado no CloudWalk e poderá ser baixado pelos dispositivo
      table_of_contents:
        functionality: Funcionalidade
        interface: Apresentação da interface
      title: CloudWalk Manager - Arquivos
    devices:
      description: Para permitir que um determinado dispositivo possa se contactar aos servidores do serviço CloudWalk, é necessário primeiramente liberar acesso a este dispositivo. Como liberar um dispositivo em 3 passos.
      functionality:
        paragraph_1: Por medidas de segurança, nenhum dispositivo possui acesso ao CloudWalk. Para permitir que um determinado dispositivo possa se contactar aos servidores do serviço CloudWalk, é necessário primeiramente liberar acesso para o mesmo, e esta liberação é feita através desta funcionalidade.
      interface:
        paragraph_1: 'Para liberar um dispositivo, basta seguir o seguinte procedimento:'
        paragraph_2: Clique no menu <strong>Dispositivos</strong>.
        paragraph_3: Clique no botão <strong>Liberar um novo dispositivo</strong>.
        paragraph_4: 'Preencha o formulário:'
        paragraph_5: '<strong>Número de série</strong> é o número encontrado na etiqueta do dispositivo, normalmente definida como: <strong>Serial N</strong>, <strong>S/N</strong> ou <strong>Serial Number</strong>.'
        paragraph_6: (Opcional) Clique na aba <strong>Liberação em lote (arquivo)</strong> para liberar vários dispositivos de uma vez.
        paragraph_7: Informe o arquivo (.txt) contento uma lista com os números de série dos dispositivos (um por linha).
      table_of_contents:
        functionality: Funcionalidade
        interface: Apresentação da interface
      title: CloudWalk Manager - Dispositivos
    groups:
      description: O Grupo é a associação de um ou mais números lógicos com uma ou mais aplicações. Como cadastrar um Grupo e adicionar parâmetros.
      functionality:
        paragraph_1: 'O <strong>Grupo</strong> é a associação de um ou mais números lógicos com uma ou mais aplicações. O grupo é referenciado em dois momentos distintos, sendo eles:'
        paragraph_2: '<strong>Interface de Números lógicos: </strong> Onde os números lógicos são cadastrados e associados aos grupos'
        paragraph_3: '<strong>Interface de Grupos: </strong> Onde as aplicações são associadas'
      interface:
        paragraph_1: 'Para cadastrar um Grupo, basta seguir o seguinte procedimento:'
        paragraph_2: Clique no menu <strong>Grupos</strong>.
        paragraph_3: Clique no botão <strong>Novo grupo</strong>.
        paragraph_4: 'Preencha o formulário:'
        paragraph_5: <strong>Nome do grupo</strong> é a identificação do grupo
      parameters:
        paragraph_1: É possível adicionar parâmetros a um grupo. Por exemplo, o grupo <strong>AREA 51</strong>, possui diversos números lógicos e uma aplicação de vendas. Esse grupo possui então um parâmetro chamado <strong>SPECIAL_TICKET</strong>, com o valor <strong>1</strong>. Sendo assim, todos os números lógicos pertencentes a este grupo herdam este parâmetro.
        paragraph_2: A lógica da aplicação de vendas faz uma validação no parâmetro <strong>SPECIAL_TICKET</strong>, e como o valor é <strong>1</strong>, a aplicação imprime um ticket especial, com informações adicionais da empresa, para fins de divulgação.
        paragraph_3: Após longa análise feita pela equipe estratégica, chegaram a conclusão que o custo de impressão do ticket especial, mais detalhado, não valia a pena. Os analistas decidiram, então, alterar o valor do parâmetro <strong>SPECIAL_TICKET</strong> de <strong>1</strong> para <strong>0</strong>. Pronto! Agora todos os números lógicos pertencentes ao grupo <strong>AREA 51</strong> deixarão de imprimir o ticket especial.
        paragraph_4: Em ordem de preferência, o parâmetro de um número lógico sobrepõe o parâmetro de um grupo.
      table_of_contents:
        functionality: Funcionalidade
        interface: Apresentação da interface
        parameters: Parâmetros
      title: CloudWalk Manager - Grupos
    logical_numbers:
      description: O Número lógico é a identificação do dispositivo, e é diretamente associado a um Grupo. Como cadastrar um Número lógico e adicionar parâmetros.
      functionality:
        paragraph_1: 'O <strong>Número lógico</strong> é a identificação do dispositivo, e é diretamente associado a um <strong>Grupo</strong>. O número lógico é referenciado em dois momentos distintos, sendo eles:'
        paragraph_2: '<strong>Interface de Números lógicos: </strong> Onde os números lógicos são cadastrados e associados aos grupos'
        paragraph_3: '<strong>Dispositivo: </strong> Acessando o menu de configuração do POS, na opção <strong>Número lógico</strong>'
        paragraph_4: Não confunda <strong>Número lógico</strong> com o <strong>Número de série</strong>. O número lógico é utilizado para identificar o dispositivo, enquanto o número de série é utilizado para liberar acesso ao dispositivo na rede CloudWalk.
      interface:
        paragraph_1: 'Para cadastrar um Número lógico, basta seguir o seguinte procedimento:'
        paragraph_2: Clique no menu <strong>Números lógicos</strong>.
        paragraph_3: Clique no botão <strong>Novo número lógico</strong>.
        paragraph_4: 'Preencha o formulário:'
        paragraph_5: <strong>Número lógico</strong> é a identificação do dispositivo
      parameters:
        paragraph_1: É possível adicionar parâmetros a um número lógico. Por exemplo, o número lógico <strong>100022</strong> é utilizado no POS do restaurante 'Chop Suey', do senhor Hanzo Li. Esse número lógico possui então um parâmetro chamado <strong>NUM_PARCELS</strong>, com o valor <strong>1</strong>.
        paragraph_2: A lógica da aplicação de vendas faz uma validação no parâmetro <strong>NUM_PARCELS</strong>, e como o valor é <strong>1</strong>, a aplicação oferece somente a opção de venda a vista.
        paragraph_3: O restaurante do senhor Li, apresentando excelentes resultados, chamou a atenção da equipe estratégica da rede de restaurantes 'Chop Suey', e eles decidiram oferecer a possibilidade ao senhor Li de realizar vendas parceladas. Para que essa mudança entrasse em vigor, bastou que uma pessoa da equipe estratégica alterasse o valor do parâmetro <strong>NUM_PARCELS</strong> de <strong>1</strong> para <strong>3</strong>. Pronto!
      table_of_contents:
        functionality: Funcionalidade
        interface: Apresentação da interface
        parameters: Parâmetros
      title: CloudWalk Manager - Números lógicos
    push_notifications:
      title: "CloudWalk Manager - Notificações push"
      description: "Envie notificações instantâneas para seus terminais POS"
      table_of_contents:
        functionality: "Funcionalidade"
        interface: "Apresentação da interface"
      functionality:
        paragraph_1: "Notificações push são utilizadas para interagir com os terminais POS. As notificações são entregues instantaneamente, e caso o terminal POS esteja indisponível, a notificação permanece em uma fila por até 35 dias antes de ser removida."
        paragraph_2: "Atualmente, existem dois tipos de notificações: Exibição instantânea e Processamento."
        instant_display: "Exibição instantânea"
        paragraph_3: "A notificação é simplesmente exibida na tela do terminal POS."
        use_cases: "Casos de uso:"
        use_case_1: "Dar boas vindas ao operador do POS;"
        use_case_2: "Notificar o operador do POS que há uma atualização agendada;"
        use_case_3: "Pedir que o operador do POS entre em contato com a central de suporte."
        processing: "Processamento"
        paragraph_4: "A notificação não será exibida na tela do POS, em vez disso, ela será armazenada no sistema de arquivos do POS, no arquivo <strong>cw_notifications.dat</strong>, na chave <strong>processing_message</strong>, para que sua aplicação possa processá-la dinamicamente."
      interface:
        paragraph_1: 'Para enviar uma notificação push, basta seguir o seguinte procedimento:'
        paragraph_2: Clique no menu <strong>Notificações push</strong>.
        paragraph_3: Digite a mensagem (somente caracteres ASCII).
        paragraph_4: Clique no seletor <strong>Grupo</strong> e escolha o grupo que deverá receber a notificação.
        paragraph_5: Escolha o escopo (todos números lógicos ou números lógicos específicos) no seletor <strong>Escopo</strong>.
        paragraph_6: Escolha o tipo (exibição instantânea ou processamento) no seletor <strong>Tipo</strong>.
        paragraph_7: "Opcional: Se o tipo \"Processamento\" foi escolhido, a aplicação responsável pelo tratamento da notificação pode ser informada."
    transactions_monitor:
      description: O monitor de transações exibe todas as operações que foram efetuadas pelos terminais POS. Basta especificar o tipo de registro nos filtros de pesquisa.
      functionality:
        paragraph_1: O monitor de transações exibe todas as operações que foram efetuadas pelos dispositivos. Basta especificar o tipo de registro nos filtros de pesquisa.
      interface:
        paragraph_1: 'Para acessar o monitor de transações, basta seguir o seguinte procedimento:'
        paragraph_2: Clique no menu <strong>Monitor de transações</strong>.
        paragraph_3: Clique no botão <strong>Filtros</strong>.
        paragraph_4: 'Especifique o tipo de registro:'
        paragraph_5: <strong>Requisições</strong> delimita o intervalo de tempo da consulta
        paragraph_6: <strong>Tipo de registro</strong> define o tipo de registro a ser consultado (download, transação, etc)
        paragraph_7: <strong>Status</strong> define o estado dos registros (sucesso, erro, etc)
      table_of_contents:
        functionality: Funcionalidade
        interface: Apresentação da interface
      title: CloudWalk Manager - Monitor de transações
  guides:
    transactions_patterns:
      intro:
        title: "Padrões de transações"
        description: "Aprenda sobre seus padrões de transacões automaticamente identificados por nosso serviço."
        table_of_contents:
          introduction: "Introdução"
          pattern: "O que é um padrão?"
          anomaly: "O que é uma anomalia?"
          algorithm: "O algoritmo principal"
        introduction:
          paragraph_1: "Você pode ver os logs de suas transações em tempo real  no CloudWalk Manager em <a href='https://manager.cloudwalk.io/realtime' class='external'>manager.cloudwalk.io/realtime</a>, mas é muito difícil detectar qualquer padrão apenas olhando para as linhas deslizando tela abaixo."
          paragraph_2: "Para ajudar a nós, apenas humanos, nesta tarefa, criamos um serviço de inteligência artificial que monitora, em tempo real, cada linha dos logs gerados por suas transações, procurando por padrões e anomalias."
        pattern:
          paragraph_1: "Nosso algoritmo busca por padrões, mas o que é um padrão?"
          paragraph_2: "Para nossos propósitos, um padrão é um conjunto de transações similares de algum modo. Para encontrar quais transações são similares, nosso algoritmo fica de olho nos tamanhos das mensagens enviadas por seu POS ao seu autorizador e nas mensagengs recebidas em resposta. Um padrão é, portanto, um conjunto de transações com mensagens de tamanhos similares. É trabalho do algoritmo identificar estas transações similares."
          paragraph_3: "Para ajudar o algoritmo, separamos todas as suas transações por aplicação, de modo que os padrões formados são padrões de transação em uma aplicação específica. Mais sobre isso depois!"
        anomaly:
          paragraph_1: "Uma anomalia é uma transação que não se encaixa em nenhum padrão previamente encontrado. Portanto, uma transação anômala possui mensagens com tamanhos não usuais (até então). Enquanto nosso algoritmo continua aprendendo com suas transações, ele eventualmente irá reconhecer uma anomalia recorrente como um novo padrão e cessará o envio de quaisquer avisos sobre isso."
          paragraph_2: "Tenha cuidado ao atribuir qualquer significado a uma transação anômala. Isso não significa necessariamente que algo ruim tenha ocorrido. Como exemplo, quando você começar a testar uma nova aplicação, você provavelmente verá muitas transações anômalas, na medida em que elas não se encaixam em nenhum padrão visto anteriormente."
        algorithm:
          paragraph_1: "Na essência do serviço está um algoritmo chamado <em>density-based spatial clustering of applications with noise</em> (<a href='http://www.wikiwand.com/en/DBSCAN' class='external'>DBSCAN</a>), o qual modificamos para trabalhar eficientemente com séries de dados discretos (como aqueles dos seus logs), chamando-o <em>discrete density-based spatial clustering of applications with noise</em> (DDBSCAN). Nossa implementação do DDBSCAN está disponível como um <a href='https://pypi.python.org/pypi/ddbscan/' class='external'>package Python</a> e seu código fonte é aberto, podendo ser acessado no <a href='https://github.com/cloudwalkio/ddbscan' class='external'>Github</a>."
        next: "Visão geral do tutorial"
      overview:
        title: "Padrões de transações - Visão geral do tutorial"
        description: "Aprenda neste tutorial como acessar seus padrões de transacões e anomalias."
        paragraph_1: "Neste tutorial, você aprenderá: <ul><li>como acessar um relatório com suas últimas transações anômalas,</li><li>como visualizar todos os padrões e anomalias de suas transações em um gráfico,</li><li>como configurar seus modelos, e</li><li>como receber notificações via e-mail ou webhook quando algo anômalo ocorrer.</li></ul>"
        image_1: "<img src='/img/pt-BR/guides/transactions_patterns/overview.gif' class='img-tutorial img-polaroid' alt='Anomalies tab' />"
        paragraph_2: "Este é um serviço integrado ao CloudWalk Manager e você pode accessá-lo em <a href='http://manager.cloudwalk.io/transactions/patterns' class='external'>manager.cloudwalk.io/transactions/patterns</a>."
        paragraph_3: "Você não conseguirá visualizar nada nesse link a menos que tenha realizado pelo menos uma transação utilizando sua conta CloudWalk."
        paragraph_4: "Vamos começar!"
        previous: "Introdução"
        next: "Relatório de anomalias"
      anomalies_report:
        title: "Padrões de transações - Relatório de anomalias"
        description: "Aprenda como acessar um relatório com suas últimas transações anômalas."
        paragraph_1: "Ao acessar a aba de anomalias, você verá uma tela similar a esta:"
        image_1: "<img src='/img/pt-BR/guides/transactions_patterns/report.png' class='img-tutorial img-polaroid' alt='Anomalies tab' />"
        paragraph_2: "Esta é a aba padrão ativada quando você acessa a URL dos padrões de transações."
        paragraph_3: "Como você pode observar na imagem acima, destacamos o momento em que detectamos a última transação anômala."
        paragraph_4: "Mais abaixo na tela, você pode ver uma tabela contendo as dez últimas transações anômalas detectadas. Você pode expandir cada linha da tabela para obter mais detalhes sobre a transação correspondente, basta clicar no sinal de mais. Os detalhes da transação incluem data e hora, assim como o nome da aplicação, número de série do terminal POS, tamanho e conteúdo das mensagens enviadas e recebidas. Isto é útil para observarmos exatamente o que ativou o detector de anomalias, de modo que você possa conduzir investigações posteriores."
        image_2: "<img src='/img/pt-BR/guides/transactions_patterns/report.gif' class='img-tutorial img-polaroid' alt='Anomalies tab' />"
        paragraph_5: "Agora, vamos dar uma olhada em uma representação gráfica de nossas transações!"
        previous: "Visão geral do tutorial"
        next: "Gráfico dos padrões  "
      patterns_chart:
        title: "Padrões de transações - Gráfico dos padrões"
        description: "Aprenda como acessar um gráfico com seus padrões de transações."
        table_of_contents:
          interface_presentation: "Apresentação da interface"
          chart_interaction: "Interações com o gráfico"
          transactions_stacks: "Empilhamento de transações"
          parameters: "Entendendo os parâmetros"
          play_with_it: "Tente você mesmo!"
        interface_presentation:
          paragraph_1: "Ao acessar a aba de padrões, você verá uma tela similar a esta:"
          image_1: "<img src='/img/pt-BR/guides/transactions_patterns/patterns.gif' class='img-tutorial img-polaroid' alt='Patterns tab' />"
          paragraph_2: "Este gráfico todo colorido é uma representação de suas transações. O eixo horizontal corresponde ao tamanho da mensagem enviada por seu POS  e o eixo vertical corresponde ao tamanho da mensagem recebida em resposta. Cada círculo representa uma transação com tamanhos específicos para as mensagens enviadas e recebidas."
          paragraph_3: "Os círculos coloridos representam padrões: transações de mesma cor pertencem ao mesmo padrão. Você pode ver que há alguns círculos menores com a mesma cor de alguns círculos maiores: eles também pertencem ao mesmo padrão, mas quase foram deixados de fora."
          paragraph_4: "Os pequenos círculos cinzas representam transações anômalas e não pertencem a nenhum padrão. Os pequenos quadrados cinzas representam as últimas dez anomalias."
          paragraph_5: "O quadrado grande representa sua última transação e, se for cinza, é uma transação anômala."
        chart_interaction:
          paragraph_1: "Aqui estão todas as formas pelas quais você pode interagir com o gráfico:"
          list:
            item_1: "Você pode mover o mouse sobre qualquer ponto para ver mais detalhes sobre a transação."
            item_2: "Você pode clicar no ponto para ver ainda mais informação: serão mostrados os conteúdos das mensagens."
            item_3: "Você pode arrastar o gráfico para ver transações fora da região padrão representada."
            item_4: "Você pode utilizar a roda do mouse para aproximar/afastar a visualização."
        transactions_stacks:
          paragraph_1: "Observe que pode acontecer de um único círculo representar mais de uma transação."
          paragraph_2: "Como exemplo, se você ficar enviando pings do seu POS ao seu servidor, você espera que as mesmas mensagens sejam enviadas e recebidas todas as vezes, de modo que os círculos representando essas transações estarão empilhados no gráfico."
          paragraph_3: "Nesta situação, você pode passar o mouse sobre o círculo representando as transações para ver quantas vezes uma transação com mensagens deste mesmo tamanho ocorreu, juntamente com outras informações, como a hora da última ocorrência. Você pode também clicar no círculo para ver o conteúdo da última transação."
        parameters:
          paragraph_1: "Podemos configurar os parâmetros de nossos modelos clicando na engrenagem na frente do nome da aplicação. Você verá dois sliders que podem ser utilizados para modificar alguns parâmetros de seu detector."
          paragraph_2: "Nosso algoritmo depende de dois parâmetros que efetivamente configuram sua sensibilidade, um deles controlando quão fácil/difícil é para marcar duas transações como similares e o outro controlando quantas destas transações similares são necessárias para definir-se um novo padrão:"
          list:
            item_1: "<strong>Quantas transações similares definem um padrão:</strong> este parâmetro controla o quão fácil/difícil é para o algoritmo definir um novo padrão. Se dissermos que poucas transações similares definem um padrão (slider para a esquerda), o algoritmo criará novos padrões após observar poucas transações similares. No outro extremo, configurando este parâmetro para que muitas transações similares definam um padrão (slider para a direita), o algoritmo terá que observar muitas transações similares ocorrendo antes de dizer que elas formam um padrão. Em resumo, quando o slider for da esquerda para a direita estaremos detectando menos para mais anomalias, ou, alternativamente, mais para menos padrões."
            item_2: "<strong>Quão similar um conjunto de transações deve ser para definir um padrão:</strong> este parâmetro controla o quão fácil/difícil é para duas transações serem consideradas similares. Se dissermos que elas precisam ser pouco similares (slider para a esquerda), o algoritmo considerará transações como similares mais facilmente, ou seja, ele considerará transações com mensagens de tamanhos não muito parecidos como similares. No outro extremo, dizer que as transações precisam ser muito similares (slider para a direita), significa que o algoritmo será mais seletivo ao considerar transações como similares, ou seja, ele considerará como similares apenas transações com tamanhos de mensagens parecidos. Simplificando, quando o slider for da esquerda para a direita estaremos detectando menos para mais anomalias, ou, alternativamente, mais para menos padrões."
        play_with_it:
          paragraph_1: "Para que você tenha uma noção melhor do efeito de cada parâmetro sobre o algoritmo, criamos uma simulação com a qual você pode interagir. Basta ajustar os sliders:<br>"
          paragraph_2: "Se você está tendo dificuldades em entender a simulação, lembre-se que cada círculo nesse gráfico representa uma transação, cada padrão sendo representado por sua cor única: círculos de mesma cor pertencem ao mesmo padrão. Os pequenos círculos cinzas representam transações anômalas e não pertencem a nenhum padrão."
          paragraph_3: "Observe que quando os parâmetros estão em algum lugar no meio das escalas, obtemos padrões razoáveis, de modo que esta pode ser a melhor configuração para você. De fato, esta é nossa configuração padrão."
          simulation:
            title: "Configure os parâmetros"
            parameter_1:
              title: "Quantas transações similares definem um padrão?"
              right: "Muitas"
              left: "Poucas"
            parameter_2:
              title: "Quão similar as transações devem ser para definir um padrão?"
              right: "Muito"
              left: "Pouco"
        previous: "Relatório de anomalias"
        next: "Configurações avançadas"
      advanced_settings:
        title: "Padrões de transações - Configurações avançadas"
        description: "Aprenda a configurar o intervalo de tempo para procurar por padrões."
        paragraph_1: "Ao acessas a aba de configurações avançadas, você verá uma tela similar a esta:"
        image_1: "<img src='/img/pt-BR/guides/transactions_patterns/advanced.png' class='img-tutorial img-polaroid' alt='Anomalies tab' />"
        paragraph_2: "Nesta tela você pode configurar quantos meses passados nosso modelo deve considerar para a criação de padrões para cada aplicação."
        paragraph_3: "Usando a imagem acima como exemplo, vemos que a aplicação <em>emc2.posxml</em> está utilizando transações dos últimos três meses para crirar seu modelo."
        previous: "Gráfico dos padrões"
        next: "Configurando notificações"
      notifications_settings:
        title: "Padrões de transações - Configurando notificações"
        description: "Aprenda a configurar um e-mail ou webhook para receber notificações de transações anômalas."
        table_of_contents:
          interface: "Apresentação da interface"
          setting_email: "Configurando um e-mail"
          setting_webhook: "Configurando um webhook"
        interface:
          paragraph_1: "Isto é o que você encontrará ao acessar a aba de configurações:"
          image_1: "<img src='/img/pt-BR/guides/transactions_patterns/settings.gif' class='img-tutorial img-polaroid' alt='Notifications tab' />"
          paragraph_2: "Nesta tela você pode configurar notificações a serem enviadas por nós caso transações anômalas sejam detectas."
          paragraph_3: "Atualmente, existem dois mecanismos de notificação: e-mail e webhook (via HTTP Post). Você pode ativar um, outro ou ambos."
        setting_email:
          paragraph_1: "Para configurar um e-mail, basta selecionar o tipo da notificação como e-mail e digitar o endereço de seu e-mail no campo apropriado. Se você está registrado em mais de uma companhia, você pode se inscrever para receber notificações de cada uma delas, tendo apenas que acessar essas configurações após o login em cada uma das contas."
          paragraph_2: "Para manter as coisas simples, permitimos o cadastro de apenas um e-mail por companhia. Assim, se você quiser que enviemos notificações para um grupo de pessoas, você pode criar um grupo de e-mail com seu provedor."
        setting_webhook:
          paragraph_1: "Para configurar um webhook, basta selecionar o tipo de notificação como sendo HTTP Post e digitar a URL de seu webhook no campo correspondente."
          paragraph_2: "Se encontrarmos qualquer transação anômala, enviaremos para você uma mensagem JSON com estrutura similar a esta:"
          slack_webhook:
            title: "Recebendo notificações no Slack"
            paragraph_1: "Se você utiliza o <a href='https://slack.com/' class='external'>Slack</a>, podemos enviar notificações de anomalias para um canal configurado em sua conta."
            paragraph_2: "Para usar esse serviço, você deve configurar um <a href='https://cloudwalk.slack.com/services/new/incoming-webhook' class='external'>Incoming WebHook</a> em sua conta no Slack. Nesse processo você receberá uma URL para o webhook, algo como <code>https://hooks.slack.com/services/BUnCh0F/A1PhaNUMERIC/ChARAcT3RSHErE</code>."
            paragraph_3: "O último passo é configurar essa URL no CloudWalk Manager, conforme explicado acima."
            paragraph_4: "Agora você está pronto para receber nossas notificações!"
        previous: "Configurações avançadas"
    emulator_card_swipe:
      title: "Cartões no Emulador"
      description: "Aprenda como utilizar cartões no Emulador CloudWalk"
      table_of_contents:
        introduction: "Introdução"
        creating_cards: "Criando cartões"
        emulating: "Emulando"
        adding_new_cards: "Adicionando novos cartões"
      introduction:
        paragraph_1: "Muitas, se não a grande maioria das aplicações para terminais POS precisam obter informações de cartões, portanto, é extremamente desejável garantir que a aplicação em desenvolvimento funcione perfeitamente mesmo antes de ser instalada em um dispositivo real. Felizmente, a IDE do CloudWalk possui uma forma muito simples de utilizar cartões no emulador! Nesta página, você aprenderá como usá-los. Divirta-se!"
      creating_cards:
        paragraph_1: "Com a IDE aberta no código fonte da sua aplicação, você verá uma barra vertical azul à esquerda, com os ícones das principais funcionalidades da IDE. Nesta barra você vai encontrar um ícone na forma de um cartão. Clique neste ícone:"
        img_1_alt: "Painel e o ícone de cartões"
        paragraph_2: "Irá aparecer um painel com dois cartões. Estes cartões são completamente editáveis e selecionaveis, bastando clicar nos textos para que eles se tornem campos editáveis."
        img_2_alt: "Editando cartões"
        paragraph_3: "Finalizando a edição, clique fora dos campos e as informações serão salvas. O último passo antes de executar a emulação é <strong>clicar no cartão que deseja utilizar</strong>, que ficará destacado em azul. Conforme pode ser observado, existem diversos cartões na lista, e todos eles podem ser editados!"
      emulating:
        paragraph_1: "Agora, vamos emular o comando POSXML <a href='/pt-BR/posxml/commands/getcardvariable' class='command'>getcardvariable</a>, com o seguinte código de exemplo:"
        paragraph_2: "Após clicar no cartão que deseja utilizar (o azul), vá para o emulador e clique no botão <strong>POWER</strong> (verde) para iniciar a aplicação. A emulação demora alguns segundos para iniciar, mas uma vez iniciada, as informações do cartão são rapidamente obtidas, e você pode seguir com testes. Confira esse processo logo abaixo:"
        img_1_alt: "Utilizando um cartão"
      adding_new_cards:
        paragraph_1: "Para adicionar novos cartões, basta editar o último cartão disponível e um novo cartão irá aparecer abaixo instantaneamente!"
        img_1_alt: "Adicionar um novo cartão"
    emulator_serial_ports:
      title: "Portas seriais no emulador"
      description: "Aprenda como utilizar portas seriais no Emulador CloudWalk"
      table_of_contents:
        introduction: "Introdução"
        creating_ports: "Criando portas"
        emulating: "Emulando"
        ports_order: "Ordem das portas"
      introduction:
        paragraph_1: "Algumas aplicações para terminais POS precisam interagir com outros dispositivos através de portas seriais. Este tipo de tarefa pode ser meio complexa, mas nada de outro mundo. Entretanto, você deve estar imaginando como seria possível testar seu código em nosso ambiente de desenvolvimento web (IDE). A web não oferece a possibilidade de utilização de portas seriais, porém, nós desenvolvemos algumas ferramentas para lhe ajudar neste processo."
        paragraph_2: "Você poderá utilizar portas seriais definindo alguns valores, como número da porta, taxa de transmissão e configuração. Sendo assim, ao invés de realizar leituras em memória para receber os dados enviados por outro dispositivo, existirá um local onde a IDE irá ler estes dados, previamente definidos."
      creating_ports:
        paragraph_1: "Ao acessar a IDE, clique no ícone que se parece com uma árvore para abrir o painel de portas:"
        img_1_alt: "Painel e ícone das portas seriais"
        paragraph_2: "No primeiro acesso, será possível ver dois valores que correspondem a duas diferentes configurações de porta (mais sobre isso em seguida). Por agora, vamos criar uma nova porta."
        paragraph_3: "O formulário no painel de portas seriais possui quatro campos. Os três primeiros campos permitem a escolha do número da porta, taxa de transmissão e o valor da configuração. O último campo é utilizado para definir os dados serão lidos a partir da aplicação. Defina suas configurações, clique em <b>Create</b> e a porta será adicionada na lista."
        img_2_alt: "Criando portas"
      emulating:
        paragraph_1: "O seguinte código POSXML pode ser utilizado para ler e escrever nas portas seriais:"
        paragraph_2: "Abra o painel do emulador e pressione o botão verde <b>POWER</b>. O código irá ler o conteúdo da porta <b>COM2</b>, com taxa de transmissão de <b>1200</b>, na configuração <b>A701</b>. Em seguida, o código irá escrever <b>CloudWalk</b> nesta mesma porta, e por último, realizará uma nova leitura, recuperando o valor que acabou de ser escrito. Confira abaixo:"
        img_1_alt: "Leitura e escrita na porta serial"
      ports_order:
        paragraph_1: "Os botões localizados logo abaixo das portas permitem alterar a ordem das mesmas, e também removê-las. Os ícones são bem intuitivos. Confira o exemplo abaixo:"
        img_1_alt: "Movendo e excluindo portas"
    using_http_headers:
      title: "Utilizando headers HTTP"
      description: "Aprenda como utilizar cabeçalhos (headers) HTTP com POSXML"
      table_of_contents:
        introduction: "Introdução"
        app_sample: "Aplicação de exemplo"
      introduction:
        paragraph_1: "Requisições HTTP podem utilizar cabeçalhos (headers) para descrever propriedades da requisição, como autenticação, tipo de conteúdo, etc. Nesta página, você aprenderá como usá-los. Divirta-se!"
      app_sample:
        paragraph_1: "A aplicação de exemplo monta o <span class='code'>buffer</span> com a requisição HTTP (método, cabeçalhos, caminho e payload), converte o <span class='code'>buffer</span> para hexadecimal e o envia para o host, através do comando <a href='/pt-BR/posxml/commands/network.send' class='command'>network.send</a>. Em seguida, são requisitados 4 bytes, referente ao tamanho da resposta, através do comando <a href='/pt-BR/posxml/commands/network.receive' class='command'>network.receive</a>, e após a validação, a resposta completa é requisitada."
        note: "Atente-se aos espaços, pois algumas variáveis serão concatenadas!"
    dynamic_button_configuration:
      title: "Utilizando configuração dinâmica de teclas"
      description: "Utilizando configuração dinâmica de teclas"
      table_of_contents:
        introduction: "Introdução"
        default_configuration: "Configuração padrão"
        dynamic_configuration: "Configuração dinâmica"
        app_sample: "Exemplo da aplicação"
      introduction:
        paragraph_1: "O terminal POS possui teclas padrão para executar ações como: abrir a lista de aplicações ou executar uma aplicação caso a mesma exista. A tecla <em>paperfeed</em> é utilizada para mandar um sinal à impressora e adicionar uma linha em branco e uma tecla para abrir o menu de configurações CloudWalk. Caso desejar alterar estas teclas para customizar o comportamento do terminal você deve seguir os passos abaixo:"
      default_configuration:
        paragraph_1: "Abaixo estão as teclas padrão para cada dispositivo:</br></br><b>executeapp</b> = null</br><b>appname</b> = null</br><b>enter</b> = KEY_ENTER"
        paragraph_2: "Modelo de terminal"
        paragraph_3: "paperfeed"
        paragraph_4: "cloudwalkconfig"
      dynamic_configuration:
        paragraph_1: "Edite o arquivo <em>keys.dat</em> para customizar o layout:</br></br><b>paperfeed</b> = adiciona uma linha em branco ao papel.</br><b>enter</b> = executa sua aplicação, caso houver mais de uma será mostrada uma lista de aplicações.</br><b>cloudwalkconfig</b> = entra no menu de configuração CloudWalk.</br>
        </br>Se desejar vincular uma tecla para executar uma aplicação em particular, você pode editar os parametros abaixo, como nome da aplicação juntamente com a tecla que a executará.</br>
        </br><b>executeapp</b> = tecla para executar a aplicação
        </br><b>appname</b> = nome da aplicação
        </br></br>Exemplo:"
        paragraph_2: "E se desejar voltar as configurações padrão basta deletar o arquivo <em>keys.dat</em> file."
      app_sample:
        paragraph_1: "O exemplo a seguir pode ser usado para testar a configurações de teclas dinâmicas:"
  help:
    faq:
      description: "As perguntas mais frequentes sobre o serviço CloudWalk"
      title: "Perguntas frequentes sobre a CloudWalk"
      table_of_contents:
        device: "Dispositivo"
        development: "Desenvolvimento"
        communication: "Comunicação"
        cloudwalk: "Contratos e serviços"
      device:
        question_1: "Como faço para configurar a comunicação de um dispositivo?"
        answer_1:
          paragraph_1: "Existe um assistente interativo que irá guiá-lo através de todo o processo de configuração:"
          paragraph_2: "Primeiramente, pressione o botão <strong>Função</strong> do dispositivo (<span class='code'>F</span> para Ingenico, <span class='code'>F1</span> para Verifone);"
          paragraph_3: "Digite a senha (a senha padrão é <span class='code'>55555</span>);"
          paragraph_4: "No menu de configuração, selecione a opção <strong>DEVICE SETTINGS</strong>;"
          paragraph_5: "Em seguida, selecione a opção <strong>COMMUNICATION</strong>;"
          paragraph_6: "Agora você pode escolher o tipo de comunicação e preencher as informações solicitadas."
        question_2: "Posso adicionar novos arquivos (imagens, texto, etc) a um dispositivo?"
        answer_2:
          paragraph_1: "Sim. Este procedimento é realizado em quatro passos:"
          paragraph_2: "Vá para a seção de gerenciamento de <a href='https://manager.cloudwalk.io/files'>Arquivos</a> e faça o upload dos arquivos;"
          paragraph_3: "Vá para a seção de gerenciamento de <a href='https://manager.cloudwalk.io/apps/posxml'>Aplicações</a> e <strong>edite</strong> a aplicação que irá utilizar estes arquivos;"
          paragraph_4: "Selecione os arquivos na lista de <strong>Arquivos da aplicação</strong> e atualize a mesma;"
          paragraph_5: "Agora, assumindo que o dispositivo está associado com a aplicação que você acabou de adicionar os arquivos, basta atualizar o dispositivo e os novos arquivos serão baixados."
        question_3: "Como faço para limpar um dispositivo?"
        answer_3:
          paragraph_1: "Primeiramente, pressione o botão <strong>Função</strong> do dispositivo (<span class='code'>F</span> para Ingenico, <span class='code'>F1</span> para Verifone);"
          paragraph_2: "Digite a senha (a senha padrão é <span class='code'>55555</span>);"
          paragraph_3: "No menu de configuração, selecione a opção <strong>CLOUDWALK</strong>;"
          paragraph_4: "Em seguida, selecione a opção <strong>DELETE APPS</strong>;"
        question_4: "Qual é o dispositivo mais adequado para minhas necessidades?"
        answer_4: "Isso depende do projeto, mas em geral, antes de comprar um dispositivo, certifique-se de que o mesmo cumpre os requisitos do projeto. Por exemplo, se a mobilidade é um fator importante, um dispositivo com <strong>GPRS</strong> deve ser adquirido. Também é necessário ter certeza de que o dispositivo é compatível com o serviço CloudWalk."
        question_5: "Quais dispositivos são compatíveis com o serviço CloudWalk?"
        answer_5: "Confira lista de <a href='https://docs.cloudwalk.io/pt-BR/introduction/framework#approved-devices'>dispositivos homologados</a>."
        question_6: "É possível ter várias aplicações no mesmo dispositivo?"
        answer_6:
          paragraph_1: "Sim, isso é perfeitamente possível, pois os dispositivos CloudWalk estão preparados para lidar com qualquer quantidade de aplicativos POSXML. Se um dispositivo for configurado para ter acesso a uma única aplicação, quando o botão <strong>verde</strong> é pressionado, essa aplicação é automaticamente iniciada. No entanto, se o dispositivo tem acesso a múltiplas aplicações, quando o botão <strong>verde</strong> é pressionado, um menu com a lista de todas as aplicações é exibida, para que você possa escolher uma delas para iniciar."
          paragraph_2: "A seção de gerenciamento de <a href='https://manager.cloudwalk.io/groups'>Grupos</a> define quais aplicações devem ser acessíveis em um determinado grupo. Depois de configurado, qualquer quantidade de números lógicos podem ser atribuídos a esse grupo, através da seção de gerenciamento de <a href='https://manager.cloudwalk.io/logical-numbers'>números lógicos</a>."
        question_7: "Como faço para configurar uma integração simples entre um dispositivo e um host?"
        answer_7: "Confira o <a href='https://docs.cloudwalk.io/pt-BR/integration/http'>exemplo de integração HTTP</a>."
        question_8: "Qual é a senha para acessar o menu de configuração?"
        answer_8: "A senha padrão é <span class='code'>55555</span>."
        question_9: "É possível alterar a senha padrão do menu de configuração?"
        answer_9: "Sim, confira o <a href='https://docs.cloudwalk.io/pt-BR/framework/configuration/change-password'>guia de alteração de senha</a>."
        question_10: "Como faço para verificar o número de série do dispositivo e onde registrá-lo?"
        answer_10:
          paragraph_1: "Primeiramente, pressione o botão <strong>Função</strong> do dispositivo (<span class='code'>F</span> para Ingenico, <span class='code'>F1</span> para Verifone);"
          paragraph_2: "Digite a senha (a senha padrão é <span class='code'>55555</span>);"
          paragraph_3: "No menu de configuração, selecione a opção <strong>DEVICE SETTINGS</strong>;"
          paragraph_4: "Em seguida, selecione a opção <strong>SERIAL NUMBER</strong>;"
          paragraph_5: "O registro do número de série é feito através da seção de gerenciamento de <a href='https://manager.cloudwalk.io/devices'>Dispositivos</a>."
        question_11: "Como faço para redefinir o certificado já instalado em terminais Verifone EVO?"
        answer_11: "Entre em contato com seu fornecedor de terminais POS e solicite o arquivo de reset, que deverá ser utilizado em seguida para redefinir o certificado."
        question_12: "O que pode estar impedindo o dispositivo de baixar um novo arquivo?"
        answer_12:
          paragraph_1: "Verifique os seguintes pontos:"
          paragraph_2: "Se for uma aplicação ou um módulo, certifique que o deploy foi bem sucedido;"
          paragraph_3: "Se for um arquivo comum ou uma imagem, certifique que o upload do arquivo ocorreu com sucesso. Você pode também limpar o cache do navegador e fazer o upload do arquivo novamente, para ter certeza que não foi nenhum problema no navegador."
      development:
        question_1: "O que é o CloudWalk Manager?"
        answer_1: "O <a href='https://manager.cloudwalk.io'>CloudWalk Manager</a> é a ferramenta utilizada para liberar dispositivos, cadastrar aplicações, arquivos, números lógicos e grupos. É também através do CloudWalk Manager que é feita a gestão de usuários e por onde é realizado o monitoramento das transações efetuadas."
        question_2: "Como é o ambiente de desenvolvimento CloudWalk?"
        answer_2: "Confira a <a href='/pt-BR/ide/overview'>visão geral</a> da IDE!"
        question_3: "O que é POSXML?"
        answer_3:
          paragraph_1: "POSXML (acrônimo para <strong>P</strong>oint <strong>O</strong>f <strong>S</strong>ale e<strong>X</strong>tended <strong>M</strong>arkup <strong>L</strong>anguage) é uma linguagem de programação utilizada para criar aplicações para terminais POS."
          paragraph_2: "No desenvolvimento de aplicações para terminais POS, utilizam-se normalmente as linguagens de programação C ou C++, que exigem um conhecimento profundo tanto da especificação técnica do equipamento (hardware) quanto da linguagem de programação."
          paragraph_3: "O objetivo principal da linguagem POSXML é simplificar o desenvolvimento de aplicações para os terminais POS, oferecendo um conjunto de instruções e de comandos pré-programados que permitem a interação direta com o dispositivo, resultando em uma grande redução no tempo de desenvolvimento de uma aplicação."
        question_4: "Qual é o tamanho máximo de uma String em POSXML?"
        answer_4: "O tamanho máximo de uma <a href='https://docs.cloudwalk.io/pt-BR/posxml/commands/stringvariable'>String</a> é 1024 bytes."
        question_5: "Existem caracteres ou palavras reservadas na linguagem POSXML?"
        answer_5: "Para mais informações, confira a <a href='https://docs.cloudwalk.io/pt-BR/posxml/structure'>estrutura da linguagem POSXML</a>."
        question_6: "O serviço CloudWalk suporta o padrão ISO8583?"
        answer_6:
          paragraph_1: "Sim. A linguagem POSXML e o serviço CloudWalk são compatíveis com o padrão ISO8583. Diversas aplicações CloudWalk já foram desenvolvidas e foram devidamente integradas com servidores ISO8583."
          paragraph_2: "Você precisa de ajuda? <a href='https://www.cloudwalk.io/contact'>Entre em contato</a> e ficaremos felizes em te ajudar!"
        question_7: "Existe um arquivo bitmap.dat de exemplo para transações ISO8583?"
        answer_7: "Sim, existe um <a href='https://dl.dropboxusercontent.com/u/436039/cloudwalk/util/iso8583/bitmap.dat'>exemplo de bitmap.dat</a> que você pode utilizar como ponto de partida, mas lembre-se de verificar e atualizar os parametros e os tipos de cada bit de acordo com a espeficicação ISO8583 do seu servidor, antes de baixar o arquivo para os seus dispositivos."
        question_8: "Existe uma lista completa de comandos POSXML?"
        answer_8: "Sim, existe uma <a href='https://docs.cloudwalk.io/pt-BR/posxml/commands'>lista completa</a> de comandos POSXML. Entretanto, se você estiver com dificuldade em descobrir como lidar com uma situação específica, <a href='https://www.cloudwalk.io/contact'>nos envie uma mensagem</a> que iremos lhe ajudar!"
        question_9: "Como faço para definir uma imagem de fundo personalizada no dispositivo?"
        answer_9:
          paragraph_1: "Devido a diversidade de dispositivos suportados pelo serviço CloudWalk, para usar uma imagem de fundo personalizada (background), é necessário seguir um conjunto de regras a fim de alcançar os melhores resultados para um dispositivo em particular."
          table:
            header:
              model: "Modelo do dispositivo"
              type: "Tipo do bitmap"
              filename: "Nome do arquivo"
              sample: "Exemplo"
            content:
              view: "Visualizar"
          paragraph_2: "Depois de criar a sua imagem personalizada, siga estes passos:"
          paragraph_3: "Vá para a seção de gerenciamento de <a href='https://manager.cloudwalk.io/files'>Arquivos</a> e faça o upload da imagem, seguindo a nomenclatura da tabela acima."
          paragraph_4: "Vá para a seção de gerenciamento de <a href='https://manager.cloudwalk.io/apps/posxml'>Aplicações</a> e <strong>edite</strong> sua aplicação;"
          paragraph_5: "Na lista de <strong>Arquivos da aplicação</strong>, selecione o arquivo bitmap previamente submetido e atualize a aplicação;"
          paragraph_6: "Agora, assumindo que o dispositivo está associado com a aplicação que você acabou de adicionar a imagem, basta atualizar o dispositivo e o novo background será exibido."
          paragraph_7: "<strong>Observação:</strong> Apenas imagens bitmap (.bmp) são suportadas. Outros formatos como JPG, GIF e PNG não são suportados."
        question_10: "O que é o servidor autorizador (host)?"
        answer_10:
          paragraph_1: "Autorizador é o componente responsável para verificar e validar as informações fornecidas pelos terminais POS."
          paragraph_2: "Leitura complementar: <a href='https://docs.cloudwalk.io/pt-BR/introduction/authorizer'>Autorizador</a>"
        question_11: "Como faço para definir a URL (endpoint) do autorizador?"
        answer_11:
          paragraph_1: "A URL do autorizador é configurada diretamente na aplicação, através dos seguintes passos:"
          paragraph_2: "Vá para a seção de gerenciamento de <a href='https://manager.cloudwalk.io/apps/posxml'>Aplicações</a> e <strong>edite</strong> sua aplicação;"
          paragraph_3: "Defina a URL, que pode ser http, https, tcp, tcps, etc;"
          paragraph_4: "Agora, assumindo que o dispositivo está associado com a aplicação que você acabou de definir a URL do autorizador, você já está pronto para realizar os testes, e a nova URL será utilizada no encaminhamento das transações."
        question_12: "É possível definir várias URLs em uma mesma aplicação?"
        answer_12:
          paragraph_1: "Não. Uma aplicação só pode ser associada a uma única URL. Note que os módulos em uso pela aplicação utilizam automaticamente a URL da aplicação."
          paragraph_2: "No entanto, se você precisa que a mesma aplicação se comunique com várias URLs, você pode seguir estes passos:"
          paragraph_3: "Crie a aplicação principal (por exemplo, myapp.posxml) apontando para uma das URLs (por exemplo, https://my-endpoint.com);"
          paragraph_4: "Crie uma nova aplicação (por exemplo, activation.posxml) apontando para uma outra URL (por exemplo, https://activation.com), e nesta aplicação, o <strong>Rótulo</strong> deve ser definido como <span class='code'>x</span>, indicando que esta aplicação não deverá ser exibida. Observe que esta aplicação deve ser responsável pelo workflow completo de comunicação, incluíndo <span class='code'>preconnect</span>, <span class='code'>network.send</span>, <span class='code'>network.receive</span> e <span class='code'>network.hostdisconnect</span>;"
          paragraph_5: "Repita o passo anterior enquanto for necessário, criando aplicações ocultas para todas as URLs;"
          paragraph_6: "Agora, na aplicação principal (myapp.posxml), você pode utilizar o comando <a href='/pt-BR/posxml/commands/execute' class='command'>execute</a>, que irá executar uma de suas aplicações ocultas, comunicando-se com a URL desejada."
        question_13: "O serviço CloudWalk possui uma API?"
        answer_13: "Sim! Confira a seção <a href='/pt-BR/api/overview'>API</a> para obter maiores informações."
      communication:
        question_1: "Quais os tipos de comunicação suportados?"
        answer_1: "Isso depende do dispositivo, mas, em geral, os tipos de comunicação Ethernet, GPRS e discado são suportados."
        question_2: "Como faço para configurar o meu dispositivo Ethernet para usar DHCP?"
        answer_2: "Isso é muito simples! Basta definir o IP do dispositivo para <strong>0.0.0.0</strong>, que após reinicia-lo, um IP deverá ser automaticamente atribuído a ele."
        question_3: "Ao utilizar GPRS, que APN, usuário e senha devem ser definidos?"
        answer_3:
          paragraph_1: "Primeiramente você precisa verificar se o seu chip GPRS utiliza APN pública ou privada. Você pode obter esta informação diretamente com o fornecedor do chip."
          paragraph_2: "Se você adquiriu o chip através de uma empresa de telecomunicações, como Lyra Network, ele provavelmente irá usar APN privada, caso contrário, ele deverá usar APN pública. O <strong>nome de usuário</strong> e a <strong>senha</strong> são informações que também devem ser solicitadas com o seu fornecedor."
          paragraph_3: "Clientes brasileiros podem utilizar os provedores pré-configurados (CLARO, TIM, OI, VIVO, LYRA, etc), porém, clientes fora do Brasil devem escolher a opção <strong>Other operator</strong> e inserir manualmente as informações."
        question_4: "Por que o meu dispositivo não está se conectando?"
        answer_4:
          paragraph_1: "Em geral, você pode assumir que o serviço CloudWalk está sempre disponível. Se você não tem certeza, basta verificar a <a href='http://status.cloudwalk.io/'>página de status</a>. Sendo assim, assumindo que o serviço CloudWalk está disponível, os problemas de comunicação devem estar relacionados com o seu <strong>POS</strong>, sua <strong>infra-estrutura</strong> ou algum tipo de <strong>configuração</strong>."
          pos_problems:
            title: "Problemas no POS"
            paragraph_1: "Ao solucionar problemas de comunicação, é essencial reduzir o leque de possibilidades, e você deve começar pelo seu dispositivo, de forma a ter certeza de que o mesmo está funcionando corretamente."
          infrastructure_problems:
            title: "Problemas de infra-estrutura"
            paragraph_1: "Depois de se certificar de que o seu dispositivo está funcionando corretamente, o próximo passo é verificar sua infraestrutura."
            paragraph_2: "Verifique se o seu autorizador (host) está ativo e respondendo à solicitações."
            paragraph_3: "Para dispositivos Ethernet e wi-fi, certifique-se que sua conexão de rede está ativa e verifique se você pode acessar a Internet com um notebook ou um smartphone nesta mesma rede."
            paragraph_4: "Para dispositivos Ethernet e wi-fi, certifique-se de que não há restrições ou regras (firewall) na rede que possa bloquear a conexão do dispositivo."
            paragraph_5: "Para dispositivos Ethernet e discado, certifique-se de que o cabo não está danificado e que ele está conectado corretamente em ambas extremidades."
            paragraph_6: "Para dispositivos GPRS, certifique-se de que há sinal e verifique se o chip está funcionando normalmente (tente em outros dispositivos). Se o chip for pré-pago, verifique se o mesmo possui crédito."
          configuration_problems:
            title: "Problemas de configuração"
            paragraph_1: "Partindo do princípio de que o problema não está relacionado com o seu dispositivo (problema físico) e que sua infraestrutura está funcional, o problema só pode estar relacionado com algum tipo de configuração:"
            paragraph_2: "Certifique-se que o número de série do dispositivo está devidamente registrado no gerenciamento de <a href='https://manager.cloudwalk.io/devices'>Dispositivos</a>."
            paragraph_3: "Para dispositivos Ethernet e wi-fi em uma rede com DHCP, o endereço IP deve ser <span class='code'>0.0.0.0</span>, de forma que o IP seja atribuído pelo cliente DHCP."
            paragraph_4: "Para dispositivos Ethernet e wi-fi, certifique-se que os valores corretos foram definidos para Network Mask (ex: <span class='code'>255.255.255.0</span>), Gateway (ex: <span class='code'>192.168.1.1</span>), DNS 1 (ex: <span class='code'>8.8.8.8</span>), DNS 2 (ex: <span class='code'>8.8.4.4</span>) e SSL (ex: <span class='code'>0</span>)."
            paragraph_5: "Para dispositivos GPRS, verifique a configuração da APN. Talvez seja necessário entrar em contato com o seu provedor de telecomunicações para se certificar que tudo está correto."
      cloudwalk:
        question_1: "O que é uma transação?"
        answer_1:
          paragraph_1: "Uma transação se caracteriza por toda e qualquer mensagem de dados proveniente de qualquer equipamento homologado e certificado com o CloudWalk Framework, com uma ou mais aplicações operacionais, integradas ao nossos servidores e demais autorizadores, via telecomunicação aplicável."
          paragraph_2: "Note que todas as transações estão em conformidade com os padrões PCI e demais protocolos de segurança da CloudWalk, e as mesmas são sigilosas e de acesso exclusivo do cliente."
        question_2: "CloudWalk vende terminais POS?"
        answer_2: "Não, a CloudWalk oferece apenas o serviço. No entanto, se você precisa comprar terminais POS, <a href='https://www.cloudwalk.io/contact'>entre em contato</a> que ficaremos felizes em ajudar!"
        question_3: "O servidor autorizador é incluído no serviço CloudWalk?"
        answer_3: "Não, o desenvolvimento e a manutenção do autorizador é de responsibilidade do cliente."
