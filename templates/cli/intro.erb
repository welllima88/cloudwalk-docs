<% content_for :docs_description do %>
  <meta name="docs:description" content="short page description">
<% end %>

<h1>Getting Started with CloudWalk's CLI Tool</h1>

<p class="more-info"><%= I18n.t("general.updated_at", :date => "16/09/2014") %></p>

<h4><%= I18n.t("general.index") %></h4>

<ol class="table-of-contents">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#cli">Command Line Interface</a></li>
  <li><a href="#da_funk">CloudWalk's Ruby Framework API</a></li>
  <li><a href="#skeleton">CloudWalk Skeleton</a></li>
  <li><a href="#full-guide">Full Guide</a></li>
</ol>

<h2 id="introduction">Introduction</h2>

<p>
CloudWalk provides you a <i>command line interface</i> tool that
allows you to control your applications in an easy
way. In this guide, you'll learn how to set up your first
application in minutes, and it will empower you to make lightning
fast changes and deploy them directly into your terminals from
the command line interface of your preference.
</p>

<p>
We'll try to be as specific as possible, so feel free to skip the
information that looks irrelevant to you.
</p>

<h2 id="cli">Command Line Interface</h2>

<p>
A command line interface (CLI) is a character user interface that
was initially the only way to access computers (before
<i>graphical user interfaces</i> were invented), but has
prevailed since then as the favorite tool for many developers to
interact with computers. Every operative system still provides
this environment, in windows it's possible to access it through
the cmd terminal (<code>CTRL+R</code> and enter
<code>cmd</code>), in Mac OS it's accessible commonly through the
Terminal (or iTerm) and in GNU/Linux it's usually called Terminal or Xterm.
These boxes contain plenty of commands to interact with the
operative system, many of them are very easy to use, simply using
the command name and other words after it, separated by spaces,
can trigger very powerful effects on your computer.
</p>

<p>We introduce our CLI tool to help you take control over your apps
with as little effort as possible; it's called <b>cloudwalk</b>, and it allows
you (between other things) to compile, emulate and deploy your
applications directly from the CLI.
</p>

<h2 id=#da_funk">CloudWalk's Ruby Framework API</h2>

<p>
The Ruby Framework is built to facilitate your development
experience and is being initially released to work on the PAX platform, and
additional platforms such as Verifone and Ingenico will be supported soon.
</p>

<p>
To let you build amazing Ruby applications, we've made an API
client available within Ruby, that gives you all the methods
you'll need to start developing, making it easy to interact with
the POS terminal's screen, printer, keyboard, network and to
process different types of payments without the overhead of
starting from scratch or using a low level language. This tool is
called <b>DaFunk</b> and it's
<a href="https://github.com/cloudwalkio/da_funk" target="_blank">open source</a>.
We'll teach you some of the ways around it's functions so you can
exploit it's potential, but go ahead and check the repo for full
details.
</p>

<h2 id="skeleton">CloudWalk Skeleton</h2>

<p>
Our CLI will let you create new apps, which will be based on the
<b>cloudwalk-skeleton</b>, a structure that is
<a href="https://github.com/cloudwalkio/cloudwalk-skeleton" target="_blank">open source</a>
too, and could be useful for other projects; be creative!
<p>

<p>
Oh! Let us know your experience; through feedback we grow!
</p>

<h2 id="full-guide">Full Guide</h2>

<p>
Let's rock this! Go ahead into the full guide,
follow the instructions and (with some of our magic) you'll be
making POS applications like hot bread.
</p>

<ul class="pager">
  <li class="next">
    <%= link_to("Let's set it up" + " &rarr;", "cli/set-up") %>
  </li>
</ul>
